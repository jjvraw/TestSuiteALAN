source abba function abba () 
begin
    boolean abba ;     abba , abba , abba ;     abba [-false and not false not false + not true / not 100or ] := array -false or true or 100
; while false rem not not abba do if not 100/ abba - false > false / 100+ false rem false * abba then
    call abba () 

end


end


end

begin
    boolean array abba , abba ;     integer , abba ;     call () 
; abba := array not not false and 100/ true 
; while -abba / not abba [-abba () / not false rem + false and true / not not true ] / 100do     get abba [abba [false and 100and false + false or false / not not false * true ] ] 

end


end
