source abba function abba (integer abba , boolean abba , abba ) 
begin
    boolean array abba     get abba [100rem abba [-not 100* not abba and not abba ) ] - true and not true ] 
; call abba () 

end
function abba (integer abba , integer abba ) to boolean 
begin
    while -100/ 100- abba / not 100* true <= -not 100+ not not true / true do     relax 
end

; call abba () ; get abba 

end

begin
    integer abba , abba ;     integer array abba ;     while not false do relax 
end

; abba [-true and not 100* not not not not 100] := array not 100/ abba () and true 
; abba [100+ not false + true * abba ] := array not abba () - not true rem not not not true * true - abba [-false rem not false + 100+ true and true ] / not true 

end
