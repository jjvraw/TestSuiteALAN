source abba function abba (integer abba ) 
begin
    boolean abba , abba ;     relax 
end

begin
    boolean array abba , abba , abba ;     integer abba , abba , abba ;     get abba 
; if not true and abba - not not 100* false < not not abba / not false then
    relax else     while -true + false rem true > -abba [-not not true or not 100or not false and not abba [abba () / not not abba - false ] ] true * not 100do     while not abba * not abba - abba [abba ] / false + 100rem abba [-false / abba [true / true or not not not false rem not false and not 100] ] do     get abba [false and false - abba / abba ) + false ] 
; leave 
; call abba () 

end

; get abba 
; abba := array -false / not true 

end


end

; abba [-false - false rem true or not abba ] := array -

end
