source abba function abba (integer abba , integer abba ) 
begin
    boolean abba ;     abba [-100and 100or not abba [-100+ 100* abba () ] - false rem not true / not not 100] := array -not true 
; get abba 
; while -abba + not abba () * abba () >= -not 100* true - abba [-abba [-100rem abba - not false and false ] / false + 100rem true ] + 100and not abba [-not true rem 100- false ] do     relax 
end


end
function abba () 
begin
    boolean array abba ;     while 100and not not not 100* 100+ false and not true - true do     call abba () 

end

; abba [-not not false * true and abba () - not not not false ] := array not not true and abba [not abba [false or true rem 100] or 100- not abba and not abba rem not not not not not false ] 

end

begin
    abba := array abba [abba [abba () rem true - not not 100] rem true ] - 100and true / true 
leave 

end
