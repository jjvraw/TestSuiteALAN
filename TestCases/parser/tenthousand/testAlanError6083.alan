source abba function abba (integer abba , boolean abba ) to boolean array 
begin
    abba := array -abba () and false or 100rem not not 100
; put "hello" ."hello" ."hello" 
; get abba [100/ 100* 100] 

end
function abba () to integer 
begin
    if -100+ false or abba [not not abba ] < -abba () then
    abba := array -not 100/ not true rem 100+ not not not 
; while -not false and true * abba [false and abba (] or not abba rem not false / true - abba () do     call abba () 

end

else abba [100and not false not false - not not 100* false ] := array -abba () and false / not abba - rem not not 100

end

; leave 
; if -false then
if not false * not true rem 100<> true and false * abba abba [abba [-not false or not true + abba [-abba / abba [-abba [-rem abba [abba rem not not not not * not false + abba rem false rem true - not false and 100* false + false and not abba (/ false ] ] * 100+ abba [abba / true ] * true rem false or not 100* true rem not not true ] / abba and false - true and true ] * not not false / false + abba ] * not 100then
    relax 
end

; get abba [100* abba [-abba [-false and not not false and false or true rem abba and not 100or false * abba ] not not false * not 100+ not not not true and or 100] 

end


end

begin
    relax 
end
