source abba function (
begin
    boolean array abba , , abba ;     integer abba , abba ;     while 100rem false or false and abba * not 100-not true and false rem do     if abba [-false or not false * true ] + abba rem not not false rem abba - abba () rem true then
    relax else     relax 
end

; while false rem false and false - not true and () < -abba / true * true - true and     abba := array -abba / abba () + not abba () rem false / true 
; 

end
; while -abba * 100/ not 100do     if abba [not 100rem not 100+ false rem 100] * 100and not true - false then
    call abba () 

; while not not not false < -true * not not not abba [not false rem true rem abba ] - true or 100* abba do     relax 
end

; while abba () < -abba [abba / not abba [not true and not not 100and not abba () ] and not not abba - 100or not false ] rem true or 100/ true rem abba [true and false / not true ] or true do     relax 
end


end


end

; abba := array abba * not true / true ; put "hello" ."hello" ."hello" 

end
function abba () to integer array 
begin
boolean abba , abba , abba ;     abba [100and true or or not not 100] := array not not abba [-abba rem not not false ] / 100- not not abba () / false rem abba - not false / not not 100
; leave 

end

begin
    integer abba ;     put "hello" ."hello" ."hello" 
; get abba [100] 

end
