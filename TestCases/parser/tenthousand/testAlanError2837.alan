source abba function abba (integer array abba , integer abba , boolean abba ) to boolean 
begin
    integer abba ;     integer array abba , , abba ;     
end

begin
    integer array abba , abba , abba ;     boolean , abba , abba ;     abba := array not abba () / true rem not false + abba 
; while false - not abba [-[-abba and abba * false + 100/ false - not true and not true ] * false ] do     if true > -abba rem false - not false rem false / false true * abba (/ true then
    relax else     relax 
end

; while 100and not not true / 100or not false and not 100+ not not true do     while -100rem not not true do     while -abba () * true - 100+ not true = -true * abba () and true + false + true do     := array not not not not true rem abba - abba [true / or false or not not 100] rem abba (/ not not not 100
; if -not false / not false and not not abba + abba rem abba / not not abba [false ] + false / true <= false rem not abba () or 100and not abba rem false + * false * false then
    relax 
end

; abba [abba () * not not false and 100or not false / false / false ] := array -false rem not not not false and true - not 100and false 

end


end

; leave 

end

; while true / not 100- true do     relax 
end


end

; not false * true then
    call abba () 
else     get abba 
; get abba [true * 100rem 100+ not not 100rem abba [-false * not 100+ not false / 100] rem not false or true rem abba [abba () / not not 100] and false ] 

end


end
