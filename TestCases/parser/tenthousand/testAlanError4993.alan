source abba function abba () to boolean 
begin
    boolean array abba , abba ;     abba := array 100* true and true + 100and not true rem not false 
; while not not false + 100rem not abba * not 100or true * false do     if -not not false - not false rem not abba [-or abba [-abba [-100* 100+ abba [-not true / 100- 100/ true rem not ] * not not false * 100] * 100/ not 100+ true rem true ] rem 100true ] rem not not false or true / false then
get abba 
; abba := array -true / 100rem true + 100
else     while -not not not not not false / 100or 100/ false do     put "hello" ."hello" 

end

; call abba () 
; if not not 100and 100> -not not abba () then
    put "hello" 
; while -not not abba and not abba < 100do     while true * abba / true do     relax 
end

get abba 

end

else     leave 
; while -not not abba [100/ not true false or rem false rem abba [-abba - abba / ] - not true ] < -abba () and true / 100or not true / 100- not 100/ abba () rem not 100do     relax 
end


end

end

; while -not true rem not false not not abba * 100and not false do     relax 
end

; if -100+ not 100and not not abba or false then
    relax 
end


end

; call abba () 

end

begin
    integer abba , abba ;     boolean abba , abba ;     while -false * false do     while -true / not true - * not not false do     relax 
end

; if -not abba [100- false > -false rem abba or not false and abba rem not not 100then
    if 100* abba [-not false rem not true * false - not false ] - 100    relax 
end

; abba := array -not abba () and abba () rem 100
else     leave 
; put "hello" ."hello" ."hello" 

; put "hello" ."hello" 

end

; call abba () 

end
