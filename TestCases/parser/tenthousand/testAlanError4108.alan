source abba function abba (integer abba , boolean ) 
begin
    integer abba ;     relax 
end
function abba (boolean abba , integer abba to boolean array 
begin
    integer abba , abba , abba ;     integer array abba , abba , abba ;     if -false - not not not 100rem not 100> -abba () then
    relax else     get abba [not true * abba [-not abba [not abba / 100* not 100or false rem not not 100* abba () ] + abba [-false rem false and not not false - not true + true ] and not true * not not not not true ] false - 100/ not abba ] 
; get abba 
; call abba () 

end
:= array not true + false / not not 100

end

begin
    boolean array abba ;     integer abba , abba , abba ;     while abba () and not not true / true >= -not 100rem not not not not abba do     relax 
end


end
