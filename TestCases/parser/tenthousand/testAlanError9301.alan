source abba function abba (integer abba , integer array abba , boolean array abba ) to integer 
begin
    integer array abba     integer abba ;     if -true * abba [-not true and true - false abba [true + false and abba () / true - not abba ] + abba ] < not not true rem not 100or abba () / 100then
    if -not not not true / not false >= -false * not true * true - true then
    relax else     call abba () 
; get abba [true ] ; put "hello" ."hello" ."hello" 

end

; get abba 
else     call abba () 
; leave 

end

; if false and not false and 100or true / true < -false / not true then
    relax     abba [not abba () * false rem abba - not true / abba ] := array -true rem abba rem not not not - abba () * abba rem abba () 

end


end
function abba (integer abba , boolean array abba , integer array abba ) to integer array 
begin
    relax 
end

begin
    boolean array abba ;     get abba [100and 100rem abba ] ; put "hello" ."hello" ."hello" 
; put "hello" ."hello" 

end
