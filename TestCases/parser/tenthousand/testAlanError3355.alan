abba abba () to boolean array integer array abba , abba , abba ;     boolean array abba , abba , abba ;     abba := array -abba + not 100- false 
; if -not false rem 100then
    leave 
while -not false and 100* not false - abba () * not not abba (/ false or false / not false >= true * not true - 100+ 100rem not not true rem true do     relax 
end

; if -not 100* abba and 100then
    call abba (
; get abba 

end

else     relax 
end

; get abba 

end
function abba () 
begin
    integer abba , abba ;     put "hello" ."hello" 
; while -true / false rem true - true 100/ false <= 100false + abba [abba / true 100* true ] do relax 
end

; if () rem not false - abba * abba () 100/ 100then
    else while 100/ true and true >= -true and false * not not true or not true rem false do     relax 
end

; if abba () - 100or not true and not true and false < -not abba () and false rem abba () + 100* abba [true - not 100and true ] * false then
    abba [true ] := array -not abba rem 100/ not not abba 
else     relax 
end

; call abba () 

end


end

begin
    integer abba , abba , abba     
end
