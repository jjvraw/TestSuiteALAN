source abba function abba (integer abba , boolean abba , boolean array abba ) 
begin
    abba , abba , abba ;     boolean abba , abba ;     relax 
end
function abba (boolean array abba , integer abba ) 
begin
    call abba () 
; while 100or false do     abba [-false - 100* abba () true ] := array not false and not false + false rem not / true 
; get abba [-not true true ] 
; call abba ) 

end

; not not true then
    relax 
end


end

begin
    boolean abba , abba ;     integer array abba ;     call abba () 
; while true do     if -not abba () / not true <> -abba / true 100    relax else     while -abba / true - false and false do     relax 
end


end

; abba := array abba 
; if -true / false / 100= abba () / not abba [abba + 100and not abba + 100] then
    relax 
end


end


end
