source function abba () to boolean array 
begin
    if -false / true rem 100< not false * not false then
    while not 100rem abba () rem not false or true or true > -not 100* abba rem false or abba [abba [-false and abba [not not not abba and not not true ] and abba - abba () ] / true or ] true + not do     leave 
; while false / abba () rem 100or not abba [not 100* true and not not false or false not not * not false ] <> not abba * not false rem not 100- not not abba rem true do     call abba () 

end

; abba := array -abba rem 100

end
else     if then
    relax 
end

; put "hello" 
; if -false >= -not 100rem not false * abba () - not abba then
    call abba () 
; call abba () 
; while abba * not not 100do     relax 
end

else     call () 
; leave 
; if -100rem not not not not abba + not not abba * true rem not not not not false or abba < abba [100/ not not false + ] * not abba [not not abba [not not 100rem not abba [-not not abba not not 100/ not not abba [-false / false / not not abba () ] ] * not abba [-abba [false ] and false abba ] ] / true + 100* 100/ false or abba [-100and not true rem false ] ] / true then
    leave 


end


end


end

begin
    integer array abba , abba ;     integer abba , abba ;     if true rem 100and not abba < -true * true + false / not true / not false then
    relax else     if abba () / false or abba () and not not not 100and 100then
    get abba [true not true and abba - false * false or true ] 
; / 100and false - abba >= abba () rem not true - not abba [-not false - not abba ] rem false + true and false and not false do     relax 
end


end

get abba 

end

; put "hello" 
; call abba () 

end
