source abba function abba (integer array abba ) to integer array 
begin
    integer abba , abba ; boolean array abba , abba , abba ;     if -true * abba [not true ] / not true - true rem true * false then
    call abba () 
else     while abba and false + abba do     get abba [true rem not abba () rem true ] 
; get abba [-not not abba 
; leave 

end

; get abba 
; put "hello" ."hello" 

end

; if -100<> -true + not not not false and false - true * false rem false then
    leave 
; leave 
; if -true rem 100or 100and not not not not abba * not abba ) then
    relax 
end


end

call abba () 

end
function abba (boolean array abba , integer array abba , boolean array abba ) to integer array 
begin
boolean array abba , abba ;     integer array abba ;     leave 

end

begin
    boolean abba , abba , abba ;     integer array abba , abba , abba ;     if abba () * false and not false + true - not true then
    relax 
end

; if -abba and true + not false / not 100* true - not not not not 100/ not false >= abba / not not not abba or false + not 100/ false * false then
    relax     abba [-false / not not not abba ] := array not not false 
; if -100- 100and 100rem 100< abba () * true or false then
    relax 
end

; while false and abba rem 100+ true do     if -false / abba [100+ not true / 100and ] and 100then
    if -true / false / abba [not true + abba - true ] or true and true and not not not not false then
    relax else     leave 


end

; leave 
leave 

end


end


end
