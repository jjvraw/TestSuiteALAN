source abba function abba (integer array abba ) 
begin
    boolean abba , abba , abba ;     integer abba ;     
end
function abba (boolean array abba , boolean ) 
begin
    while -100rem true rem true or false * true - false do     while not abba () and true do     call abba () 
; if -not not not abba () / true rem false - not true or not true / false and false then
    get abba 

end


end


end

; if -true / false + abba () - true / not not not false / not true >= 100+ true / true and not true + false / 100and 100then
    relax else     leave 
; abba [abba [100] and abba rem abba () - 100rem 100rem not false + false ] := array not not not true * not true rem not abba [-false rem 100rem not true - not not abba / 100or 100* true ] + 100true 
; get abba [-abba rem true rem true ] 

end


end

begin
    boolean array abba , abba , abba ;     boolean abba , abba , abba ;     relax 
end
