source abba function abba () to boolean array 
begin
    boolean array abba , abba , abba ;     abba [false abba [-abba () + false ] + not 100rem not not not false not not abba ] := array -true + false + rem abba ; call abba () ; call abba () 

end
function abba (boolean abba , integer array abba to 
begin
    integer array abba , abba ;     integer abba , abba , abba ;     while not 100and false * not false or not false + false / 100< -true - not false 100- not not and 100and false do     put "hello" 
; while -true or abba [not abba () rem false - true / abba and false - false and not not not 100rem 100] / not true do     while -false * abba [-abba * false ] <> -not false * false - / 100* abba [-not not not false / false + abba [-not true / 100* not abba + not true / not not not not not true ] - abba () and false * false ] do     put "hello" 
; get abba 
; leave 

end

; while false rem 100/ false - abba () do     abba := array -not abba / abba [100or false rem not not false / 100+ abba and true * not true rem false + 100/ not not abba 
; put "hello" 

end

; "hello" ."hello" 

end

; while not 100rem 100or true * 100>= -abba rem not true - * abba [-false ] and false - true do     relax 
end


end

; while not 100* 100not false rem false + not false / abba and not not 100= true and not false and not true + abba [-not true - abba - not 100* false ] + 100do     put "hello" ."hello" 

end

; leave 

end
    relax 
end
