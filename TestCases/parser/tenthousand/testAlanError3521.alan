source abba function abba () 
begin
    boolean abba , abba , abba ;     integer array abba ;     if -abba () - false >= not not 100rem not false * - abba then
    relax else     relax 
end

; if true or true and false rem abba () then
    put "hello" ."hello" ."hello" 
; call abba () 
else     get abba 
; get abba 
; -false * not false and not 100then
    relax else     relax 
end


end


end

begin
    integer abba , abba , abba ;     boolean array , abba ;     leave 
; put "hello" ."hello" ."hello" 
; while -false and true and false + not true * false and false + not 100/ not not not abba () <= abba () rem true rem abba () do     get abba 
; abba [not not false / not false abba [-not abba ] ] := array not not true and 100/ not not true not not not 
; abba [true and not not not false and abba - abba * false and false or abba [abba rem abba () - false ] rem not 100] := array -false and abba - 100

end


end
