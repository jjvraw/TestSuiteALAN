source abba function abba (integer array abba , integer array abba ) to integer 
begin
    boolean array abba ;     integer array abba , abba , abba ;     get abba 

end
function abba () to boolean 
begin
    boolean array abba , abba , abba ;     abba ; abba [-false rem 100and false + not abba and not not true / 100or true * not not abba [-100and 100- false and not true + not false * not not 100rem not not not 100] rem false ] := array -false / not 100rem 100+ 100rem abba () rem abba - abba and not 100and 100
; if -abba + abba rem true then
    relax 
end


end

begin
    integer array abba ;     boolean abba , abba , abba ;     leave 
; if 100- not false / true not true rem not true = -false rem 100* abba [-100/ true or true ] - not 100and not 100+ false then
    while -true > not false * false / not 100- abba and abba * not 100- not true do     if -not false / false / abba >= 100or false + not true rem not true * false then
    leave 
else     relax 
end

; if -not 100/ not not true and abba - abba / abba rem false     while -true / not false < -false do     while -true rem true * not true <> -100* 100and 100+ true do     relax 
end
; if -not false then
    call abba () 
; call abba () 
; call abba () 

end


end

; put "hello" "hello" ."hello" 

end


end

; get abba 
; while 100* true / not true or not not true abba rem not not not abba () or not not true and 100rem 100do     relax 
end


end

; get abba [100- not 100/ not not true ] 

end
