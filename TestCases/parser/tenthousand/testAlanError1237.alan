source abba function abba () to boolean 
begin
    put "hello" ."hello" ."hello" 
; while false / not true and false or 100and false <> -and abba / abba [not true + not not abba [abba () ] rem not abba ] - not 100rem false / or true and 100do     call abba () 

; if abba (> not not true and abba or not 100then
    call abba () 
else     abba := array -100rem 100/ false + not false 
; while false and not rem false or true / not false or not abba <> not 100/ false or abba and 100- true * 100* abba do     while false rem 100or not abba () and true / abba >= -false * 100/ not not 100+ not false * true / abba [not true * abba ] do     get abba [abba - 100and 100/ not not not false + not / 100] 
; abba := array -not false or not 100- abba [abba / not true and true - not not true + false / abba [-not true and abba () or 100- true ] ] not not not not false * not abba () 
; abba [-100and not true - not not false + false ] := array 100

end

; if 100rem 100then
    abba [-not not abba not false := array 100* 100
else     while not true or abba rem abba / true do     relax 
end

; while -100rem abba () rem false or not 100* abba ) <> -false / not false do     abba [100] := array not abba [not not 100and * true or true / true + true / not true * 100] 
; abba := array abba [not abba ] rem true + not true rem not not not abba rem abba ; abba [-true or not 100rem 100100] := array not false / 100and 100- false / true or not abba () 
end


end
; while -not true and not 100or 100or not abba rem true rem abba < abba [-not 100+ 100] + 100/ 100do     call abba () 
; abba 

end


end

; get abba [-true and not not not not 100and true - not false + not false ] 

end


end
function abba (boolean array abba , integer abba , integer array abba ) to     array abba ;     while -not true and 100rem not false + true / 100/ abba <= false / abba () - 100and not false do     leave 

end

; while -false do     get abba [100] 

end

; put "hello" ."hello" ."hello" 

end

begin
    relax 
end
