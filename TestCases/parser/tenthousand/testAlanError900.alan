source abba function abba () to boolean 
begin
    boolean abba , abba , abba ;     relax 
end
function abba (integer array abba , integer abba )     put "hello" ."hello" 
; if not false / not false >= not not false * abba rem not 100or false then
    relax 
end

; call abba (

end

begin
    boolean array abba ;     integer array abba , abba , abba ;     while -not not do     abba := array -abba / abba () + not true - 100and / true 
; not false / 100/ true - 100rem abba [not true + not true ] * abba [-false ] or abba () rem false rem false do     get abba [-not abba () + true / not false ] 
; leave 
; get abba 

end

; if not abba or not true - not abba [abba () - abba ] / not true = false * false or true / false then
    get abba [not not false and true / not 100or not abba rem / true ] 
; while -false / 100and abba < -true * not 100and false + not false * true - true / true do     relax 
end


end


end

; call abba () 

end
