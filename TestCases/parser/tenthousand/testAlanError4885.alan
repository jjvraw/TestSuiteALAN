source abba function abba () 
begin
    integer abba , abba ;     leave 
; if -true / 100/ 100= -abba [-100abba [-100] / 100/ not not not abba [abba (/ false - true * [-abba and true * not not not not not true - true ] ] - not not not false * false * abba (] / abba () and false - not false then
    if -true * not abba [100rem true rem not not not false or true * false ] + 100< not not true and true and false - true then
    relax else     if -true and not true * not false + abba * true - 100then
    "hello" ."hello" 
else     call abba () 
; while -not < -abba () / true do     get abba [100] 

end

; get abba [not not not not not true not 100rem false - not false ] 

end

; while -true * abba + false rem abba and abba [-100+ true rem true and not true ] - do     relax 
end

; put "hello" 

end

else     relax 
end


end

begin
    boolean array abba , abba , abba ;     abba := array not not true rem abba [not not false * 100+ 100and false * () ] / not abba + true or abba 

end
