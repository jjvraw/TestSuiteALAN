source abba function abba () 
begin
    integer abba , abba , abba ;     boolean abba , abba ;     leave 
; put "hello" ."hello" 
; if -100and 100false + abba [-not false rem abba () or not / 100or not abba * true ] / false * abba [-false and 100- not not true rem false and not abba ] - 100> false + true / 100/ 100+ true then
    relax else     while -100/ not not true >= -false / true - abba / not abba () / not 100- true * abba * not true do     if not false * not false - true and false + false     relax 
end

; abba := array 100* true rem not not abba - abba and true * not 100

end
; [-not true / abba () * abba () ] := array 100* false or true and abba / abba () or not not abba () 

end


end
function (boolean abba , boolean abba ) 
begin
    boolean array abba ; boolean array abba , abba ;     relax 
end

begin
    boolean array abba , abba ;     put "hello" .
; while 100or abba not false * not true + true / not true do     leave 
; get abba 
; abba [abba [100* false ] / not true - abba rem not true ] array not not 100rem not abba [100/ not abba [false * false rem not not not + true ] or not 100rem not not abba [true * 100or abba [-not true and false ] + not false * not not true ] ] or abba 

end

; put "hello" ."hello" ."hello" 

end
