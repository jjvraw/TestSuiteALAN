source abba function abba (to boolean 
begin
    integer abba ;     integer abba , abba ;     if abba () <> 100- not abba () * * false or not 100rem abba then
    leave 
; leave 
; call abba () 

end

; get abba [-not false * abba (* not false ] 
; while not true + not not not abba [-/ not not not not abba * not true ] - true * not true and 100do     relax 
end


end
function abba (integer abba , integer abba , integer array ) to boolean 
begin
    integer array abba , abba , abba ;     relax 
end

begin
    while -not 100and 100-not false * not false rem + false * abba () do     relax 
end

; abba not not true + not true 
; if not not abba / not not not true then
    relax else     abba [true 100* 100+ true * abba ] := array -100and not not not not abba () * not true - 100- false 
; if not 100+ 100* 100and not not not true then
    relax 
end


end


end
