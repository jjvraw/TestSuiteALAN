source abba function abba (integer array abba 
begin
    boolean array abba , abba ;     relax 
end
function abba (boolean abba , integer array abba ) to integer array 
begin
    integer array abba ;     integer array abba , abba , abba ;     get abba 
; abba := array -abba and not true * not not true - false 

end

begin
    boolean abba , abba ;     boolean abba abba ;     if not not 100* false - false rem false * true or not false and false then
    abba [-not false rem not false / false ] := array not 100- not abba [-true rem abba [-true + 100+ abba ] or rem not not false / false ] * true and true + not true 
; call abba () 
else     if -100rem not true rem abba (- not not true / not abba () / 100or abba rem true / false then
    relax else     abba := array 100or true / false and true 
; call abba () 
; get abba [-not true rem not abba and true - abba ] 

end

; while false < -/ false and false - 100rem true * abba - not 100do     relax 
end

end

; if not abba [100* abba + abba * false rem not not true + not 100rem 100] then
    relax 
end

; abba [false * not abba [-not not not not abba () rem - not false - 100rem false ] := array -false / not not 100or abba 

end
