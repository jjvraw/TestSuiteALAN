source abba function () 
begin
    boolean array abba , abba , abba ;     leave 
; while true * abba or not not not not true do     get abba 
; call abba () 
; abba () 

end
; get abba 

end
function () 
begin
    integer abba integer array abba , abba , abba ;     put "hello" .
; put "hello" ."hello" ."hello" 

end

begin
    boolean abba ;     get abba [100+ false or 100/ not abba ] 
; call abba () 
; if not false / true rem abba or not not not not false and 100* not abba then
    if -true / abba * not not not true or false * false * not true then
    relax else     call abba () 
; if true or false then
    relax else     get abba 
; call abba () 
; while -true or not 100and abba or do     if -false and not 100= -false + true then
    relax 
end

; if -not 100and true then
    relax 
; put "hello" ."hello" ."hello" 

end

end


end

; if -false and true / not 100or false <= -false + abba * true then
    call abba () 
else     put "hello" ."hello" 
; get abba [abba and abba true - not abba rem abba [-not true and 100+ abba [not false * false ] * true ] * not 100] ] 
; put "hello" ."hello" ."hello" 

end

; get abba 
else     while -true > -not false - abba or true do     relax 
end

; -abba + not true do     relax 
end

; while -abba * not not false do     abba := array 100rem not not 100* true 

end


end


end
