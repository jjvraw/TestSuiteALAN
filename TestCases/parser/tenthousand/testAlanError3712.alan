source abba function abba (boolean abba , integer abba , integer abba ) to integer 
begin
    integer array abba , abba , abba ;     while abba * not not true / true + 100rem not 100and true or not 100do     relax 
end

; abba [-false rem true * false - true + not 100/ abba () * not false ] := array -true rem not false - abba * not true - 100rem not true * false 

end
function abba (integer abba , boolean array abba ) 
begin
    integer array abba ;     boolean array abba , , abba ;     abba [-not not true and not not true + 100+ not true rem not true ] := array abba () * not not not not or false and false 
call abba () 
; call abba () 

end

begin
    integer array abba , abba , abba ;     if abba - not true > -not false * true + 100then
    get abba 
; put "hello" ."hello" 
; put "hello" ."hello" ."hello" 
else     relax 
end

; put "hello" ."hello" ; get abba [abba [false / not false ] and not 100+ 100] 
end
