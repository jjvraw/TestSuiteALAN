source abba function abba boolean array abba , integer abba , integer abba ) 
begin
    integer array abba ;     integer array abba , abba ;     while false rem true / false - false and not 100* 100abba () * abba [abba and abba [-100] ] <> not false rem abba () do     if 100* not not false + true / false < not not true * false + not abba () or 100then
    relax else     relax 
end

; get abba [not 100/ not abba [abba [-true * not not false ] / true + abba ] rem abba [false / false or not 100] - not false + not not abba [100/ 100] ] 
; abba [false * abba and not abba ] := array not abba true or 100rem not () or not not 100* true rem not 100

end

; leave 
; if abba () * false - not false - abba < not false and false * true then
    leave 
else     call abba () 
; get abba 
; abba [-false rem not not true / not not not 100or true rem false ] := array -true or not true / 100* false or true rem 100

end


end
function abba () 
begin
    leave 

end

begin
    integer array abba , abba , abba ;     boolean abba , abba ;     relax 
end
