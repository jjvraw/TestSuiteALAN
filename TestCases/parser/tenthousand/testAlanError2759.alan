source abba function abba () 
begin
    integer abba ;     if not true then
    call abba () 

end

call abba () 
while -not abba / not not not not false rem not false + not abba + not true <= -not abba / not false do     leave 
; abba [-not true and 100not false - not 100* not not false * not not true ] array false and 100rem not 100
; abba := array true and rem false - abba -not abba [100rem not 100/ true or false rem true or not false not 100/ false ] and not 100not false / false * not 100] * false and true 

end


end
function abba () to boolean array 
begin
    integer abba , abba , abba ;     boolean array abba ;     put "hello" ."hello" 

begin
    integer array abba , abba ;     boolean array abba , abba ;     get abba 
; while -abba () * true or false - abba [not 100rem not not not abba [-true / not abba - abba rem false ] + 100] <> -100/ true do     call abba () 

end

; abba [abba / not not 100] := array false * true or true 

end
