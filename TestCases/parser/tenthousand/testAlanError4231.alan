source abba function abba () 
begin
    integer abba , abba , abba ;     if abba then
    while 100and not 100* not not false or not true + [abba rem abba and true ] do     while true not and false do     if not not 100+ true / not false rem false = -false and abba [-abba and not not not abba [() * false or false and false + false ] / not false not false / abba - false * true and not not abba ] or not false or true then
    relax else     call abba () 
; if not not 100/ true or not abba [-100true or false * abba [100or not 100and true and abba () + not 100] * false ] and true * false then
    relax 
end


end

; while -false / () <> -not false false + not false rem true or not true and abba / 100do     
end


end

; if -not abba () and not true * false then
    relax 
end

; get abba [abba and true * true + true + false / not * 100] 

end


end

; call abba () 
; call abba (

end
function abba () 
begin
    integer array abba , abba ;     relax 
end

begin
    relax 
end
