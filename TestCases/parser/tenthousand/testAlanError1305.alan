source abba function abba () to boolean array 
begin
    integer array abba , abba , ;     relax 
end
abba (boolean abba ) 
begin
    boolean abba , abba ;     if -false rem not abba () or not not not not abba ) and false <> not not abba + abba - false * 100then
    if true >= not not not not false and not 100and abba [-- true rem abba or false * not true * true ] - not abba / true or abba [-not false - not 100and not not not 100- false ] then
    relax else     if 100* false then
    call abba () 
; if -not 100+ or 100then
    if -true * not true then
    call () 
; put "hello" 
while not false rem abba / abba > not abba [-not 100true and false or true or true ] / abba - true and false / 100do     while true - 100rem abba not true + true / true / false do     relax 
end

; leave 

end

else     leave 
; [abba - true or false / abba (] := array not true or abba () and abba / true - false * true 

end

    
end

; while not abba () * true <> -not false rem * abba or 100* true + not true * false * 100do     put "hello" ."hello" ."hello" 

end


end

; call () 

end

; call abba () 
; get abba [-true / true ] 
else     relax 
end

; if not not not not 100or true and true then
    
end
; if -not false rem true * 100- 100+ not 100rem not not abba () * true >= 100rem true then
    put ."hello" ."hello" 
; put "hello" ."hello" 
else     relax 
end


end

begin
    leave 
; abba [-100+ 100rem not not false - not not true ] := array -true and false * not not 100+ abba () / not not false * false or false rem 100

end
