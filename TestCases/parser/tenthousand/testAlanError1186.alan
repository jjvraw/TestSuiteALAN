source abba function abba (
begin
    integer abba , abba , abba ;     boolean array abba , abba ;     relax 
end
function abba ) 
begin
    boolean abba ;     relax 
end

begin
    boolean abba ;     integer abba , abba , abba ;     while abba * 100and not true or 100and not not not false rem 100> -true rem not abba abba rem 100or false ] or true and 100and or not abba rem abba () and not not 100do     if -abba >= not abba () rem not abba [-abba () * not abba [true * true + abba [-false and abba ] ] ] or abba () or 100/ abba () * 100then
    call abba () 
; put "hello" ."hello" 

end

; while not abba = -not abba and 100or not not true rem 100/ abba do     relax 
end


end

; abba [100* true ] := array not abba [not abba () or not 100and false and 100+ true * true / not false ] + not not abba 

end
