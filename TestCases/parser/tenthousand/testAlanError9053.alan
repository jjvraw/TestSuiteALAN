source abba function abba (integer abba , boolean array abba ) 
begin
    boolean abba ;     boolean abba ;     if abba / not 100and true - true + true and not abba () > false * not true then
    leave 
; abba [not not true rem not not not false - true ] := array true / not not true / abba - abba [abba () * true and not true + true / not false ] - false 

end

; while 100> -100do     get abba [-100* not not abba [not not abba [100+ false - not not true ] and 100/ abba [not not not true * true + true / not not abba () * abba () ] ] and true ] 
; call abba () 
; abba [not 100rem true or true * true or true * false rem false ] := array not - not true + not 100and true 

end


end

begin
    integer array abba , abba ;     integer abba , abba ;     call abba () 
; abba [-abba [-abba * not false / true ] - false ] := array -not true and not not 100
; get abba 

end
