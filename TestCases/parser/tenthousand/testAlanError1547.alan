source abba function abba () to boolean 
begin
    integer abba ;     boolean abba , abba , abba ;     relax 
end

begin
    integer abba , abba , abba ;     if -false then
    if 100* not not not * not not true = -not 100or true then
    relax else     while -abba [-not not not true or 100* true / true + not not abba () * true / true ] / 100or true do     get abba 

end
; if not not true / true rem not abba [-abba [not false ] / abba [abba and not 100rem not 100- 100/ true * true or not abba [-false or not 100* 100/ false ] ] ] + abba () + not 100then
    leave 
; leave 
; get 

end

; if -not abba rem not true or false + not true and 100then
    relax 
end


end

; abba := array true and not not not not true rem abba () 
else     relax 
end

; while not true and 100= abba [-100and not abba rem abba + not not 100and not true rem true ] * not abba () + abba () and not true 100rem 100do     put "hello" ."hello" ."hello" 
; if -true and abba rem not 100or not true then
    abba := array not false / abba 
put "hello" ."hello" ."hello" 

end

; call abba () 

end

; if abba () - true / not abba [-not not abba rem true + abba () not 100rem false - 100* 100* true ] or not not not false and not not true * 100then
    relax 
end


end
