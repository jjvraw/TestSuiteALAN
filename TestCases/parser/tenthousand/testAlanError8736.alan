source abba function abba (boolean array abba , boolean abba , integer array abba 
begin
    integer abba ;     boolean abba , abba ;     call abba () 
abba (array abba , integer array abba , boolean abba ) to integer array 
begin
    if abba () / not () + not abba [true and not abba - not not false rem 100/ abba () + 100] * abba rem abba [-not 100abba () - 100+ abba [-not abba / 100/ false - rem abba - not 100] then
    else     while -100100or 100<> true / 100+ not 100or abba [not true / abba [true and true / true - not 100and abba () ] ] / true do     call abba () 
; abba := array true 
; false rem true rem false - abba [true * abba () / abba () + abba rem abba and 100+ abba () rem false ] then
    put "hello" ."hello" 
call abba (
; put "hello" ."hello" ."hello" 
else     while -true do     -abba * 100and 100- true <= -100or abba * false rem abba then
    put "hello" ."hello" else leave 

end

; get abba [not / not not not abba * not 100or true ] 
; put "hello" ."hello" ."hello" 

; if -not abba () + 100then
    relax 
end


end


end


end

; abba := array -abba - abba () / not 
; put "hello" ."hello" ."hello" 

begin
    boolean abba , abba ;     relax 