source abba function abba (boolean abba ) to integer 
begin
    relax 
end
function abba () to boolean 
begin
    boolean array abba , abba ;     integer abba , abba ;     relax 
end

begin
    if false / abba ) / true - false / abba () * abba then
    put "hello" 
; if true rem abba [+ not not abba [-not true or ] and abba ) rem abba ] or true and false / not false >= -100or not 100+ not abba [abba () and not true rem not false or abba / 100/ abba ) ] / true rem abba then
    call abba () 
else relax 
end

else     call abba () 
; if -not 100* false or not abba (* abba () * not true then
    leave 

end

; leave 

end

; if not not abba () * 100/ false >= true rem false - 100then
    while not not false * false or true * true rem not not abba [100- not abba () / abba () ] not 100do     get abba [-false * 100abba () rem true ] 

end

; while -not not 100> abba * not true or not not not not 100rem not - false do     relax 
end
; leave 
else     put "hello" ."hello" 
; abba [not not 100rem not not false ] := array -not not false / true and not 100

end


end
