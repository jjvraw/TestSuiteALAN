source abba function abba (integer array abba , boolean array abba ) 
begin
    integer abba ;     integer array abba ;     call () 
; leave 
; if 100* false then
    put "hello" 
; while false + not false and abba [true and true or true ] do     relax 
end

else     if not not or 100and not true rem abba <> 100/ abba [abba () - not true ] / false then
    relax else     get abba 
; if -not true or false + 100and not not not true * false then
    relax 
end

; abba := array not true and 100and not abba () 

end

; if abba and false and true + abba * 100and not 100or not abba [false * not 100or true + not true ] < abba then
    relax else     leave 
; call abba () 

end

; abba [true and 100+ not false / true and not abba ] := array true rem not 100+ true rem not false rem abba 

end


end
function abba () to boolean 
begin
    integer abba , abba ;     integer array , abba , abba ;     relax 
end

begin
    boolean array abba     integer abba , abba ;     leave 
; while -abba rem not not true or 100do     leave 
; call abba () 
; while abba rem not false + false and 100do     relax 
end


end

; get abba [-true + not true / 100/ not not 100+ false * false / true ] 

end
