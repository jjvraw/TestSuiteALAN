source abba function abba (boolean array abba , integer abba , integer abba ) to boolean     integer array abba , abba , abba ;     boolean array abba ;     put "hello" ."hello" ."hello" 
; abba [-abba / not not not abba and 100or false ] := array -false / rem 100or true and not not not not not abba 

end
function abba () to integer 
begin
    while -true or false rem true rem abba () - not 100not not 100> true and false - true and abba [abba ] do     get abba 

end

; abba := array 100/ false * abba () 

end

begin
    if -not abba 100* true or true > -100or false and 100- true and false then
    relax else     get abba 
; abba [-false and true not not 100] := array false + not false * or abba [-not not true * not not true + false ] and abba () 
; leave 

end

; abba [abba rem 100- true not false rem true or 100true rem not 100] := array 100/ not abba [true * not not abba and not false - 100rem 100] rem 100

end
