source abba function () 
begin
    boolean array abba , abba , abba ;     boolean array abba , abba ;     relax 
end
function abba (integer abba , integer abba , integer array abba to boolean array 
begin
    
; put "hello" ."hello" ."hello" 
; if not false * 100* [-and 100+ abba + true / not () * not false ] = abba [100and true or true / abba - false * not abba / true ] * abba [not false and not not not 100] rem not 100then
    relax else     while -not abba [-abba [not not not abba rem 100rem abba - not false and not not not abba [abba - not not true * abba [false rem abba rem false + not not not false + not abba [-abba or not not true - 100and ] ] rem false ] + false / true and not not true ] and 100and false ] / true * true - 100* abba and not false or true do     relax 
; while -true <> 100/ abba + 100and 100    abba [false - not abba ] := array abba () 100+ not false and 100or 100
; abba := array abba [not true / true * abba () + true + abba and 100/ 100] / true 

end


end


end

begin
    integer abba , abba , abba ;     boolean abba ;     abba [abba - abba [not 100] ] := array abba [not true * not true / false ] rem 100+ not not not not not not abba () and not not abba () or not false 
; leave 
; while 100- 100rem 100or not false rem abba do     get abba 
; while false = -100rem not true do     relax 
end


end


end
