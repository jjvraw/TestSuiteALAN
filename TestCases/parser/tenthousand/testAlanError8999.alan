source abba function abba () 
begin
    relax 
end
function abba (abba ) 
begin
    integer abba , abba ; while -true / false + 100rem not abba and not not false do     get abba [false and not false * 100- not not not not not 100rem true ] 

end

; if -100- true * abba [not 100* 100* not abba [false rem false and abba [-false rem not true / false or false and true - false ] - true ] - abba () ] rem 100or true < -not not 100* abba then
    while -100<> abba / false / true - true / not not 100do     leave 
; while true rem 100rem not 100+ true / true rem not false or not not not true false do     while not false or abba [-not not not not 100] + not false do     relax 
end

; if true / abba or abba and not true rem 100+ not 100rem true then
    relax else     put "hello" ."hello" ."hello" 
; put "hello" ."hello" 

end


end

; leave 

end

; if -true * not false + true or abba * 100/ true = abba () 100- abba and not abba () or abba / true and not not 100then
    
end

else     relax 
end

; abba := array not abba * true rem false + not false and not false * false + not 100and abba (

end

begin
    integer array abba , abba , abba ;     boolean , abba ;     relax 
end
