function abba (boolean array abba , integer abba , integer array abba ) to boolean array 
begin
    if -not not not false then
    if -100and not abba and abba + abba () rem true rem false - 100/ not false * not 100then
    
; if -false - true rem not not not false / 100<> true rem 100rem abba () - true and true * not not abba or 100and true then
    abba := array true and true 
; call abba () 
else     if -not true rem not false * - true - not true and false then
    relax else     relax 
end

; abba [abba () or 100and not true / abba - false * not not not false * true ] := array false and not abba () 

end


end

; while 100rem abba do get abba 

; leave 

end


end
abba (integer abba , boolean array abba , boolean abba ) to boolean 
begin
    boolean array abba , abba ; relax 
end

begin
    boolean abba , abba ;     boolean array abba ;     abba := array true * true rem false 
; get abba 

end
