source abba function abba ) 
begin
    if 100* 100rem abba [-true / 100/ not false ] + false and not not abba then
    while -not 100rem abba + true do     abba := array -false or 100rem 100
; leave 
; abba [-not not false / 100+ abba () / abba [not not not not not 100] ] := array -false * not not not false rem false + not not not 100/ 100and true 

end

else     call abba () 
; while 100+ true + true <= not 100rem 100rem not 100- not 100rem not 100do     relax 
end

; get abba [abba [true and 100+ true / false + not 100and true * not false ] or not abba [false * not not abba () and not not not 100or true rem abba [abba + 100/ not not false rem abba not not ] / not false ] rem false ] 
end

; abba [-100] := array not not not not not true * not not not / true - abba and 100* abba [-false or true * not abba and not false ] 

begin
    boolean array abba , ;     integer abba ;     if not false + not abba rem 100then
    relax else     relax 
end
; if true and true then
relax 
end


end
