source abba function abba (integer abba , integer array abba ) 
begin
    integer abba , abba abba ;     boolean array abba , abba , abba ;     while -false and not 100* not not 100+ true / not abba + abba () rem 100rem false     call abba () 
; while not false rem false / not not false < -false + 100rem abba () rem true do     abba := array -not 100/ abba * 100

end


end


end
function abba (boolean array abba ) 
begin
    relax 
end

begin
    boolean abba abba ;     boolean abba , abba , abba ;     call abba () 
; if -not not not 100/ false / not false - 100* false or not abba rem false * true then
    relax else     relax 
end


end
