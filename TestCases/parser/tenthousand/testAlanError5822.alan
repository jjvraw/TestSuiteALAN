source abba function abba () 
begin
    integer ;     integer array abba , abba ;     if 100* abba * 100then
    put 

end

; put "hello" ."hello" 

end

begin
    integer array abba , abba , abba ;     if abba - >= -not true * abba [-100- abba / true or abba () ] then
    abba := array -abba / true or not true 
; abba [-not true or 100] := array abba * true or true * not not false or false rem not not not abba () * false 
; if false and not false / false + true rem not abba or not not not 100/ 100and not then
    relax 
end

else     get abba [-false * 100+ not true or true ] 

end

; if true * true - abba and not true rem not false - 100then
    relax else     relax 
end
; while -false and false * true or not not not not false - not true rem 100do     while false rem false * not abba or not true abba do     if -false - 100- false * true <> -not not not abba rem true     relax else     get abba [-abba and false - abba [100/ not ] - true rem false ] 

end

; if 100/ abba [not true abba + * true / not 100] rem true - true rem 100+ false and not abba [false rem not true abba - abba ] rem abba [-100* true and 100] then
    relax else     put "hello" ."hello" ."hello" 
; get abba [-abba () / false and 100] 

end


end


end


end
