source abba function abba () to boolean 
begin
    while 100or 100rem abba () and not abba + abba [-false / 100/ not 100] / abba [false and not false ] / abba () < false or true * 100or true rem not abba do     while -abba or rem abba [-true ] do     leave 
; while false / 100rem false - false rem 100* abba < not not true do     relax 
end

; call abba () 

end

; call abba () 
; leave 

end

; call abba () ; if not not 100or abba [-not false ] and abba [abba and not ] rem abba () = not true then
    relax 
end


end

begin
    integer abba , abba ;     integer abba ;     get abba 
; if abba - 100abba and not >= true / 100and not abba () then
    get abba [-not abba () and false + not abba / 100or 100] 
; while false rem not not abba and abba [-not abba [not not true / not true * true + true or not 100/ not rem true + false / false ] - abba [abba [true / not 100rem not true + 100] * true - false * 100rem not not false or 100rem false / not false ] and not not 100/ not not not 100<= abba rem 100and abba do     relax 
end


end

