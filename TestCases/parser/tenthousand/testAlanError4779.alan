source abba function abba (integer array abba , boolean array abba , integer array abba ) 
begin
    if true and 100+ not true * true and not not abba [100and true - not abba () or 100abba ] < -100- 100* 100then
    relax else     relax 
end


end
function abba () 
begin
    if not false rem not true then
    relax 
end

; get abba [-* abba () * 100+ abba rem not not true ] 
; abba := array -true / 100+ true rem false + true / not not true 

end

begin
    integer array abba , abba ;     integer abba , abba ;     if 100/ 100/ not abba - not false * abba () * false then
    get abba [-true * 100+ false / 100* true ] 

end

; while not true * not abba + not false < -abba [-false and not 100and not true - 100] and false and not true do abba [false + abba := array 100true rem false 

end

; call abba () 

end
