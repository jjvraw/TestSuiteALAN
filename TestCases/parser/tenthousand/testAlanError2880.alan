source abba function abba (integer abba , integer abba , boolean abba ) to boolean 
begin
    boolean array abba ;     put "hello" 
; if -not not not abba then
    if -not abba () - then
    relax else     while abba and 100do put "hello" "hello" ."hello" 
; while -true * not 100/ not not not true or 100* not false rem true <> -true rem not 100false - not abba [false rem not false ] and 100do     relax 
end


end

; if 100* false / not not not not not abba >= not abba [not 100+ not true * abba true / 100* false ] and not 100then
    relax 
end

; call abba ) 

; if abba [-not abba () + abba and 100and 100] / 100/ false or not false / not not false and not not not false < -false then
    if false and not false or not 100rem not false true not 100and abba then
    put "hello" ."hello" ."hello" 
; get abba [-true or abba () * not abba [-false / true * true or abba and not not abba or 100] or not 100/ 100
call abba () 

end

else     call abba () 

end

else     call abba () 
; put "hello" 
; leave 

end

; get abba [-false * true - not false * abba [-not not not 100* 100or true true and abba [not 100] ] ] 

end
function abba (integer abba ) to integer 
begin
    boolean array abba ;     abba () 
; if -not not true / abba () rem 100or 100and 100then
    put "hello" ."hello" ."hello" 
; put "hello" 
else     if -not false rem not or true / false * 100+ not not true rem not 100then
    relax 
end

; leave 
; leave 

end


end

begin
    integer , abba , abba ;     abba [-false or true rem false rem true or not abba [not abba [false rem not not 100or - not not true * 100* 100] ] rem abba and false ] := array true and not not not not abba 
; if 100and not not abba * abba [true ] then
    relax else     relax 
end

; leave 

end
