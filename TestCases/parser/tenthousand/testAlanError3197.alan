abba function abba () to boolean 
begin
    integer abba , abba ;     while -abba () or not abba [not 100rem abba rem true / false >= true - true * false * true do     while -true do     relax 
end

; if -not not true * not / not not 100then
    relax else     call abba () 
; -false and not true rem not not false <= 100/ abba () / not abba - not abba / true rem not not false or false / not true / false then
    abba [-100rem true ] := array not 100or true rem abba 

end
; leave 

end


end

; if not abba rem not not false and false - not false and abba [-not not not not true and not abba - abba / abba [-100- not not 100- true rem abba () ] ] rem not abba then
    put "hello" 
; while true do     relax 
end

; if -100rem not false and false - not not abba () and abba () then
    relax 
end


end


end
function abba () 
begin
    integer array abba ;     abba := array -abba - abba / abba () 

end

begin
    boolean array abba , abba , abba ;     relax 
end
