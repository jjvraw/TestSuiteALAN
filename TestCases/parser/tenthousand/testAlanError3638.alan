source abba function abba (integer array abba , boolean abba ) to integer array 
begin
    integer array abba , abba , abba ;     -not false and abba [-true - abba () - not abba () ] - not not true * abba or not 100do     get abba [abba / abba / not abba + abba [not not not false ] and 100* not not true ] 
; abba [100+ not abba / not false and not false - not abba () ] := array -not true and not not abba + 100* not false and false + true 
end

; call () 
; leave 

end
function abba (integer abba , boolean array abba ) to boolean array 
begin
    boolean array abba , abba , abba ;     integer array abba ;     relax 
end

begin
    integer abba ;     integer abba ;     abba [not not false ] := array true / 100* false or false * false 
; if -not 100/ 100<> -not true and not false and true then
    if true then
    relax else     relax 
end


; get [not 100* not false - not 100* false ] 

end
