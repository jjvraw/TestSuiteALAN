source abba function abba (boolean array abba integer abba ) 
begin
    boolean array abba ;     integer array abba ;     while 100or false / not not false rem false do     -true and not not true not not not true * true or true and abba rem true >= not not false rem false rem not not 100+ abba and not abba - false and not false rem not abba [-true rem 100rem 100or false * true - not not not not not * abba * abba [-true rem true - 100- 100rem abba ] ] then
    relax else     call abba () 
; while -not false rem abba -100rem abba * not not false + not not true and true / true or 100] / true or rem 100or false / 100* 100>= not not 100* 100/ false do     relax 
end

; while -not 100>= false / 100- not 100rem 100+ true and abba () * false do     relax 
end


end

; abba [false + not abba rem false and not abba [false rem true - abba ] := array -abba rem 100
; if not not not not true * not not not false < false * not 100and or false and abba * false or 100rem abba [-false and 100+ not true and not not 100- 100* rem not false ] and false then
    get abba [-true - abba ] 
; if abba or 100rem not false and not + not abba * false then
    abba array false and not not false and false - not false 
; get abba 

end

; get abba [abba () ] 

end


end


end
function abba () integer 
begin
    relax 
end

begin
    relax 
end
