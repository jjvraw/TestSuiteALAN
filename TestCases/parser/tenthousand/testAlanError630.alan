source abba function abba (boolean array abba , integer array abba , integer array abba ) to integer 
begin
    relax function abba () to array 
begin
    boolean abba ;     while -abba [-abba [abba rem true and abba () 100and abba ] * 100or not abba () / not not false ] / abba () rem false + 100* false > abba [-true and 100- not false and not true and abba [abba ] + true and not true * abba ] do     abba [-not false - false / not true 100or not false ] := array -abba [false / abba () ] rem abba () 
; abba := array 100rem false rem abba 

end

end

begin
    integer array abba , abba , abba ;     boolean abba     if not true >= -true * true then
    abba := array -100and not not 100/ false - false * not not true 
else     while 100rem 100do     relax 
end

; leave 

end

; abba [not abba ] := array -true and 100- true * false - not not not abba 

end
