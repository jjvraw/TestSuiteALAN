source abba function abba (integer abba ) 
begin
    boolean abba , abba , abba ;     put "hello" ."hello" 

end
function abba (boolean array abba , boolean abba , integer array abba ) to array 
begin
    while -abba and false = -100do     leave 
; get abba 100or 100/ abba () ] 
end

; if -100and abba () <> -100* not false rem not abba + false rem 100rem not not 100or not false rem abba () / not 100then
    relax else     if 100* not true then
    get abba [false / true - not true ] 
; if true rem 100or true / not false then
    relax else     put "hello" 
; call abba () 
; put "hello" ."hello" 

end

else     relax 
end


end

; call abba (

end

begin
    abba , abba ;     boolean abba , abba , abba ;     if true * not not abba = abba (and not abba or true false * not + [rem not not false - abba () ] and not 100then
    relax else     abba [-abba () ] := array -not 100

end

; if -not and not 100rem not not not false - true rem abba () - not / 100* abba [-true rem true + not * not false ] <> -false / abba rem 100- abba () and false and abba - 100then
    relax 
end

; leave 

end
