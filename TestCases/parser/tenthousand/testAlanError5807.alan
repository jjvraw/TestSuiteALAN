source abba function abba () to integer 
begin
    boolean array abba abba , abba ;     integer array abba ;     true and not 100rem false + not 100* not abba + 100rem abba () abba () do relax 
end

; while -not not 100and 100+ 100* not not 100< true * 100and true + false / not abba false ] * abba or abba rem 100do     call abba () 

end

; get abba [-false ] 

end
abba (boolean array abba ) 
begin
    abba , abba ;     while false rem abba * abba - false do     if not not 100= -not 100+ 100and not false / 100then
    relax else     put "hello" ."hello" ."hello" 
; while not 100* true do     while -false or true     abba [not 100rem false / true ] := array -not not false or true - abba and true 
; leave 

end

; call abba () 

end

; while 100rem not 100and true <= -not abba * abba () / abba + not not false and 100and not 100do     if not 100< 100/ false + abba [-100/ false ] + 100/ not not not false and abba [-not true - false * 100* true ]     relax else     leave 
; put "hello" 
; if -not 100* not abba () and not abba - false or abba rem not not true = -not true * 100rem not false then
    relax 
end


end

; put "hello" 

end


end

; if -not not 100rem false or not not true 100then
    abba [-false / not true := array -100* not false or false 
; leave 
else     if -not not false or not not true / rem 100+ abba [-false rem false / 100] then
    relax 
end

; abba := array not true and false and true + 100
; abba () 
end

; put "hello" ."hello" ."hello" 

end

begin
    integer array abba , abba ;     boolean abba ;     if -abba >= not false * not abba / abba not and not false rem false - abba false * abba [-not true and not true ] ] or true * false then
    relax 
end


end
