source abba function abba () to integer array 
begin
    boolean abba ;     boolean abba , abba , abba ;     while false + 100and not abba / not false <> 100true rem false - false do     relax 
end

; if -not false and abba [not false * not abba [abba [not not true * not not true - abba [-[true / false or rem false or true * false and false ] + not abba / 100rem false ] and not not abba () * true or not false / not false ] or true or false * 100] * not abba () or abba () - true * true / true ] - true or true rem 100/ abba () <= -100* true * false then
    relax else     abba [-true and not not not not true + not false / not not not true ] array -not abba [-100- true rem not - not 100] 
; abba [true and not not abba rem abba [not false or true - true * not false ] 100] := array true / abba or abba () * true and not 100or 100* not 100
; call abba () 

end

; put "hello" 

end
function abba () to boolean array 
begin
    relax 
end

begin
    boolean abba , abba ;     put "hello" ."hello" ."hello" 

end
