source abba function abba (boolean array abba , integer abba ) to integer 
begin
    integer abba , abba , abba ;     call abba () 
; get abba 
; call abba () 

end
function abba (boolean array abba , integer array abba , integer array abba ) to integer 
begin
    boolean abba , abba ;     if true rem abba and abba [-100* not 100or not 100/ abba * abba - ] - not 100+ and not false / false <= -false then
    relax 
end


end

begin
    integer abba , abba , abba ;     boolean abba , abba ;     get abba 
; while -not true <= -true rem [-abba () rem false rem false + false + not not not 100] or 100* not 100* not false + true do     while -not not not not 100or not false * not true <= not not not false / false + 100and 100* abba () 100do     if -false * not not not 100- 100rem 100rem not abba () - abba () / not abba [-abba * 100] * 100then
    relax 
end

; leave 
; put "hello" ."hello" "hello" 

end


end

; abba [true rem 100/ abba [false * not not 100] + abba [-abba * true * not 100- false / false / abba ] ] := array -not true and not abba + abba * true rem abba 

end
