source abba function abba () to boolean     leave ; call abba () 
; if -not true * not 100/ abba [not false * not not abba + 100] > not not false / true * + not true and false then
    while -not not 100* true + abba < not not true and not abba do     if true / abba - 100> -abba rem true * false or 100* 100- not abba [-100/ abba - not false ] then
relax else     relax 
end

; call abba () 
call abba () 

end

; while -abba - not 100+ not 100<= -true and not false - not not true * 100/ true + abba () / true and abba () do     relax 
end

; while true - not 100or 100do     leave 
; abba () 
; if -false < -abba [not true rem abba () * 100+ 100/ true ] rem not true - not not true and true or false rem 100/ not false then
    relax 
end

end

else     relax 

end

begin
    call abba () 
; get abba 
; abba := array -not / 100

end
