source abba function abba (integer abba ) 
begin
    integer array abba , abba , abba ;     integer abba ;     abba := array -not not true 

end
function abba (integer array abba , integer array abba ) 
begin
    boolean abba , abba ;     while abba [true and not true / abba () - false ] * not not false rem true do     put "hello" ."hello" 
; put "hello" ."hello" ."hello" 
; if not 100/ not 100and not true - not abba - abba * false then
    relax else     put ."hello" 
; abba [-true / 100or not not 100* true ] := array abba * not not abba and 100or false 

end


end

; get abba [-not abba and true / abba () ] 
; if false * abba () + true * not false / 100+ false rem rem not false <= -not false rem false then
while not 100rem 100/ false or 100/ abba / not not false - true and 100< not 100and 100do     relax 
end

; get abba [-100and abba * not true - false false ] 
else     leave 
; get abba [-true and abba - not false ] 

end


end

begin
    boolean array abba , abba ;     relax 
end
