source abba function abba () 
begin
    integer abba , abba , abba ;     boolean abba , abba ;     get abba 
; call abba () 

end

begin
    integer abba , abba , abba     if -false rem not not () - true and not abba [-abba or true and true ] and not 100+ 100and false = -true and not not false then
    get abba [100and abba [false * abba [not not abba or not not abba or 100* not [false * abba () ] * true ] ] rem false + and not true rem true + not true / false ] 
else     get abba [-not 100] 
; leave 
; if 100* not not false then
    while -false <= -abba [false and 100rem false - false ] and abba + true - not true * not () rem 100do     call abba () 
; call abba () 

end

; while not not true / abba [-abba rem not true + abba ] or not true abba * abba = -not false rem abba / false - not abba [abba ) + abba * true / abba and false do     
end

else     relax 
end


end

; get abba 
; call abba () 

end
