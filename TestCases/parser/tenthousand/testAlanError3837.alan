source abba function (boolean array abba , boolean abba ) 
begin
    boolean array abba , abba , abba ;     if false or false and not false or not abba () / false -100rem or not true / not not not false / false or not true rem then
    get abba [not abba and abba ] 
; abba := array not abba () - and abba [false or true / true + false * not not not false * 100] 
; if -abba [-not false ] / true / true or true / true * false + abba () then
    else     relax 
end


end

; put "hello" 
; leave 

end
function abba () 
begin
    boolean array abba , abba , ;     integer abba , abba , abba ;     while -true or false > true rem not false / not true - not not true not true / true - false do     if -false or abba * abba * 100then
    relax 
end

; while false + not 100/ 100and abba >= -not 100- not true rem abba do abba [-100* not true + abba * true ] 
; while abba / abba [-100rem abba or 100/ not not not true + 100] + true rem not not true * 100or not false do     while -100do     if -abba () * not 100/ abba [-true / false ] > -false rem abba [-not abba rem false rem false or true * not false ] / abba then
    while -100+ true * not not false do     relax 
end


end

; while true / true + true / abba or false / false rem not false do     call abba () 

end


end
; get abba 
; call abba () 

end


end


end


end

begin
    boolean array abba ;     integer array abba , abba ;     relax 
end
