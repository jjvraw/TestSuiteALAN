source abba function abba () 
begin
    boolean array abba ;     boolean abba , abba ;     if -not not not not false rem not not abba + abba and true not not not true / not not false and true then
    while not 100rem not 100/ 100do     if not not not false / false / true - false rem abba rem 100- [abba [-not true or abba / not false + true ] and not not not not false or false and false ] * true * not not not abba -abba () + not 100/ not not not 100/ 100then
    abba [-/ false * abba () or abba () / false - true rem not 100rem not abba () ] := array not false and not + 100
else     abba [abba and false and true + true / not 100] := array abba + 100or not not false * abba () / false 
; while false or true false and true + false do     abba [-false and abba ] := array -abba rem 100and abba [-not true / false * not true + not true * not false / false + 100rem not false rem not 100] 

end

; abba := array -100+ false / not abba [not abba or not abba () / or true and not not true * not 100] rem 100
end

; put "hello" ."hello" 
; get abba 

end


end

; leave 

end

begin
    abba [-true + false * 100* not 100+ false and not abba ] := array -100and not false or abba rem not abba 

end
