source abba function abba () to integer array 
begin
    integer abba , abba , abba ;     abba [true / abba - abba - and true ] := array -100* false or false / 100and abba [not false + not true * false or true ] 
; if -not not false rem false rem or false * false then
    if -abba () * abba [-false / true or false / not true ] rem not not not 100- 100- 100rem not false then
    if false / false * not not 100or abba rem false * true + not false / not false * false < -not not 100/ not not true or not not abba () or 100* abba () * not true then
    put "hello" ."hello" ."hello" 

end


end

; if not not true * true or abba or false false * false then
    relax else     100<> -abba / 100* false or / not true - not true and true / not false then
    100- false + not abba () * 100> false rem true * abba then
    relax 
end

; leave 
; get abba [not abba and false ] 
else     relax 
end

; put "hello" ."hello" 
; call abba () 

end


end

; call abba () 

end
function abba (boolean array abba , boolean array abba , boolean abba ) to boolean 
begin
    integer abba , ;     integer array abba , abba , abba ;     if not false false / 100<= true or not abba then
    relax     call abba () 
; abba [true 100* not true - 100rem 100+ true and true ] := array true and abba () / abba - true and false rem false 

end

; put "hello" ."hello" 

end

begin
    boolean array abba , abba , abba ;     while not true rem false = -false and not true and true true / * not not 100do     relax 
end

; abba := array not false - abba () + false * abba * 100

end
