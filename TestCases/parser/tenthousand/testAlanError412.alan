source abba function abba () to boolean 
begin
    abba := array false / not 100+ not abba () 

end
function abba () 
begin
    integer abba ;     abba [-true - not false not true rem not false ] := array not not false or 100+ not 100rem not true 
; while 100rem not false and true + abba [-abba and not abba () ] + false <= -not 100* not not false do     relax 
end

; if not 100+ true rem false * true or false rem not false then
    put "hello" 
; leave 
; abba [100* abba + * false / not or abba [-false and false or not true ] ] := array not abba 
else     relax 
end


end

begin
    boolean abba ;     integer abba , abba , abba ;     get abba 
; if -true rem false - not false / abba [-not 100or true / true rem 100- not not * 100] <= -false then
    call abba () 
; abba := array 100and not true / true + not abba [not false and not not not abba () + false - not false / not abba () ] / abba () or true 

end


end
