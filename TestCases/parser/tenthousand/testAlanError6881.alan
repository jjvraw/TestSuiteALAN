source abba function abba () 
begin
    boolean abba ;     boolean array abba , abba ;     if not not abba / true rem false false true rem false then
    leave 
; := array abba and * true 
; get abba [-not true * not false * false + false ] 
else     while -100* not not not false rem not true - abba () + false >= abba () * not not 100rem not 100+ abba / true + not not true and false rem 100do     
end


end

; if 100- true * 100/ abba > not not not 100then
    leave 
; get abba 
; abba [-true / false ] array true not abba [-not - 100+ not false ] / not not 100+ not not not not abba [true rem 100] / true rem 100+ 

end


end
function abba () 
begin
    integer array abba ;     integer array abba , abba , abba ;     abba [true - not 100/ not false + not true ] := array abba () and not not not not 100* not not not abba 
; leave 
; leave 

end
    relax 
end
