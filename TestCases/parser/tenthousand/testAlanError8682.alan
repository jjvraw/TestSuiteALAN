source abba 
begin
    boolean abba , abba abba ;     boolean abba , abba , abba ;     call abba () 
; get abba [100* not not true + abba * abba () and false + 100] 
; while not 100rem false rem abba () <> -true rem not not not abba (and abba [not rem not not true and 100+ not false / not abba * not not 100+ abba [100] / false * true ] or true and 100or false / abba [true * abba [not not not true * abba + 100and abba [-abba [100+ not not abba / not abba - false ] * not true and 100] ] / not true + abba [-abba [abba [abba () - false ] or true and abba ] rem abba [not true ] - false * not abba [100/ false * not true - not not ] and not true - abba and false ] rem not not true / not false ] * true do     relax 
end


end
