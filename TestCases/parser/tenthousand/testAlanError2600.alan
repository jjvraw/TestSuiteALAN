source abba function abba () 
begin
    boolean array abba , abba ;     integer abba , abba ;     if -- not true * false <> -true and not abba () * 100then
    while -abba / true and true - 100- abba <> not not abba () or abba * not abba [-false * true rem abba () - not false / true / not 100] do     call abba () 

end

else     relax 
end

; abba := array -not [-abba [not 100and true ] rem true ] / false and not not false or not true and true rem not false - not abba [abba () + not not 100/ not 100or true * 100] rem false 

end
function abba () 
begin
    integer abba , abba , abba ;     relax 
end

begin
    integer abba ;     integer array abba abba ;     leave 
; call abba () 
; "hello" ."hello" ."hello" 

end
