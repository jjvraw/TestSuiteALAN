source abba function abba () 
begin
    relax 
end
function abba () to 
begin
    integer array abba ;     boolean abba , abba , abba ;     relax 
end

begin
    integer array abba ;     abba := array -false * abba () - not abba (* abba [true and not false / true + true rem 100/ true - not not not 100] * not false + false and true 
; if not 100+ false * abba - true <= -true and not not true / false or 100- abba * 100then
    relax 
end

; if -not 100/ abba rem 100- false and not not true * 100not 100then
    abba := array 100rem 100
; if -true / not not not abba [-false rem not false rem false + abba () and not abba [false and not 100or not rem not 100rem abba - false * not 100] rem abba () - 100rem not false * false ] and abba then
    while -100and not - false and 100or 100>= not not false rem abba [-true * abba or not abba rem false * not not true ] + not abba [-100* abba [-false not false / 100and not true + not not true + true / not abba [abba [-true and abba [not true / false - true / false ] ] rem 100rem abba or true and * 100- true rem 100and true ] * false ] * not abba * not false or true * not false do     relax 
end
; call abba () 
; put "hello" 

end

else     relax 
end


end
