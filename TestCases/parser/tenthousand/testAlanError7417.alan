abba function abba () 
begin
    boolean abba ;     relax 
end
abba () to boolean array 
begin
    integer abba ;     boolean array abba , abba ;     call abba () 
; if -true rem not not not not not true / not false or 100rem false then
    call abba () 
; put "hello" 
; get abba [-not abba ) / 100/ false + not not () rem false + false * false ] 
else     put "hello" ."hello" 

end

; abba [-[-abba [-abba rem true or true / true * not abba ] / true * not not 100or not 100] * 100* abba [not abba () / not true + abba [-true and abba rem not not 100+ not not not not not 100* false - not not not not abba rem not not ] / not not 100rem false ] - not not abba or true ] := array -not true rem false * abba [-not abba and false / abba [not false or not abba and false * abba [not 100- false / not abba [-not not false and 100or not 100] * 100] ] abba () rem not not abba [-not not 100* abba [-not true - abba * not + not false * true ] rem abba + not 100/ abba () * 100] ] 

end

begin
    integer array abba abba ;     while -true and 100- false and 100rem not 100do     relax 
end

; while not not not not true * not true do     get abba [-not not abba ] 
; get abba 
while false - not true * not not false + not abba rem not false do     relax 
end


end


end
