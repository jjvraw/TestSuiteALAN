source abba function abba (boolean abba , integer abba ) 
begin
    boolean abba , abba , abba ;     boolean array abba ;     relax 
end
function abba (integer array abba , boolean abba ) to boolean array 
begin
    boolean abba , abba     call abba () 

end

begin
boolean abba ;     boolean abba ;     while -not true * not not false + true - not true / abba and false >= true rem not not abba rem abba [true not not not 100rem abba [false not not not true ] + not not not not not 100] or abba / true / false or abba [-not false or not false / true / not abba [not false * false ] rem not abba do     put "hello" 
; if -not false and not not abba () / - false * false rem not not 100< false * true - not false then
    relax else     if -100/ not true and not true or abba rem not true and not not not + true then
    leave 
; abba [true * false ] := array abba + 100* true + 100* 100

end

; abba [100/ not true false ] := array true 
; abba [not 100and false ] := array 100rem not false 

end


end

