source function abba (boolean abba , abba ) 
begin
    leave 

end

begin
    boolean abba ;     if not not abba rem abba () / not abba + true and not 100rem false - false / 100and 100then
    call abba () 
; if -100- 100/ not 100then
    get abba 
; if not false < not not false and abba rem not true + not abba [-false ] rem false * 100- false * not not abba then
    abba [abba and not abba () or false rem not not 100/ not abba () + true rem 100] := array -not false + abba [not not true / abba not not not 100or false rem abba - false / 100/ abba [-abba * not false not not not abba [true and not not false / false - not not 100] ] ] and 100and not 100
; while -not 100and 100>= -true * abba () / abba () do     relax 
end

; if -true / 100- true * not abba then
    relax 
end


end


end

else     abba [100/ false * not 100] := array -abba () 
; if abba / not not not not not not true then
    relax 
end


end

; while -abba rem not abba = -true / false and 100+ not true and true * 100do     relax 
end


end
