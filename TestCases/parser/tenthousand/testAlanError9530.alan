source abba function abba (boolean array abba ) 
begin
    boolean array abba ;     integer array abba , abba , abba ;     relax 
end
function abba (integer abba , boolean abba , boolean array abba 
begin
    leave 
; if -not abba [-true rem 100and not not abba or not abba rem abba [false / abba * false - not not not not abba * 100+ 100] + 100/ false * true ] rem not abba - not not 100rem not true then
    if abba [100+ 100+ false ] or not true and not true or abba >= -100then
    if -not not not not true * true * true + abba () - abba () * false >= -true then
    relax else     while -true rem abba do     if abba [-not false + false rem true + 100/ 100] / false * abba or abba + true / 100<> -100/ abba [true / abba rem not abba ] rem 100then
    call abba () 
; while -not not abba / abba or false and false rem not not abba () <> true true rem not false do     relax 
end

; if -true or / true true or not false >= 100/ abba [-true / not not false or or not true rem false ] then
    abba := array -100* true rem false or abba [true * 100rem not not false * not true / abba ] 
; call abba () 
else     relax 
end

else     put "hello" ."hello" 
; leave 
; call abba () 

end

; abba then
    relax else     relax 
end


end

; get abba 
abba [100and false rem not 100not true * true + true ] := array abba rem 100- abba [-true and 100] and 100- not not 100/ true 

end
else     call abba () 

end

; call abba () 
; abba := array 100- 100or not false rem false and not true 

end


end

begin
    integer array abba , abba , abba ;     boolean abba ;     relax 
end
