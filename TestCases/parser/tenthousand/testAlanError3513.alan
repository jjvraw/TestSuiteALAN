source abba function abba (integer array abba abba , boolean array abba ) to boolean 
begin
    integer array abba ;     integer abba , abba , abba ;     while not false + and not not true / not not not true <= -not abba do     if -false - not true >= not not abba [-not false + true / not not not false rem abba () ] + not false / not true then
    relax else     relax 
end


end

; get abba [-100rem not false * false 100+ not not not 100] 
; if true rem 100/ false     if -abba () and false / false - false and not abba < -not true / false + 100/ not not true - not 100and true rem abba () then
    get 
; get abba 
; abba := array abba rem not 100* not not abba + abba or 100* abba * abba 
else     relax 
end

; call abba () 
; put "hello" ."hello" ."hello" 

end


begin
    integer abba , abba , abba ;     abba [abba 100+ true and true ] := array true / abba abba [false and 100/ not not 100] - true and not not true / true 
; while not true and not not 100and true - and 100rem abba or abba [abba / not not or true * not false ] do     leave 
; while -not not 100/ 100not not true * true and true - 100= -not not 100and not false / 100do relax 
end

; abba [-100] := array not abba or 100

end

; get 

end
