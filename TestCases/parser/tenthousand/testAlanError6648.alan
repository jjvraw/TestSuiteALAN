source function abba () to boolean 
begin
    abba -100/ false * abba + 100* 100* [false / not not true or not 100rem abba and not 100] ] := array -not abba [false * not not true or false - false and abba [not not true rem not not abba () or abba [abba ] or true ] ] or not / abba [-false ] / false or abba [-true and not 100+ not not not 100/ not true + true * 100] 

end

begin
    if -not 100rem 100false - false + false >= -not false then
    call abba () 

end
; abba := array -not 100
; if abba (/ true + abba then
    get abba [not abba () rem true - abba () / abba [100rem abba [true or not not abba ] ] / abba ] 
; leave 
; get abba 100rem abba / true ] 
else     if abba [abba [-abba / 100* not not 100] * false or 100and not 100] and true - not not abba -100rem false - true rem abba and true ] / 100or false and false then
    get abba [-true / abba [not false ] or not not false and not not not false / false ] 
; get abba [-true + true and not not false and 100or abba rem true / 100] 

end


end


end
