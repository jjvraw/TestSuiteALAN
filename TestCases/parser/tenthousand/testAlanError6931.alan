source abba function abba (boolean array abba , integer array abba ) to integer 
begin
    boolean , abba , abba ;     -abba [true * not not 100and 100or abba and false / not 100- false rem not abba [-true + abba + 100and true ] and false true or abba () / 100do     leave 
; leave 

end

; put "hello" ."hello" ."hello" 
; if -not not true rem not not not false - false = -not not 100* 100- 100and 100* abba + 100then
    abba [true / true - abba [-100or not 100* not true / 100] or false rem not false and 100] := array true rem abba () - false * false + abba 100and not true 
; while not not 100* rem 100100or abba () / true and false = 100rem true or abba [not abba * 100rem not not true ] * true do     get abba -abba [not false ] * false * abba not 100] 

end

else     if -100/ not true + false * not true then
    if true or false rem false not abba [-false / abba and not not not not not 100+ not true and not 100* abba () - not not 100and 100] abba / 100then
    if -not 100- not true * not false < -true then
    relax else     relax 
end

; abba := array not abba - true 

end

; if -true - 100* not not true * true + not true and false rem false > abba rem true or 100rem false rem true or false / false and not not not false then
    while not false rem not false or true * abba ) or false do     put "hello" ."hello" ."hello" 
; -[abba * 100or true ] or abba + true rem false / abba then
    relax 
end


end

; abba [100* false + abba or not / true ] := array not not true 
else     leave 

end

else     call abba () 

end


end


end
function abba (integer array abba ) 
begin
    integer array abba , abba ;     relax 
end

begin
    integer array abba ;     relax 