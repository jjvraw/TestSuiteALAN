source abba function abba (integer abba , integer array abba )     boolean abba ; boolean array abba ;     abba [-100* false / not not true - 100and abba rem abba () - true ] := array -abba - true not not false + not false ; put "hello" 
; while -not not abba and abba () / abba [-not true ] - not 100+ false > -100or not 100or true do abba := array true 

end


end

begin
    put "hello" ."hello" ."hello" 
; if true * not 100and 100+ not false then
    leave 
else     while -false do     while abba () + 100* false + false and 100do     relax 
end

; if 100> -not not false / 100/ 100then
    if -not false - not 100rem abba [not not false not false + not not abba not true ] - 100] / not not not abba [-false and not abba [abba [not true rem not not not not false ] and false ] and abba () or true and true and false ] or abba -not not 100+ not not not 100rem not false * not false + not not true rem abba ] false then
    while true do     relax 
end

; while 100true or true / false = -false * false / 100or 100true * false + not abba do     get abba 
; call abba () 

end

else     relax 
end

; if not not abba rem abba () then
    if -false and not not false * not false < -not 100/ abba [-false ] or abba rem not 100then
    relax else     put "hello" ."hello" ."hello" 
; call abba () 

end

; while -false * not 100* + true do     relax 
end


end

; get abba [not false / abba and not false - false ] 

end


; if false > false then
    get abba 

end

; call abba () 

end


end
