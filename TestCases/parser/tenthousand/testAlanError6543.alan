source abba function abba () 
begin
    boolean abba ;     while not abba () rem false     leave 
; while -not abba - not not 100rem true >= -not abba rem abba rem true do     relax 
end
; while 100* 100rem 100+ not [-not abba () rem not true - false and 100rem not not true - not false * not true / not not true ] rem 100/ false <= false * not abba [100and false ] / true + false rem not 100rem true do     if -false rem not true and true or 100and false and true > -false / not 100* true or abba () then
    while 100and not not not 100/ 100do     leave 
; put "hello" ."hello" ."hello" 

end

; abba [not true * true ] := array false 

end

; while -true / 100or abba / not true do     if -not abba () * not abba [-100false * 100or true ] * false - 100/ not 100or true / true < -not false / not true then
    relax 
end
; leave 
; put "hello" ."hello" 

end

; if not 100and not 100rem not true or true + false then
    abba := array -100and true + false and false 
; get abba 

end


end

end

; leave 
; put "hello" 

end
function abba () 
begin
    boolean abba ;     relax 
end

begin
    integer abba ;     boolean abba , abba , abba ; if not abba then
    abba [100/ not not not 100] := array -100* not 100
; leave 
else     relax 
end

; if not abba rem 100abba [-100/ true rem not false + abba () ] then
    get abba 
; [not true * 100+ not not abba ] := array -not false 
; abba [false and false or not true ] := array not 100/ abba + not abba rem 100/ not abba () 

end

; leave 

end
