source abba function abba (integer abba , integer abba , integer abba ) 
begin
    boolean array abba , abba ;     boolean abba , abba , abba ;     relax 
end
function abba () 
begin
    integer array abba ;     integer abba ;     while -100do     while false <= -not true do     relax 
end

; get abba [true ] 

end


end

begin
integer abba , abba , abba ; get abba [-rem false ] 
; abba [-not not not abba [true rem not false + true / not not not not 100and 100] rem false - true or false * 100/ false ] := array true or not not abba () / false rem abba [false / false and abba [true and not true / 100+ false / not 100- not not not not true * abba * not not false ] ] ; while true or abba do     relax 
end


end
