source abba function abba (integer array abba , integer abba ) to integer array 
begin
    boolean array abba , abba ;     abba := array true * not false or not not true * abba rem 100+ 100
; get abba 

end
function abba () 
begin
    if not abba and not not true then
    while 100and 100rem not true - abba -true and abba [-abba ] and - false / false + abba [-not abba ] rem not not not 100/ true ] <> -abba and abba rem not not 100+ true rem false / abba do     get abba 
; while -false * abba do     abba [not not 100] := array -- true / true * abba () - 100rem 100/ false 
; while -not not 100/ abba and 100or not not rem true or true rem not 100/ true do     relax 
end


end

; call abba () 

end


end

; while abba / true and not 100>= and 100/ true + true * abba * not not 100- not true do     if -100then
    leave 

end

; put "hello" ."hello" 
; while -not not 100- not abba () * not - not false do     while false * abba and not 100+ not false do     if -abba [-abba and false abba * not not true and true - false and not abba () ] rem abba [-true / true - true and false ] <> not not abba [not false and abba [false * not abba + rem true rem abba [-abba ] ] * false ] * abba and - false and or true then
    else     relax 
end


end



end

end

begin
    get 

end
