source abba function abba (integer array abba , boolean array abba , boolean array abba ) 
begin
    boolean abba     integer array abba , abba , abba ;     get abba [-abba - true and abba [abba [true + abba or 100/ true and abba [not abba or abba [not not false ] and 100] ] + not false + not not not not 100] * not false ] 
; get abba [-100* rem 100] 
; abba [false rem not not 100or true - true ] := array not 100+ abba 

end
function abba () 
begin
    true and not false and true or false rem false <= abba * false rem not abba () - abba rem abba rem 100or 100do     relax 
end


end

begin
    boolean abba ;     integer abba , abba , abba ;     abba := array -false + true / [not not 100rem not false ] and abba 
; abba -abba + true and 100] array not abba * not false - abba [100] or true 

end
