source abba function abba () 
begin
    integer array abba ;     integer array abba , abba , abba ;     leave 
call abba () 

end
function abba () 
begin
    boolean array abba ;     relax 
end

begin
    integer abba , abba , abba ;     boolean array abba , abba , abba ;     while -not abba [-abba / true rem abba [-abba () and not abba [abba [false - abba [-abba () / abba * true ] * abba ] and true ] or abba () rem not not not abba () or true ] - abba () / not not not not 100rem 100or true * not not not false ] <= -not not false and true + not true / not not not not 100or 100do     relax 
end

; abba := array -true rem false 
; while -false + true and not false and abba + abba [true * true and 100] / 100and 100<= -not 100do     relax 
end


end
