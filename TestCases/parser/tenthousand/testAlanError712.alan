source abba function abba () to array 
begin
    relax 
end
function abba (integer abba ) to integer array 
begin
    abba , abba ;     boolean array abba , abba ;     while -not true / true + not not not true rem false and true or not abba / abba [abba () / false rem 100] = -abba () and abba / 100or false do     while false / 100/ 100+ not abba [-100* ] / not abba and not not true + false do     if true / 100< -false * 100then
    if -100rem true rem not abba - not 100rem false abba then
    relax 
end

; call abba () 

end

; call abba ) 
; call abba () 

end

; abba [true * not false rem 100] := array not true 

end

end

begin
    boolean abba , abba , abba ;     integer abba , abba , abba ; if true or abba () rem abba [not not not not not not false + true and false + abba ] / not false or false * not not 100then
    abba := array -false * true + false rem false - false * true rem not false 
; while not not 100/ not not 100+ true rem not false - not 100* false and abba () do     relax 
end

; while 100do     "hello" ."hello" ."hello" 

end


end

; get abba 

end
