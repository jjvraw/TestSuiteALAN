abba function abba (boolean abba ) 
begin
boolean abba ;     call abba () 

end
function abba (integer abba ) 
begin
    integer array abba , abba , abba ;     integer array abba , abba ;     while true / or true and not abba rem abba <= not not false * abba () * false - abba [-100+ not false rem abba ] do     abba [-not not not not abba (* not false or false and not not false * not abba () - false and abba () / 100] := array true / true + 100
; leave 
; if true rem true / true or true and 100or not true rem not true >= -not not 100then
    abba [true rem not 100+ not abba / 100] := array -100not abba () - false and true 
; "hello" 

end


end


end

begin
    put "hello" 
; while not 100/ not true - abba () do     while true / 100* 100or abba rem abba [-abba [-abba [true / true or not false ] and 100* abba or true rem not abba ] * true and false + abba * 100* true + not true ] / abba () > not true + 100and do     relax 
end


end


end
