source abba function abba (boolean array abba , boolean array abba ) 
begin
    integer abba ;     boolean array abba , abba , abba ;     while abba [-100* not false rem 100] < false rem false rem not 100do put "hello" 
; call abba () 
; while -not not abba [abba () + not 100/ false / not not false ] / true - not 100/ abba [abba or true / not true rem not abba ) + abba ] do     while 100and true / not 100or 100and false - true * not abba () / false     relax 
end

; abba [true and not false / not not 100+ 100] := array -not not false + not abba () 

end


end

; put 
; abba := array abba * abba [true / 100or * 100or 100rem not true and false ] / not 100- abba () 

end
function abba () 
begin
    relax 
end

begin
    boolean array , abba , abba ;     if -false and abba and not 100+ not not true rem abba () + abba < -100and abba * not not false - false then
    call abba () 
; call abba ) 
; leave 

end

; leave 
; abba := array -not true and not abba 

end
