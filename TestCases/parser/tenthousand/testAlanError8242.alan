source abba function abba () to integer 
begin
    abba , abba , abba ;     relax 
end
function abba (boolean array abba , array abba ) 
begin
    integer array abba ;     abba , abba , abba ;     if -not 100rem abba [abba [-false / false or not not abba * false ] and true or not true / true - not abba * false * true ] or not abba then
    get abba [-+ false and true ] 

end

; if abba () rem true * false - true <= [not true / true ] + abba     relax else     call abba () 
; if -abba and not then
    if -100* true + not false + 100and not not true rem abba then
    if -false - false rem not false then
    relax else     leave 

end

; leave 
; if not abba or 100/ abba * true + not abba (* 100then
    put "hello" ."hello" 
else     abba [not 100/ not true * abba () or false / 100/ 100- true := array false and false 
; leave 

end

else     relax 
end

else     abba [100* 100- 100* not not not not 100] := array not false / true and true or not 100* false and true 
; get abba [abba / not false ] 
; if -abba / not not true + false + 100/ not false = not 100rem not false - true - not rem and not not not not false then
    relax 
end


end


end


end

begin
    integer array abba , abba ;     boolean abba , abba , abba ;     if -false or then
    relax else     while not true rem not not true + false * not 100- abba [100or false * not not 100and false ] / abba rem 100do     relax 
end

; put "hello" 

end


end
