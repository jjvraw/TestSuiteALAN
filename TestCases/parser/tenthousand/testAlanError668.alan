abba function abba (integer abba ) 
begin
    leave 

end
function abba () to integer 
begin
    integer abba ;     boolean abba , abba abba ; while -not 100rem abba * 100- abba < -false / abba * not not false - true do     if not not false * 100- false rem abba [-false not 100] rem false + abba [-not false and abba and 100or not 100] rem not 100/ not not not not not not false <= -true * 100then
    if -not abba ) and 100/ abba - abba [-true / true or abba [100rem false not not abba ] / 100+ abba ] / abba [-true and not true or + 100and 100/ 100] or not true / false not true > -false rem true then
relax 
end

; while not not abba * not not not true / false do     relax 
end


end

; "hello" ."hello" ."hello" 

end

; abba [false rem abba () - not false rem true or not 100] -100* not false 
while -true and not not false = -not not not not 100rem not not false rem abba     relax 
end


end

begin
    integer abba , abba , abba ;     boolean array abba , abba abba ;     call abba () 
; if abba () + abba [-true and false + true / abba and abba + not and false ] * false + not not 100and 100and false < -true () - not not abba then
    relax 
end


end
