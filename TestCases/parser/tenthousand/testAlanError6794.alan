source abba function abba () 
begin
    array abba ;     integer array abba , abba ;     call abba () 

end
function (integer abba ) 
begin
    boolean array abba , abba , abba ;     integer abba , abba , abba ;     if -100and 100< true and abba then
    relax 
end

; while -do     if 100rem true / abba or true and not false - true rem 100and not false > not not abba / false and not false - 100then
    relax 
end

; abba [-not abba () / not false + true ] := array -not not true + 100rem true 

end
; while true or 100rem false do     get abba [-abba - false ] 
; abba := array -not not abba and true * not abba () or true rem abba [-abba (rem ] rem true 
; leave 

end


end

begin
    boolean abba , abba , abba ;     boolean abba , abba , abba ;     abba := array 100

end
