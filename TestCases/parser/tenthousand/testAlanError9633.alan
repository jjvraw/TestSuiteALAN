source abba function abba () 
begin
    integer array , abba ; boolean array abba ;     call abba ) 
; call abba () 
; if true = -not 100* 100and false - not 100* true rem 100then
    relax else     call abba () 

end


end
function abba () to integer 
begin
    integer array abba , abba ;     relax 
end
    if -not true * not true rem = and not false then
    if -100* not abba - abba / 100then
    leave 
else     get abba 
; while not not true - not false + not not 100and true rem abba () = -false and false rem not false - abba () * 100* false + not not not not abba and true and not true do     if -100< -not abba [-abba [-false rem abba [abba [-not true not 100or true / true and abba true / 100- 100- abba [not not not not true + not not 100/ false ] and 100] ] - not true * abba [100/ true * abba false * false ] ] / abba [-true or false rem not abba [-abba [-not false and abba () and not true + 100rem abba [not not () / true * not true or not not not false / 100* false ] * not true - not abba () ] * abba [-true rem not * not abba ] * 100] ] or 100] + 100rem not abba - false ] and abba [-true - abba * not not 100and not not not abba () + abba ] + not not 100/ abba or true then
    relax 
end

; while -abba - 100= -not not true and 100rem true do     leave 

end


end


end

; put "hello" ."hello" 

end

; get abba [true * not 100- true / abba [-false and false rem not false - 100or true ] - false rem abba () / not not 100] 
; leave 

end
