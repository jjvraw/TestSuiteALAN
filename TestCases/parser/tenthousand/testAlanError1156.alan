source abba function abba (integer array abba , boolean abba , boolean abba ) to integer 
begin
    boolean array abba ;     get abba [not abba ] 
; while 100- abba (+ 100> -true / not true and true + true do     get abba 
; put "hello" ."hello" ."hello" 
put "hello" 

end


end
function abba () 
begin
    integer abba , abba abba ;     boolean array abba , abba ;     if -true and 100+ not abba () rem not abba [not not not not abba * 100/ not true or 100+ false / abba ] = 100+ not not true and 100+ 100* abba () rem false then
    relax else     while abba rem true rem not 100do     relax 
end

end

; while -not false rem 100- false * not do relax 
end

; if not not abba rem not false / true then
    call abba () 
; [not not 100/ not 100* or abba / abba () rem 100+ not abba ] := array not 100- abba () * false or 100rem true 
; call abba (

end


end

begin
    leave 
; if -true and abba () * not true then
    call abba () 
call abba () 
; put "hello" .

end

; get abba 

end
