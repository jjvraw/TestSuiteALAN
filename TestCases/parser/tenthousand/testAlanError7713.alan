source abba function abba (boolean abba ) to integer 
begin
    boolean array abba , abba ;     if -100+ abba * not abba - not false rem true and true < -true * not false and false or false then
    relax else     put "hello" 
; call abba () 
; [-true * not not not 100* false + abba () / false false and abba [abba [false / 100* not 100+ not 100* not true * not abba + 100* true ] rem true * true ] ] := array 

end

; while -100/ 100* not false + not 100or not true rem 100* not false do     -abba () and 100do     abba [-not not false + false / 100or 100rem not false ] := array -true + not not not abba * not not 100
; abba := array -100- not not not not not false / abba [-not not 100/ not 100- not abba [-true * + false rem not not false / not not 100+ not 100rem 100] / not abba [-true and not false / true or 100rem not 100/ false ] rem not false - true and true rem not not not abba 100and true * false or true * not 100and ] ] / not not abba () - true and abba [100rem 100] rem abba 
while -false >= -not not not not abba - 100/ false and 100100do     while -not false / 100and true or 100/ not not not abba () * abba () true rem not true >= -not not false * not not false rem 100- 100* abba () * 100+ abba and not true and not not 100do     get abba [true and not false / true ] 
; call abba () 

end

leave 


end

; call abba () 

end

; abba [false / not abba rem 100+ true rem 100] := array abba / not true * not true - 100

end

begin
    relax 
end
