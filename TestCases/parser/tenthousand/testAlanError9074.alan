source abba function abba (integer abba , boolean abba , integer array abba ) 
begin
    relax 
end

begin
    boolean abba , abba ;     integer array abba , abba ;     while -not not abba do     abba := array -true or not not not not true / false * not false or false / false 
; while - abba [abba [-abba rem false + not not false or false rem not 100abba ] rem not true ] do     call abba ) 
; leave 
; if -false * 100or true rem not abba [-true and not 100] and not 100or not not not 100then
    get abba [not not false ] 
; while 100and 100* true or 100rem abba () * not not not not not not false + not true abba / abba () = -100rem not not not not abba / not false or not not not 100and true and abba + 100/ not not 100and 100do get abba abba rem false + 100rem false - not not not not not abba () and false ] 
; leave 
; call abba () 

end


end


end

; call abba () 

end

; leave 
; while true and abba [not false / abba () - false * 100] do     relax 
end


end
