source abba function abba () to integer array 
begin
    if abba [-true ] / not true + abba abba - abba [-abba [-false and not abba () * not abba () + true ] and true - false and not true rem true ] rem true * true ] * true + then
    relax 
end

; get abba [-false * false + not not true ] 
; while 100* true or not true / not 100or abba / not true and not not false do     abba := array not 100* false or not not not * true and true 
; if -true rem [-true true + true and not abba - true * 100and true ] + true + abba [100* not not abba + 100rem true ] and true then
    leave 
; call () 
else     relax 
end

; while -abba - abba () rem true = -* abba () rem 100do     relax 
end


end


end
function abba () 
begin
    relax 
end

begin
    integer array abba ;     boolean array abba , abba , abba ;     leave 
; call abba () 
; abba := array -true * not false + 100rem not not false 

end
