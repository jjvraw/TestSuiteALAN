source abba function abba (integer array abba ) to integer array 
begin
    integer array abba , abba     array abba , abba , abba ;     call abba () 
; if -not false > 100* not false then
    relax else     if true then
    leave 
; if not abba () and 100+ false <= -not true / not true or true * not 100* true - true and 100then
    relax else     get abba 
; put "hello" ."hello" ."hello" ; put "hello" ."hello" ."hello" 

end

; if -true * not false * abba then
    abba := array -not false * 100and not false + not not not true / false - not not false * abba * not true 
; while -abba [false and not true * true - false     relax 
end

; get abba 

end

else     while abba or false * not abba * true do     if -abba [true / false ] rem 100- / false / not abba + 100* false <= 100- abba * not not 100and not true - abba () and false true then
    relax else     call abba () 

end

; while -not not not true + 100rem false <= -false * not true rem 100or false do     relax 
end


end


end

; while false - not not abba + true do     while -not abba / not 100<> abba + not 100* false rem true or not 100* true and not abba do     relax 
end
; leave 
; call () 

end


end

; while true rem not abba <= abba / not true or abba / false or 100do     relax 
end


end
function abba () to integer 
begin
    integer abba , abba ;     boolean abba , abba ;     call abba () 

end

begin
    boolean abba ;     integer array abba , abba , abba ;     leave 
; while -not not abba [-not not true * false * false ] / not true - not 100- abba () <= not true do     relax 
end

; put "hello" ."hello" ."hello" 

end
