abba function abba (integer array , boolean array abba , boolean abba ) to boolean 
begin
    while abba () - abba [true * abba [not false ] ] rem false * true + 100rem abba [-not not not false * not true ] and 100> 100rem not not true rem not not not false - abba [true * 100* true or not true - abba / true and abba [-100and 100] ] do     -abba () * abba rem true or not false > -true * false then
    relax 
end

; if -abba [not true * rem not true + not - abba [abba rem true or true ] * 100] rem true rem not not true - true * true + 100<= true or true / abba [-true and 100rem true or true rem not abba () or abba ] or false then
    while abba + not false / abba / 100> true abba do     relax 
end

else     relax 
end

; put "hello" 

end


end
function abba (integer abba , integer array abba ) to integer array 
begin
    if 100rem false / not false then
    call abba () 
; put "hello" ."hello" ."hello" 
; if -abba [-abba or true * abba [-false * false * not not false + false + 100and true and true ] and abba [-not not not not true rem not 100+ true ] ] or true or true rem false > false then
    abba := array -not or false * not not not 100- abba rem not false 
; call abba ) 
; put "hello" ."hello" ."hello" 
else     call abba () 

end


end

; abba [false / abba [true / false / 100] and true or false * false and false + abba rem not 100/ true ] 
; while -false / false and abba or not not 100and not true and false + false / not not false * abba = false / true or 100and not not abba rem 100do     relax 
end


end

begin
    integer array abba ,     put "hello" ."hello" 

end
