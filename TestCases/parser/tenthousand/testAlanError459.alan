source abba function abba (boolean array abba ) 
begin
    integer array abba , abba , abba ; integer abba ;     put "hello" ."hello" .
; while -not not true * abba * not not false < abba and abba * not not abba do     relax 
end


end
function abba (integer abba ) to 
begin
    boolean abba ;     boolean array abba ;     get 
while true do     abba [-false and not not true or abba () and false ] := array abba () and not abba / abba [abba [100* not 100] * not not abba - abba rem 100* 100+ 100] + not 100/ not 100or 100and 100

end


end

begin
    integer array abba ;     if -not 100* not 100rem 100- false / true     abba [false and true / not ] := array -not true / true and true 
; if true or abba [not 100and abba * true ] rem true or not true < not not 100* abba () and abba + not 100rem not abba and 100- true then
    while abba * true + not true - 100rem true and true do     leave 

end

; -not not not not false * not true or not not abba or not true rem not abba [abba [false * not false * not not false + not true and false ] not false * 100or true rem 100rem 100] do     abba [-false rem not not not not true / true ] := array not abba [100+ true and 100or true rem true * 100] and false 
; leave 
; put "hello" ."hello" ."hello" 

end

else     relax 
end

; abba [100/ 100* not not not 100] := array not not false * true or not not abba 
else     relax 
end

; abba := array false / 

end
