source abba function abba () to integer 
begin
    boolean array abba , abba , abba ;     boolean abba , abba ;     abba ) 
; abba := array -false / false * not false - not true - true rem abba [-not not not not 100and 100] 
; get abba [100- not 100] 

end
function abba () 
begin
    integer abba ;     boolean abba , abba ;     if not not not false rem not not not 100<= -100and true rem abba [100* 100+ not 100not abba rem not abba ] or not not false or not abba then
    relax else     
end

; while -not not false and not not not abba () and not 100or not true rem false * abba do     
end

; if -not false + not not 100then
    if 100* false then
    get abba [true ] 
; abba := array abba () true / true 
else     relax 
; put "hello" 
else     leave 
; get abba 
end


end

begin
    integer abba ;     integer abba abba ;     put "hello" 
; abba := array -not not false / not abba () 

end
