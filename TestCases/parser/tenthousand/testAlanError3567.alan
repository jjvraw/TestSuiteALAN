source abba function abba (integer abba , boolean array abba , integer ) 
begin
    boolean abba , abba , abba ;     integer array abba ;     while -not not false or abba [-not true / 100* abba [not not true or true rem abba ] ] - 100and 100and true > true not false * false + true and true do     relax 
end


end
function abba () to integer array 
begin
    abba , abba ;     call abba () 
; abba := array abba * not false abba [abba [-false and not 100rem false ] or not not true / 100rem true ] or not [-false rem abba and 100+ not false rem abba () ] or false * true 

end

begin
    abba [abba [abba [not false rem not false rem abba [true and true / false ] - not true rem abba () true rem not abba [-false ] ] false * false and true ] := array -true * true + abba or not not 100* not not 100
; if -true / not abba then
    put "hello" 
; get abba 

end

; leave 

end
