source abba function abba (integer array abba , integer array abba ) to integer 
begin
    integer abba , abba , abba ;     while -false rem abba (and 100not false >= not true do     get abba [true and not true - abba / not true ] 
; while true * not not false rem false <> -100rem not not false * false + not abba () rem not not / false do     abba [not abba (* 100- true ] := array -true * abba () + true + not abba rem false 
; get abba [false / false / 100or true and abba and 100+ false / false * 100] 
; while -true / not not not not true * not abba () + false / not abba / true + 100do     put "hello" ."hello" 
; while -not 100or false and false - true do     get abba 

end

; call abba () 

end


end


end

; get abba 
; abba [-not not false + not true / 100rem false ] := array -not true rem false 

end
function abba (boolean abba ) to integer 
begin
    get abba 
; abba := array -not not not abba and 100+ not 100+ 100

end

begin
    boolean array abba , abba ;     boolean abba , abba ;     call abba () 
; if true rem abba [-false ] / not not true + not false rem not false >= false * 100* true + false not false rem 100or abba () and abba [not 100and true and false or false rem 100* false ] true     call abba () 
; leave 

end

; if true or false + false >= not true / 100* not true + not abba * not 100then
    if abba () / true - abba / true * true < true / true + true and 100then
    relax 
end

; call abba () 
else     put "hello" ."hello" 
; if not abba * abba () - abba [-not 100and false rem not abba () ] * not true and not false then
relax else     leave 
; get abba 
; abba := array -abba () true 

end

; leave 

end


end
