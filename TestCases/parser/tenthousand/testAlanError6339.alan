source abba function abba (integer abba ) 
begin
    integer array abba ;     relax 
end

begin
    call abba () 
abba [abba () or abba * not 100rem not true ] := array -true - false / true rem false 
; while -not 100* false + not abba () / false = -not false and true / abba or not not not true / not true do     not abba () * 100rem 100<> -not false + 100* not not not not 100* true do     abba [false - not not abba [-true + 100rem not not 100and false - abba * 100/ abba [abba () * not abba ] * abba [-false * false - 100+ not true ] ] := false / 100- abba [false * abba - true / not 100/ not false + not abba () rem true ] * abba 
; get abba [-100+ 100] 

end


end


end
