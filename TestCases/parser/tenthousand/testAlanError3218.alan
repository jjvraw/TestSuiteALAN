source abba function abba (integer abba , boolean abba ) to integer array     boolean abba , abba ;     abba [abba or abba () * not abba [100/ not 100or not false and false * 100+ not not not not abba [true ] and true rem not 100] and 100] := array -* 100or abba () or true / true 
; if -abba () * * not true + false and not not true + abba [-not true / false ] and false rem not 100<= true and not 100* false + not 100or 100then
    while 100do     relax 
end

; while true / not not 100or false * abba [-false * abba rem 100+ 100rem abba [-not 100or 100* abba * not not not 100or abba [abba [-false rem true and not false ] * not false rem not 100- abba () / true * true ] * not 100and [-not false * 100or true ] ] / not not true ] rem not false do     get abba [-false rem false ] 
; if not false - not true / true * true + 100/ false then
    relax 
end

end

; get abba 

end

end
function abba (integer abba , integer array abba , integer abba ) to boolean array 
begin
integer array abba , abba ;     integer abba ;     abba [not abba () and abba ] := array -not not true or not true 
end

begin
    relax 
end
