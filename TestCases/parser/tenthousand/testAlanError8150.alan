source abba function abba () 
begin
    relax 
end

begin
    boolean array abba , abba ;     boolean abba , abba , abba ;     if false rem not abba = not not abba () and not 100- abba rem 100* not not abba () then
    relax else     relax 
end

; while -100= not true or not false and false and not [-not / not not abba () + not abba or not true * not true ] or not true * true rem false do     if not abba and not true / abba then
    abba := array not abba ) / not not abba [-* not not not true - false / 100and not true - false ] - abba [not not abba [-false rem not false ] and abba or true + not abba [-100] ] 
; while 100and true - false <> -100and false / not true - not abba [abba and 100* not abba () + not abba [-false ] / not abba () rem not true ] and abba [100] / 100do     relax 
end

; leave 
else     while abba and true - true / abba [100and true / true ] do     relax 
end

; while true or abba do     relax 
end


end

abba := array -not abba () rem not not not not not true + false 
; get abba [false / false or false / rem not not not false ] 

end

; while 100/ abba rem abba [-100/ 100] do     "hello" ."hello" 

end


end
