source abba function abba (boolean abba ) 
begin
    integer abba ;     get abba 
; if -not not not true or false / true > -not abba () and true rem false or not not not false + not not not true rem not abba [false * false * abba ] / not not not not abba then
    while -not false rem true not true do     abba [true rem true / abba [-abba or true * 100] + abba () rem 100* false or 100] := array false / not 100
; put "hello" ."hello" ."hello" 
; put "hello" ."hello" 

end

; if -abba then
    relax 
end

; if -false abba [-abba - true / abba * + abba * false / true ] and true - abba () or false then
    relax else     call abba () 
; get abba 

end

else     while -true and 100and 100or not true + not not abba () * abba do     call abba () 
; call abba () 

end

; while true or 100do     relax 
end

if false and not abba - false + not 100    call abba () 
else     
end


end

; if -false or not 100/ abba () rem 100+ not abba () <> abba () rem true then
    leave 
else     abba () 

end


end

begin
    integer array abba ;     relax 
end
