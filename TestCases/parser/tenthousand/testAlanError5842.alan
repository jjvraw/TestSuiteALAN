source abba function abba () to boolean 
begin
    boolean abba , abba ;     integer array abba ;     while rem abba / true - abba () and 100= not true and abba - abba * not not abba and not true - not abba / true and 100do     relax 
end

; abba [-abba () not abba () - true * not false and not false ] := array -100and rem true + not 100* false and 100or 100* 100* 100
; while false rem true - false / 100* abba [not true and 100* true or 100/ not abba [true * false / 100+ 100true - 100not false ] rem not 100+ true ] do call abba () 
; abba := abba (* not not 100and not false + not 100rem false and 100

end


end
function abba (boolean array abba 
begin
    relax 
end

begin
    boolean array abba , abba , abba ;     if true < -100or not true - abba * 100then
    while 100= -abba + 100/ not not not not false or not 100* true     relax 
end

; call abba () 
else     relax 
end

; abba := array -not false rem abba or 100
; put "hello" ."hello" ."hello" 

end
