source abba function abba () to integer 
begin
    while abba () * not 100100* abba [not abba ] and not false do     abba [-not abba [100] rem not not not true + not not not not not abba / true + abba [-not not abba () - not true * not not false ] rem not 100] := array not true + abba and true and not abba 
; if abba * not true and true + abba / not 100<> -not abba [100+ false rem 100] then
    relax else     [-100or / true abba [-true * 100- 100rem not abba and not true - abba () and false ] ] := array -100/ not true and true or abba [-100rem abba () rem false or not not not () rem not false * abba ] or not not false 


end

abba := array -/ 100- 100

end

begin
    get abba 
; if abba - abba or false rem true rem false = -false or abba [-not abba / abba * 100- 100/ 100+ rem 100rem not not not false ] then
    abba [-100rem abba or true and abba [-true rem not false - not abba + 100] ] := array not abba () or 100

end

; while -not false rem false true + abba rem abba > not not not 100* false - abba () / true do get abba [not not not abba [100and and true - not not true and not abba [abba * 100or 100and 100] ] and 100rem abba () + abba () * 100- false / not false ] 
; get abba 
end


end
