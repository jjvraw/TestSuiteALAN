source abba function abba () to boolean 
begin
integer array abba , abba ;     boolean abba , abba , abba ;     get abba [100and not abba () or true * not 100] 

end
function abba () 
begin
    boolean abba , abba ;     while not not false and 100* false do     
end

; abba := array not abba rem not abba [-100] 
; if -abba / true / not -true / not true then
    relax else     put "hello" 
; while not true rem true * false + not 100not false / 100<> not abba rem false do     while -not 100> -false + not false + 100/ not not not true do     if not not not abba >= true * true rem not not abba [-abba [-false and * true + true * false ] and not not abba [-false / abba () / abba () - not not abba ] - abba [not not false - true ] * abba () abba or 100] then
    if -not abba rem 100then
    abba not not false * true or not 100- 100] := array -100+ 100rem abba / not true - not 100* rem not not not not 100
; abba := array -true rem abba / 100+ not 100rem true * not 100+ 100
else     abba [-100+ not true ] array 100or not not abba [-abba () and not not true - not not true ] 

end

; while -100and not not not abba < abba / not 100* not false do     relax 
end

; get abba 
else     leave 
; call abba () 

end


end

; -not true / not not not not not 100- not true and abba [-not abba () or false + 100and 100* abba () ] do     abba () 

end

; leave 

end

; call abba () 

end


begin
    if true rem true * false >= -100and abba -abba and 100rem not abba [-not false + not not 100and false ] or not true / true ] or not false / false then
    relax 
end


end
