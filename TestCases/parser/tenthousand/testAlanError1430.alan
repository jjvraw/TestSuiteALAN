source abba function abba () 
begin
    get abba [-true and false ] 
; if abba / false + true rem not false * false + true rem 100rem false >= -true then
    while 100+ not abba rem not true <= 100/ 100while -abba () rem not abba + 100rem not not abba * false <= -not not true not 100- not not true / abba rem false - not 100do     abba := array true + not true / not false 

end

; abba := -false * abba [-not abba and not true and not [not abba or true 100/ false or abba -abba or abba rem not ] / 100and abba [-not false and 100+ not 100and abba () * 100] ] - true rem false rem 100] rem 100- abba [-not true rem 100/ not 100] / * false 

end

else     relax 
end


end
function abba (boolean array abba , integer abba , integer array abba )     boolean abba , abba , abba ;     put "hello" ."hello" ."hello" 
; abba := array false or false / not true abba 

end

begin
    boolean array abba , abba ;     integer array abba     while not true / 100<= not abba / 100or false * not true do     while -true / abba * abba     relax 
end

; while not false / false or abba () and 100+ true / false * 100- abba () rem 100and false + 100and 100] < -true - / abba () and abba + abba and 100* abba do     relax 

end

; while true * true >= abba () do     get abba [false or not 100/ abba [-false ] and false or abba () * false / false ] 
; if -false * true / not true - false then
    if -false * abba rem false = not not 100rem true + false + 100then
    relax 
end


end

; if -abba or 100- false / not not false rem abba [-false ] = -not not 100/ 100not false then
    leave 
; if -100rem not false rem false + false then
    relax 
end

; call abba () 
else     relax 
end


end


end
