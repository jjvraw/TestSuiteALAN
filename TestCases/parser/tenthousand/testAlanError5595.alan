source abba function abba (integer abba , boolean array abba , integer abba ) to integer 
begin
    integer array abba ;     integer array abba , abba ;     put "hello" ."hello" 

end
function abba (boolean array abba , boolean array abba ) to boolean 
begin
    boolean abba , abba ;     while -not false rem 100/ abba or not not 100> not not false and true or not abba [true rem false or not false or not false and not abba [not abba () * false rem true - not 100/ abba or 100* not not true and not not not abba ] ] rem 100do     get abba [-abba [-abba [-100* true * abba - true / true and false + false * abba / not false not not true rem abba / true ] rem not not not 100abba [-false rem false / 100- false and not false / 100] + not false - 100] ; abba := array false rem true - not true - true 

end

call abba () 

end

begin
    boolean array abba , abba ;     boolean array abba ;     relax 
end
