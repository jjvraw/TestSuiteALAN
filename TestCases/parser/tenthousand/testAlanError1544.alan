source abba function abba (boolean abba , integer array ) 
begin
    integer array abba , abba , abba ;     integer array abba ;     leave 
; get abba [not abba [100or not false + not false ] rem abba [true rem not false - 100- abba and true ] - not true * not abba () or not not 100* 100
; while -true do     get abba [-not true / not false and true - 100] 
; while 100do     get abba [abba - true and not true ] 

end

; abba := array -100+ 100+ true 

end


end

begin
    integer abba , abba ;     if true rem 100/ false or not true and not not false * not true > -true rem abba [100and not abba () * not abba [false and true / 100or 100- true ] - not not 100/ not abba + true rem 100rem not false ] and false or false or 100and 100then
    call abba () 
; call abba () 
; abba [-not not false + false rem not abba 100+ 100] := array -true or true + false 

end

; abba [-false ] := array -not 100- not not not 100* abba [false / true rem not false ] + not false / abba () rem abba 
; if -100- 100* 100rem abba then
    relax 
end


end
