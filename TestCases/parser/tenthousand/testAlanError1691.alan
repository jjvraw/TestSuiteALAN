source abba function abba boolean array abba , integer array abba , integer abba ) to integer     integer abba , abba abba ;     integer array abba , abba , abba ;     relax 
end
function abba () 
begin
    boolean abba , abba ;     abba := array not true and false / false or true not 100rem 100
; if abba [false and abba and not 100- not true rem not not true and false ] rem not not not false and false >= -true * abba () + not 100/ not true then
    while -true > -not 100do     leave 
; while -not not not 100- / false >= -true / not true + false + true * 100do     get abba [true * not true / abba or abba / not 100* not false - not true rem abba () ] 
; call abba () 
; while abba do     leave 
; get abba 

end


end

; abba [-false and not * false - true * false ] := array -not abba and 100and abba () + abba / 100

end

; call abba () 
; put "hello" 
else     abba := array -not abba () and not true + rem abba * not not not true 
; call abba () 
; abba := array not abba and not not 100/ not abba (

end


end

begin
boolean abba ;     boolean array abba , abba , abba ;     relax 
end
