source abba function abba () to integer array 
begin
array abba , abba , abba ; if -false and not 100/ true then
    call abba () 
; while -100/ 100/ not abba do     if not 100or false or not false rem true <= -abba () and not not not 100/ true or abba () / true rem false then
    "hello" ."hello" 
; put "hello" 
; call abba () 
else     put "hello" ."hello" 
get abba 
; abba (

end

; abba [-not 100rem 100and not false + false rem false ] := array -not not true or not not / abba () - 100/ false 

end

else     put "hello" .
; get abba 
; call abba () 

end

; if -not abba rem false or 100* false - not then
    100- abba and not not true < abba do     call abba () 
; if true >= -not true or abba and not not not abba () / false     relax 
end

; call abba () 
end

; get abba 
; call abba () 
else     abba := array false * false / not false or 100and not false 
if false / false - false <> -not true rem abba or false rem 100+ abba [-not rem abba * true or not true * true / false ] and false / abba (then
    relax else     while -abba () * not 100rem not abba > false * true do     while -not not false * not 100/ 100or abba and true + abba [100* false + 100/ false + abba [-100* true ] ] * not not 100not not not 100do     relax 
end

; while 100* not 100false     abba := 100+ 100* rem 100
abba := array not 100and true and not not not true or false + [-false ] / not 100and false 
end

; leave 

end

; if -not not 100/ false >= abba () and not not true + not not not not not 100* abba then
    relax 
end

; if 100* not false + not 100* abba rem abba + 100rem false abba <> true and abba then
    put "hello" ."hello" ."hello" 

end


end


end

; put "hello" ."hello" 

end
function abba () to array 
begin
    integer abba , , abba ;     integer abba ;     while -true and false / false or 100/ abba <= -true and 100rem not not 100- true and not not not false true do     relax 
end


end

begin
    boolean abba , abba , abba ;     relax 
end
