source abba function abba () to integer array 
begin
    while -true + abba + 100>= false * false rem not not abba [not not 100] - not * false or abba [-true and not not not 100] do     while not 100* 100or not 100+ abba [true * true + not not true true and not not true - abba [-true - abba ] / 100] and abba * abba ) = -not not not abba [-true + not true rem not true false * true ] rem true and not 100+ not not not not false rem abba () rem abba () + not not true * not not abba * not false do     call abba () 
; while true or false * not false <> true or abba () * not false do     relax 
end


end

; put "hello" ."hello" 
; put "hello" ."hello" 

end

; while 100- true rem true * abba - abba () / abba [-abba ] >= false and true not 100do     relax 
end


end
function abba () to boolean 
begin
    integer abba abba , abba ;     boolean abba ;     
end

begin
    boolean abba , abba , ;     integer array abba , abba , abba ;     abba := array -abba / not false or false and not true * not 100+ not abba and not true and false 
; abba [-true - not abba () ] := array false - false rem false 
; if -abba / not false * not true - 100* not 100then
relax 
end


end
