source abba function abba (boolean abba ) to integer 
begin
    boolean array abba , abba ;     boolean abba , abba , abba ;     if -100rem rem abba () - abba * false - not true and not abba then
    relax 
end

if false rem not 100* 100+ abba / not 100* false then
    if not 100+ not 100* 100/ true + abba [not true and not 100or 100* not not abba rem true or false ] rem not false * true <= -abba * true * 100+ not abba rem not not not false then
    relax else     get abba [100/ 100and 100] 
; call abba ) 
; put "hello" 

end

; if -false - not abba / not true + abba [-true / 100+ not false / abba () - true * false ] / false >= true then
    abba := array not abba * not 100and true + true - true / not false 
; if not 100rem not 100then
    call abba () 
; while -true * not 100- false / false + true / true / 100> -true do     relax 
end

else     relax 
; if abba () * true + abba [not false or 100* true * false - false ] * 100/ then
    get abba 
; call abba () 
    -false or false - 100/ true = 100/ not true * true do     leave 
; put "hello" ."hello" ."hello" 
; abba [-false or 100/ true + false and true and not 100] := array false and not false / true or false or 100/ not not and abba () 

end


end

else relax 
end

; if not true and not not 100* 100<= -false then
    relax 
end

else     abba [-not not not 100rem true + abba and false + 100* not 100/ 100] := array true * true - abba rem 100* 100
; put "hello" ."hello" 

end


end
function abba (boolean array abba , integer array abba , boolean array abba ) 
begin
    array abba , abba ;     relax 
end

begin
    relax 
end
