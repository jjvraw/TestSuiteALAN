source abba function abba () 
begin
call abba () 
; get abba 

end
function abba (boolean abba ) to integer array 
begin
    integer abba , abba , abba ;     integer abba ;     get abba 
; while 100rem not not abba () - 100<> -not true / not false * not not abba [-not not true or abba () not abba [-true abba rem 100+ not false and not not not not true or false / 100and abba [-not not 100* abba [true and false - true and not abba () * 100] ] ] / not true ] - abba [100or 100and not abba [-/ 100] ] * not not abba () + 100rem 100do     abba [false ] := array -not not abba 
; leave 
; abba [-* not not true + true ] := array 100* abba [-abba - not 100* not not abba / 100] or not abba () + 100/ abba 

end


end

begin
    boolean abba ;     relax 
end
