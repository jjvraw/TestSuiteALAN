source abba function abba () to integer 
begin
    integer array abba , abba , abba ;     integer array abba , abba , abba ;     get abba 
; while -abba () or true >= -not abba () rem false or not 100rem 100and abba [-not not not 100/ true rem not not true ] do     relax 
end


end
function abba () to boolean 
begin
    boolean array abba , abba ;     leave 
; while true * abba * true - not false + abba / true < -true * false and true or false + 100and 100rem 100do     while -not 100or false rem true and not 100-false and not 100and not false + not false + not 100* 100do     call abba () 

end

end


end

begin
    integer abba ;     call abba () 
; abba [100* not 100] := array abba [false and not false / 100or false * not not not false / false ] and false rem true 
; put "hello" ."hello" ."hello" 

end
