source abba function abba () 
begin
    boolean abba ;     get abba [-true and true ] 
end
function abba () to boolean 
begin
    integer abba , abba ;     boolean abba , abba , abba ;     relax 
end

begin
    if -true * not not 100then
    abba := array not abba [100and not not false / false or false / 100rem true + not 100/ not abba [-true rem true rem not 100or true * true and false ] and not not not false ] - not 100- true 
; while -not abba and true and abba - not not false and true * false or not true do     relax 
end

end

; if false rem not abba / not true - true / not not false * not false <= abba () / not not abba * not true - not 100and 100rem 100then
    call abba () 
; get 
else     relax 
; if false - abba [-true + abba () or 100] / false + not not = -true rem not not true rem not false - true rem 100or abba () and not not not true * true then
    abba := array -not not - abba and false * 100
call abba () 

end


end
