source abba function abba boolean abba ) to boolean 
begin
    integer abba , abba ;     integer array abba , abba , abba ;     call abba () 

end

begin
    if + true then
while -abba rem true / 100do     relax 
end

; if or / not abba () then
    get abba [100- not abba / true / not false + not true * abba () rem 100] 
; call abba () 
; while -not not not false rem false / 100true 100/ 100do     relax 
end

else     while true * <> -abba / true rem not true or abba [-false + abba () rem not 100+ true ] / 100* 100do     leave 
; get abba 
; call abba () 
end

while false <= -true + false and true do     relax 
end

; while -not abba or false * true / false <= 100false - true + true do     abba := array -not 100* true / not true or false / false and abba [not not true / not not not not true / not 100or abba () + true / abba () rem false ] + false * not abba [-not true / 100+ not not + not not abba [not abba () / not abba and abba - true and not not true rem not abba ] ] rem not 100
; get abba [not true - false / 100- not abba * not not not not false ] 

end


end

; while -true or 100/ abba do     leave 
; call abba () 
; abba [not abba ] := array not true * true and not true - not abba and not false + abba () * abba () 

end

else     put "hello" 
; 100* not false + abba ) rem false rem 100do     leave ; put "hello" ."hello" ."hello" 
; put "hello" ."hello" 

end


end

; put "hello" ."hello" 

end
