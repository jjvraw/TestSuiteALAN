source abba function abba (boolean abba ) to integer array 
begin
    while false and abba rem true or not abba * not false and not 100- 100do     if true / abba rem 100then
    while -abba [true and false * not not not false or false rem true * abba ] / not false - not not not not false * 100or abba [true * false - not not not 100/ 100false - true ] * not not not 100* true do     if -true / true rem not true + false * true and 100or not not false * true >= abba () + abba rem true rem 100+ false and not abba [-true or not false and abba * 100] and false then
    if -abba - abba [not not false / not not false rem false not 100rem not false and true ] * true rem not abba [-not ] + abba and 100and false > -false * not true rem not not not abba () + abba then
    leave 
; while -true * not true / abba + true rem true * not false do     get abba [-abba [false ] or 100/ not abba * false ] 

end

else     while not false - not 100+ abba () do     relax 
end

; call abba () 

end

; get abba [abba () ] 

end

; abba [-/ false ] := array 100rem 100- not abba and false * 100
; if -abba * abba () then
    relax 
end


end


end

; leave 
; abba := array -false - false rem not false rem not false or not false and 100

end

; leave 

end
function abba () 
begin
    leave 
; get abba 
; [not true / not false and false or abba [-not true * false + not false * false - abba * not not not not not not not true ] + not not not not true rem not abba (rem abba () ] := array abba * true 

end

begin
    integer abba , abba , abba ;     call abba () 
; put "hello" ."hello" ."hello" 

end
