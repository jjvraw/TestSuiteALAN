source abba function abba ()     boolean array , abba ;     get abba 

end
function abba (integer array abba , boolean abba ) 
begin
    relax 
end

begin
    integer array abba , abba ;     get abba 
; get abba [abba () ] 
; while abba () - not not not abba [not abba () ] = -true do     if abba () rem not 100- false / not 100- abba () > abba rem abba * false - true + not 100* false * abba [not false ] then
    while -100rem false and abba () + not not do     abba := array abba [-not not not not true + true and not abba + not not not false rem abba and false or true / not not false rem false - abba rem true * true 

end

; if abba () rem not not not not false * not abba or true > abba and 100not not not 100or abba () / not not abba [false and false - false ] then
call abba () 
; leave 
; call abba () 

end

; call abba () 
else     get abba 
; abba := array false * true + not false * false / abba - not 100and abba and false 
; abba := array true not not abba + not 100and false / not false 

end


end


end
