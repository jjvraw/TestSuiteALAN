source abba function abba () to boolean 
begin
    integer abba , abba , abba ;     boolean array , abba , abba ;     call abba (
; if -not not false <> true true - 100rem false 100* false then
    if not not not true * true + 100* false - false > not true then
    abba := array -100/ abba 
else     if false rem not true rem true or false and false >= -not abba then
    relax else     relax 
end


end
; abba [not abba [100rem abba () or 100] * not 100/ abba [-abba [-100or not not true - abba and true ] rem 100or not abba [abba and false or not not abba ] and not not 100] true * abba abba [-abba () / not not not 100* not not 100+ false rem not true / abba [-true and not abba - not not not false rem not abba - false rem 100* false ] / not abba () / not not true ] := array -true * false and abba ) 

end


end
function abba () 
begin
    boolean array ;     integer array abba , abba , abba ;     relax 
end

begin
    boolean array abba , abba , abba ;     boolean abba , abba , abba ;     put "hello" ."hello" ."hello" 
; while false - false * not true * abba [-false or true rem not 100] not not not abba [-100+ false ] rem 100/ false do     
end

; while -not not abba + not abba () and rem not true do     leave 
; leave 
; call abba () 

end


end
