source abba function abba () to integer array 
begin
    boolean abba , abba , abba ;     relax 
end
function abba (integer abba ) to integer 
begin
    abba [100+ 100* abba () - 100and true * true ] := array 100- abba [not abba * false * not not false ] and abba () - false / abba * abba 
get abba [-true and 100] 
; get abba [-abba + not not () or false * not not abba () * abba [100] ] 

end

begin
    boolean array abba , abba , abba ;     abba [-not not not false rem abba () and abba + not false or false and true and ] := array abba [abba [false rem not 100+ true ] ] + not false or true and not 100and not abba [-abba [100and false ] + 100or true and 100rem not not not true ] 
; while false or abba * 100/ 100or true <> false and false - 100* not true + true / not abba () do     relax 
end


end
