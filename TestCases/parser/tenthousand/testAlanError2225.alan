source abba function abba (integer abba , boolean abba , boolean abba ) 
begin
    relax 
end
function abba () to integer array 
begin
    if abba [-true / abba [-false - true rem false ] + 100and false and false + false * true * abba [false ] ] / 100and not 100not abba () * abba [-100* true ] / not true then
    get abba 
; while false * not or not not false do     leave 
; get abba 
; if -true / not not or abba [abba * 100and or not true * false ] / false <= not 100and not false or abba and true or true rem true / not false then
    relax else     call abba () 
; get abba 

end


end
else     abba array false and abba [false ] / true or not false / 100/ false or true rem not true 
; while -not true / true + 100rem true * not 100- not 100do     while false and true and not false + false and not [-false - not true * not true + not false ] do     
end

; while abba and not not false rem 100- 100do     abba := array not 100or true / abba () / false 
; put "hello" ."hello" 

end

; while -100and abba and true - not abba () rem true and not true do     abba [-true rem not false or 100rem abba () / true ] := array -- abba () / not not true 

end


end

; get abba 

end

; while abba - and true and 100    relax 
end


end

begin
    integer abba , abba , abba ;     call abba () 
; abba [-abba ) ] := array -abba [-abba * not false * abba ] * false or not false + 100/ abba 

end
