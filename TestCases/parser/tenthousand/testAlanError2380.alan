source abba function abba () to integer 
begin
    integer abba , abba , abba ;     boolean array abba , abba ;     -false and 100/ not not true - abba rem false + not not true and not false > not 100/ false + not abba [100rem abba () ] * abba () and false or not 100/ abba then
while not not not false / false do     put "hello" ."hello" 
; call abba (

end

    call abba () 
; call abba () 
; call abba () 
end

; get abba [-abba rem not not abba (or 100and not not abba - not true ] 
end
function abba (boolean array abba , integer array abba , integer abba ) integer 
begin
    integer abba , abba ;     boolean abba , abba ;     relax 
end

begin
    boolean abba , abba ;     boolean abba , abba ;     get abba [100* not not false and false ] 
; if not not false * 100and abba [-false * abba () / not 100or abba / false ] = true - true * not not true and not 100+ not abba () then
    while -100not true * 100rem true + 100/ not not abba () do     relax 
end

; leave 
else     relax 
end


end
