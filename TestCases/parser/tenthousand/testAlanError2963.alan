source abba function abba (integer array abba , integer abba , integer array abba ) 
begin
    boolean array abba , abba ;     integer array abba , abba ;     relax 
end
function abba (boolean abba , boolean array abba ) 
begin
    integer array abba , abba , abba ;     call abba (
; if 100false * true then
    relax else     -true / false - 100rem not abba () * abba [true and false / not not not true + not not abba () and true ] <> -not false rem not abba or true / abba () and not 100then
    abba := array -100rem not true + not 100100

end

; call abba () 
; while -false / false / not not true - abba [100* true ] / true rem false - 100rem true rem false do     relax 
end


end

; call abba () 

end

begin
    abba ;     abba := not not not and false - abba rem not false and not [abba ] - abba 
; call abba () 

end
