source abba function abba () to boolean 
begin
    put "hello" ."hello" 

end
function abba () 
begin
    integer array abba , abba ;     integer array abba ;     if -abba * not () * 100or 100then
    if true <> -100/ true * abba () then
    if -() and abba = abba [true * false * not 100] * 100* true + true / abba then
    abba := array false rem true 
; if not not not true * true + 100    relax 
end

while -true rem true or not not abba [true or true * 100] / abba + 100rem abba [not true * not not not not not abba [100] or false or not false and not false * abba ] / 100    leave 
; leave 
; get abba 

end


end

else     if not false and abba rem false <= abba rem abba [-100+ true * 100* not not not not true + not not false * false ] + abba () rem not true rem abba then
    while -true * not 100>= -100and abba * 100do     relax 
end

; abba [-not 100+ not false - not false / abba * not true ] := array -true * false + false 
else     relax 
end

; if false * not false rem not false + abba [-true rem not 100* abba () or false / true ] <= abba [not not 100] then
    get abba -not abba [-not true / * true + true abba [-[-100or true ] rem not 100/ false or false and not not not not 100+ 100and not true * abba () ] ] * not true * true ] 
; get abba 
else     call abba (
put "hello" 
; call abba () 

end

; call abba () 

end


end

; get abba [true - 100and 100- false ] 
; leave 

end

begin
    get abba [not 100rem false - false ] 

end
