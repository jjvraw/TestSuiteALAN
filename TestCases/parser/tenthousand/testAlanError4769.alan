source abba function abba (integer abba ) 
begin
    boolean abba , abba , abba ; boolean array abba ;     while -true / false * 100+ false and 100- 100and false / abba [-not not 100/ abba * 100+ 100rem true - not not not true * 100] do     if false > 100or not not 100/ false - 100and 100then
    leave 
; while not not abba false and false + not false rem false / true or abba () / not false / not abba () do     relax 
end

; get abba 

end

; call abba (
; call abba () 

end


end
function abba (abba ) to integer 
begin
    integer abba , abba , abba ;     relax 
end

begin
    integer array abba , abba ;     if -not false rem abba [true rem true - not false * or false rem false ] + not abba * not false and abba >= not false rem false * 100- not not false * 100rem not true - true then
    relax 
end

; abba := array -not not not abba rem not abba [false and false / abba - abba () and false * abba [100+ 100rem true * abba [not not true or not abba / 100and true ] ] ] 
; abba [-abba rem false * not abba - 100rem abba * 100] := array -100* not not 100rem not not true + not 100false rem not false 

end
