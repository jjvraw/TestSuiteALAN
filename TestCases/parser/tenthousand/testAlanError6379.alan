abba function abba array abba , boolean abba ) to integer array 
begin
    boolean array abba , abba ;     -abba rem false or not not true * abba or true * abba do     relax 
end

; while -not false / not abba [abba () rem false not not not - not not true rem not true - 100and false ] do     call abba () 

end

; abba [-false or 100rem true + true rem not not not not not not false ] := array not false / not false * not not abba [-not true / not not abba [not abba ] ] 

end
function abba (integer abba , integer array abba ) 
begin
    integer array abba , abba , abba ;     integer abba , abba ;     leave 
; if -not false + false abba [-not not not abba () and 100* not true - 100/ true + abba ] rem not abba - abba * true then
    relax else     get abba 
; while -not not false / abba rem abba [-100rem true / abba [abba () rem true - not not true * false ] ] + 100* true and true do     call abba () 
; if abba * true / true + not not true * abba [-not abba [-not 100/ false ] * false - 100- not false ] or abba [-true and abba () / not abba - 100] and not abba then
    relax 
end


end

; abba [abba rem true * abba [-not ] ] := array -true rem false / abba 

end


end

begin
    get abba 
