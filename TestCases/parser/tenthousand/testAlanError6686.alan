source abba function () 
begin
    get abba 

end
function abba () to boolean 
begin
    boolean abba abba , abba ;     while not not not true or false * true rem false - not not abba ) and 100do     get abba [-/ not 100and not false or not false * abba [-abba [not not abba rem abba rem not abba + not abba * not false - abba ) ] + not not abba [-not abba / false rem true or abba () ] / 100+ false * not not not 100rem abba [-not 100rem true * true ] ] - not true / not false ] 
; while -abba [not true + 100] or not not false / 100* false do     call abba () 
; 100and 100or not abba [-abba ] * true and not true < -true and abba + not not not abba then
    relax else     call abba () 
; if * true < true / false + not not true rem abba [not false / false rem 100] rem not not not not false then
    get abba [not not abba - not true rem false * not not true - abba * 100/ not not true ] 
else     put "hello" ."hello" ."hello" 

end


end


end

; leave 

end

; while false and 100* 100- abba () abba [-not not not false rem true abba [true / 100/ 100] + true and not 100] / true > -not not abba / not true * true do     relax 
end


end

begin
    boolean abba ;     integer abba , abba ;     put "hello" ."hello" ."hello" 

end
