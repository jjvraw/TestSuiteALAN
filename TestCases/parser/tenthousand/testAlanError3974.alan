source abba function abba (boolean array abba , integer array abba ) 
begin
    boolean array abba ;     if -100or not abba then
    get abba 
; if -abba * not 100* 100    relax 
end

; if not false then
    relax else abba [-false * false ] := array not abba or abba rem not not true 
; get abba 
; call abba () 

end

else     while not true * not true false rem abba [-true and abba ] rem not abba () + abba rem false rem abba <> false * abba + abba () rem 100* not not 100do     while -true * false * not not not or false rem abba / true or true * not not not not not false = abba [-true false and abba ] - 100/ not abba () do     relax 
end

; get abba [-not abba [-not false * not false * not false ] / + not true / not not true ] 

end

; if not false then
    relax else     while -abba [-abba rem true or true / true and true + not 100/ not abba ] or abba () rem true + true * 100* true do     relax 
end

; call abba () 

end


end

; while -abba < -100* 100rem 100+ not not true or 100/ abba do     relax 
end


end
function abba (boolean abba ) to 
begin
    integer abba ;     boolean abba , ;     leave 

end

begin
    boolean , abba ;     boolean abba , abba , abba ;     relax 
end
