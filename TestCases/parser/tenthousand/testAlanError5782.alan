source abba function abba () to array 
begin
    leave 
; get abba 
; while -not 100/ false do     abba := array 100or not true rem not false 
; leave 
; if -abba [not not abba [not not not abba rem abba ] or false and true ] * not true * not true then
    relax else     while true * 100* abba [-not 100/ not not abba [abba () / true + abba or not 100/ not false and false ] ] do     abba := array not not not true * false * abba [true + not false rem false * not false - not not not not not not not 100] 
; call abba () 
; put "hello" 

end


end


end


end
function abba () to boolean 
begin
    get abba [-not false / true ] 
; leave 

end

begin
    integer array abba , abba , abba ;     boolean abba ;     get abba [-100/ false * 100- 100and 100- not abba [-not false and true and not not not 100+ abba and not abba ] rem not not not 100] 
; get abba [-not abba () true + true - not not true * not not not true * false 

end
