source abba function abba () 
begin
    boolean abba ;     boolean array abba ;     relax 
end
function abba () to boolean 
begin
    abba ;     put "hello" 
; if false / 100/ 100then
    if not false / 100- not not abba () / 100* false - abba () / not not abba [-not true rem true or abba ] / false then
    while true rem not false > -false or 100and not true do     call abba (
; while -100< false - not abba [abba [-true rem not abba ] ] do     if 100and 100+ not not not true * true + abba () rem then
    call abba () 
else     if -false and not not true / not not abba () + not not false * not false - not true and not not abba () and true then
    relax else     leave 
; call abba () 
; if -[-not false and not false * not abba + 100] rem abba * false < 100* not abba then
    relax 
end


end

; put "hello" ."hello" 

end

; call abba () 
; leave 

end


end

else     relax 
end

; get 
; if false / not abba [-not 100/ or not not abba or not true ] or abba / abba () or false / not abba () / not not not abba >= -false - abba () or not 100* true * then
    call abba () 
else     get abba 
put "hello" 
; leave 

end


end

; leave 
end

begin
integer abba ;     boolean array ;     get abba 

end
