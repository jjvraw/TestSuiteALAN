source abba function abba (integer abba , boolean abba , boolean abba ) 
begin
    integer array abba , abba ;     relax 
end
function abba () 
begin
    integer array abba , abba , abba ;     abba := array not abba () / abba [abba () ] rem 100+ not abba [true - not true * not 100and 100- not not true ] rem not false and false 
; if -false then
    relax else     if true or not not not 100/ not 100* false - not not 100< not true + not not true / true and false + true * not not true then
    relax else     get abba 
; put 

end

; call abba () 
; put "hello" ."hello" 

end

; abba := array -100+ not abba and abba () 

end

begin
    abba [-false and 100* abba [-false + not 100/ abba * abba ] ] := array abba * 100/ true 

end
