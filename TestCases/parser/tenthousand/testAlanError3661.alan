source abba function (boolean array abba , boolean abba ) 
begin
    relax 
end
function abba () 
begin
    integer abba ;     integer array abba , abba , abba ;     if -false + true / not not not true rem true or not abba [true ] rem true and true then
    while -false * abba [abba [100/ not not abba [100* abba - 100] rem not not not true or false * not false ] / true ] / false = 100and not not not not not not abba and not not not false do     get abba 
; call abba () 
; "hello" ."hello" 

end

; call abba (
; put "hello" 
else     put "hello" ."hello" 
; abba [false / true + 100* true - true rem abba ] := array -true / not rem not 100
; while -100+ 100+ abba [-abba / 100* not true + abba rem not true + 100* abba ] >= -100rem true or true + false * not not true do while -abba () + 100and true rem true - 100do     if -not 100* 100+ true and not false * true <= not false and not not abba * abba then
    put "hello" ."hello" ."hello" 
else     relax 
end

; leave 

end

; if -true or 100and not true and false + false rem not true / not not true then
    if -false - not not not true >= not not not 100and not true * not not 100then
    relax 
end

else     relax 
end

; call abba () 

end


end


end

begin
    boolean array abba ; relax 
end
