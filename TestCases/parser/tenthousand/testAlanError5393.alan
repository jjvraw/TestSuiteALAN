source abba function abba (boolean abba ) 
begin
    integer abba , abba ;     boolean array abba , abba , abba ;     relax 
end
function abba (boolean abba , boolean array abba to integer 
begin
    boolean abba ;     while not true / abba rem not true = false * not not true + not abba do     put "hello" ."hello" ."hello" ; if -not true and abba (* false then
    abba := array -not false + true - true rem true rem not 100
; put "hello" ."hello" ."hello" 
; abba := array false 
else     while -not not not abba [-true / [true - abba -abba [-not 100* abba () * not not true ] - abba abba / 100] ] ] * false and 100< not true rem not not 100and true + not 100/ not 100* not not not false do     relax 
end

; if -not + 100+ abba > -abba - abba -] - false and not 100and true then
    relax else     relax 

end


end

; put "hello" 

end

begin
    array abba , abba ;     integer array abba , abba , abba ;     leave 
; abba := array -false + abba [-* abba () + 100rem true or abba [false rem 100* false - abba [-100* abba [not abba - false rem not abba [-not false and abba false ] rem not abba () or not abba ] - true ] and abba () / [-not 100and abba () rem not true ] ] * true or not true rem true rem 100
; while abba * not 100or true * abba or false * false and not not true < false * not not true not false do     relax 
end

end
