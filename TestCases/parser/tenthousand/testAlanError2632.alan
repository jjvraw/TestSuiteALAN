source abba function abba (integer array abba , boolean abba ) to integer array 
begin
    integer array ;     boolean abba , abba , abba ;     relax 
end
function abba (integer abba ) to boolean 
begin
    boolean abba , abba , abba ;     relax 
end

begin
    boolean array abba ;     if not not not true and false or not 100* abba rem not abba [-abba * true rem not false - not false rem false and 100or true rem not 100/ true ]     get abba [-not false / abba () * not 100or false and false * abba or not not abba / not not not false ] 
; get abba 
; if -not false * false - false + false < abba [true or abba [-not true ] and not true or not false rem false ] * not false - not abba then
    put ; get abba 
if 100or abba [abba [100* false + not 100* abba [100or not false or abba [not rem 100100- 100* false - false * not not false / true ] ] ] / not abba [not 100or not true / abba () + 100/ * false ] or not 100- not abba [-not true and not 100rem abba () - 100rem true rem 100] * abba * 100] then
    abba := array -abba () * not not abba [-not not false ] or not not 
; call abba () 

end


end

else     put "hello" ."hello" ."hello" 

end

; abba [not not true rem abba () * true not true ] := array -not true - not abba and true + not false rem not abba [abba - not 100rem false - false / true ] 
; while not true * true / abba <= -true rem abba * true + true / true * abba + false rem true do     relax 
end


end
