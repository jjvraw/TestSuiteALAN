source abba function abba (integer array abba , integer abba ) 
begin
    boolean abba abba , abba ;     put "hello" ."hello" ."hello" 
; get abba [-abba () - false * not abba and not 100- not true rem not true * not not true ] 

end
function abba (boolean abba ) to boolean 
begin
    boolean abba ;     while true or 100> 100+ not not false / abba false do     relax 
end


end

begin
    array abba ;     boolean abba , abba ;     call abba () 
; leave 
; if -100rem true * not not not abba [abba + abba [100rem 100and not not not not not false or false and false / false or 100* false ] rem false - abba () rem abba ] or not abba [true rem true 100- not 100and abba rem true - 100    leave 
; abba := array abba [-true * 100] and not false rem abba () - abba [false + not false and rem () ] 

end


end
