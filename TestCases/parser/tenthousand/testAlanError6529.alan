source abba abba (integer abba , integer abba , integer abba ) to integer array 
begin
    integer abba , abba , abba ;     integer abba ;     if abba () then
    abba [abba / 100/ false ] := array not not not 100/ not not false - not 100/ true and not or 100
; put "hello" ."hello" ."hello" 
; leave 
else     relax 
end

; while -abba true ] and false + abba () / true * not false <> -true - 100* 100do     if -not not false * abba [not not false rem 100or false or true ] * not 100+ abba then
    while -not true / 100+ false * not not true rem true - not 100do     relax 
end

; call abba () 
; abba [-false rem not false + false / not 100rem abba [-not abba () - 100or true ] + not 100and true * 100] := array -abba [not false / not 100/ true or false or false / not false * abba ] 

end


end

; while abba () not - 100<> not abba / true rem false + not not abba or not true * abba do     get abba 

end


end
function abba () to boolean 
begin
    relax 
end

begin
    integer abba , abba , abba ;     boolean abba ;     relax 
end
