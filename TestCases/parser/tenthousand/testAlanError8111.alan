source abba function abba () 
begin
    call abba () 
; if -not not 100/ true + false < -100/ 100/ not not not false - true / not false then
    put "hello" 
; leave 
; if not true > -abba [not true - 100or false rem not true * not not 100] rem false and not false then
    call abba () 
; put "hello" .."hello" 
; call abba ) 
else     get abba [100/ true rem 100] 
; while -true + false / false / false - not 100<= not 100and not not 100- not not not 100rem abba [-false / abba () / true + ] - not 100and true / not not true do     get abba [abba () ] 

end


end

else     abba := array -not 100+ not not not false rem false and 100
; get abba [not not true rem not abba and not true ] 
; if -true rem false * 100- not false and not false rem [-abba () rem not true rem not false or 100* not 100and not abba [and not false - abba () ] ] + abba (and false * abba > true * not true or * not abba () then
    abba [false - 100+ false / true and true ] := array -true or not abba [abba ] 
else     leave 
; while -100* abba rem not false do     relax 
end


end


end


end
function abba (integer abba , boolean abba ) 
begin
    integer abba , abba , abba ;     integer array abba , abba , abba ; if 100* abba * false - false + not not abba [-abba [-abba / abba () * 100or / false * not true ] * not 100+ false rem true ] / abba [true rem 100100or not abba / false ] * true <= -abba () rem false then
    relax else     call abba () 
; get abba [-not not not not not not * true ] 
; put "hello" 

; leave 
end

begin
    relax 
end
