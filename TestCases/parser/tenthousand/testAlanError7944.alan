source abba function abba (integer abba , integer abba , integer abba )     integer array , abba , abba ;     while false and not not abba [abba [-100and abba () and not abba ] rem false - abba () rem abba [not false * not 100] ] * abba [abba rem abba () and 100100rem false ] >= not 100* * abba - not not false / not true - abba () do     relax 
end

; call abba () 
; abba := array not true rem not 100or abba [false rem false * true - true and true - false / false / not true ] or not 100/ true 100

end
function abba (boolean , boolean array abba , integer array abba ) to boolean 
begin
    integer abba ;     boolean abba ;     relax 
end

begin
    leave 

end
