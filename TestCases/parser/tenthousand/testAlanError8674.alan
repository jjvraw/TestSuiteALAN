source abba function abba () to integer 
begin
    boolean array abba , abba , abba ;     integer array abba ;     [100and true abba rem not abba [-100and not 100] - false and not abba rem 100] := array -100* abba + abba () or 100/ not true 

end
function abba () to boolean     integer abba , abba , abba ;     boolean abba , abba ;     get abba 
; while -not 100- not not false * not not not not true and not not not abba [-true rem abba [not false rem true ] rem not true + true rem not not true or true * true ] < 100/ true and abba [false * not true ] + true / not true + not 100* 100/ false do     relax 
end

; leave 

end

begin
    boolean abba abba , abba ;     if -abba - false * abba + false then
    relax else     relax 
end

; abba := array -true 

end
