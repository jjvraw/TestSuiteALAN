source abba function () to boolean 
begin
    boolean abba , abba , abba ;     integer abba , abba ;     leave 
; abba := array 100/ false / false or false and false * not true 

end
function abba () to integer 
begin
    integer abba , abba , abba ;     abba , abba , abba ;     relax 
end
    call abba () 
; while -100rem 100rem false + false / not not abba [-abba [-true ] or abba rem not 100- abba [false rem abba - abba [100] + not true rem not false rem not abba ] rem true rem true ] + true rem not abba rem not not not not not true = -100100* true + abba [-100rem abba ] rem true rem not not abba + false do     while not abba < -100do     relax 
end

; leave 
; while true / false rem not not not false > -not not abba + 100and abba [100/ not true - 100/ true or abba () * false ] - abba () rem not 100rem abba [-not 100rem not not abba do     leave 
; call abba () 

end


end


end
