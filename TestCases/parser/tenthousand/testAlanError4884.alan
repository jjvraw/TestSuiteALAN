source abba function abba () 
begin
    while not 100- abba [-100] >= -not abba () do     abba [-100rem not false or not false rem 100- true rem not 100rem false ] := array -100

end
function abba (integer array abba , boolean array abba ) 
begin
    integer abba ;     integer abba , abba ;     relax 
end

begin
    boolean array abba ;     if not 100/ 100* 100- not not not not true - not 100and true then
    abba [abba / false * false - 100* abba () + not not false * 100/ 100] := array abba () or abba () and 100* abba - not abba [-not true - false and 100and 100+ abba [-abba () * not true / true ] / not not not false ] 

end

; call () 
; leave 

end
