source abba function abba (integer abba ) 
begin
    integer array abba ;     abba [abba [abba [-true * not abba [not false * not 100+ true and 100* 100+ abba [not not abba / abba - abba - 100rem not 100] rem not not abba ] rem not true not not not not abba () + not 100rem false ] * abba or not abba () + false ] ] := array 100/ not 100/ not 100- true or not not abba () 

end
function abba (integer array abba ) 
begin
    call abba () 
; while -not true - abba [-false false / abba [not abba ] - false rem abba () - false / abba () ] and not true rem 100+ not not not 100= -abba * not not abba [true + abba * false / not abba [not not not true - not abba [-true and not false - true or 100/ true ] and 100] ] or true rem not true rem true / not not abba [-not abba / false rem false + not abba * false and false ] rem 100do     relax 
end


end

begin
    
end
