source abba function abba () 
begin
    boolean array abba , abba , abba     get abba [-true ] 
; leave 
; while -100/ true + true + 100rem not abba () * true < 100rem true or 100+ 100rem false do     relax 
end


end
function abba (integer abba , integer abba , integer array abba ) 
begin
    boolean array abba , abba , abba ;     integer abba , abba ;     if not abba + true / abba () * false - 100rem abba then
    leave 
; put "hello" ."hello" ."hello" 
; put "hello" 

end

; if abba then
    relax else     while -not abba [-100] rem 100do     
end

; call abba () 
; abba := array -false or false 

end

; while / not not abba - 100rem not false = not true or not not false * 100do     call abba () 
; while true < -true - true - not abba do     abba := array abba and false 

end

; while 100rem not true rem not abba () or false do     relax 
end


end


end

begin
    boolean abba , abba , abba ;     get abba 
; get abba [not true * abba / abba or 100and true ] 

end
