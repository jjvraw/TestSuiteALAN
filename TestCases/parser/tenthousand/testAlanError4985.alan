source abba function abba (integer abba , integer array abba , integer abba ) to boolean 
begin
    integer array abba ;     put "hello" ."hello" 

end
abba () 
begin
boolean abba , abba , abba ;     integer array abba , abba , abba ;     relax 
end
    boolean array abba , abba , abba ;     integer abba , abba ;     if abba [-100and abba [-100/ not not true / abba [false and false or not not 100- false / true rem not not true ] ] - 100and not not abba ] * not 100+ abba () then
    relax else     if abba rem abba [-true / not not not true or not true rem not false and 100- true and abba and false ] rem false + not abba [true / true rem 100or false + abba * not abba [-100/ 100] ] * false - false * not abba     relax else     relax 
end

; while -not true * not not not true / false or 100rem true do     abba [-not true and false + false / abba () * not () or false ] := array not false + true * true 
; call abba () 

end

; put "hello" 

end

; while -not not not not not true do     abba := array 100

end


end
