source abba function abba (boolean abba ) 
begin
    while 100/ 100/ false or abba () / not 100* 100- abba rem not true <= -false * abba [-abba [-not abba rem abba rem - not not true rem true - not not 100] ] / false do     -false false and abba () - not not 100do     while -abba / not false or true / not not 100- not not true rem abba () do     relax 
end


end

; while false rem not false or * 100* abba [not not 100/ true ] or 100rem 100do     get abba 
; if true * false rem not true or abba rem true * abba [-false * abba [true * not not abba ] rem - false and 100* 100or true ] then
    abba := array false rem 100

end


end

; abba := array -not abba * abba [abba () rem false * false or not false * false - true ] / true or abba and abba [-true / 100- abba [not abba / not ] / not true and abba () - not not not false rem not not abba * not true ] rem not true 

end


end
function (boolean array abba , integer abba to integer array 
begin
    relax 
end

begin
    if -true <> true rem abba and abba - not true / not not abba and true then
    put "hello" ."hello" 
; leave 
; while 100and 100rem true < not not abba () * not abba - abba not abba or abba () * 100] rem abba () * not 100do     relax 
else     relax 
end


end
