source abba function abba () 
begin
    relax 
end
function abba () to boolean 
begin
    abba ;     abba , abba ;     abba := array -not abba [-false rem 100* true + not not not abba [-false rem not false ] / 100/ false + false * not 100] / not not not not not 
; while -100= false + true * not abba [100or abba [abba and false not not true ] / 100* true + false rem not abba () and not not abba () ] do     if not not true + 100or 100= -not 100and true - abba then
    put "hello" ."hello" 
; call abba () 
; leave 
    call abba () 
; if abba [abba () / false ] rem not 100+ false and true >= 100or not not true and true and abba [-100- true and abba () rem true ] - abba () / not abba () then
    "hello" ."hello" ."hello" 
; if -not false and not 100<= -not abba * true then
    abba := array false and false + true and abba () or false 

end

; call abba () 
else     relax 
end

; leave 

end

; while not true do     get abba 
; put "hello" ."hello" ."hello" 
; call abba () 

end


end

; while -abba () - not 100* not false + 100* true * false do     relax 
end


end

begin
    integer abba ;     leave 

end
