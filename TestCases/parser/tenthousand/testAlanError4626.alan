source abba function abba () 
begin
    integer array abba ;     while not not 100< -not 100rem false or abba * true * not false or false / true do     [false / true and not 100] := array 100and 100* 100or false + not true and abba [-abba * false not 100] 

end

; leave 
; get abba [false and not abba * 100or true rem abba / not not false ] 

end
function abba () 
begin
    integer array abba abba , abba ;     boolean , abba ;     relax 
end

begin
integer abba , abba , abba ;     boolean array abba , abba , abba     while false and abba () and true - true <> not abba false * true / false or true ] rem 100rem not false - false or 100* not not false / not 100do     abba [-false rem true - true ] := array -100/ not not not abba () and not not not true 
; while -not 100and not true or abba rem not not true * false or true * true rem 100    relax 
end


end


end
