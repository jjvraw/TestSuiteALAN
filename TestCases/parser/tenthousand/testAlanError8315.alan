source function abba () 
begin
    boolean array abba , abba , abba ;     integer abba , abba ;     relax 
end

begin
    -false / not not 100* true - false rem abba () / 100- 100* 100and true = true do     if -false - true * not not false then
    put "hello" 
else     call abba (
; if -not 100- abba [-not true ] >= not true - not not true and 100- not not false / not 100and not not not not abba then
    abba := array not not true or 100rem not 100
put "hello" ."hello" ."hello" 
; leave 
else     while not abba [false + not not not 100] do     if -not abba () rem 100- not not abba () false or not false rem not true * true = -true / 100* abba () + not abba then
    relax 
end

; call abba () 

end


end


end

; get abba 
while true / abba and 100< not 100rem not true + not abba * not not abba [true and not not abba () rem false or false / not abba [-not 100and not false + false ] * false - false not abba ] do     leave 
; get abba [-true - true * not abba () * not not true ] 
; put "hello" ."hello" 

end

end


end
