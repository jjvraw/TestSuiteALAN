source abba function abba (to boolean array 
begin
    integer array abba ;     integer array abba ;     while 100rem abba () 100abba * not not abba < not not abba rem abba + 100rem not not 100/ 100100/ true * false do     if abba + 100false <> -100then
    relax 
end

; if -abba (and false + false * 100* not abba -true and not false / 100false * * false - true * false ] > -false rem not false then
    call abba () 
; put "hello" ."hello" ."hello" 
else     relax 
end

; abba := array -false and not abba not false 

end

; leave 
; call abba () 

end
function abba boolean abba , boolean abba , boolean array abba ) to boolean array 
begin
    boolean array abba , abba , abba ;     if true and false rem not not not not not not not true or not not true / 100- true >= -100+ abba [false * 100/ not not false - not false / not not not abba [100* 100- 100] ] then
    get abba [not false * 100* not true ] 
; get abba [-false rem not 100not not not not not true - false and not not not not or false ] 
; get abba [-not 100rem not and not abba () + abba [-false and not false or true or 100* / false ] / not not not not false + 100and false rem not 100] 
else     
; call abba () 

end

; abba [-not true rem true or not not not not false * rem false abba and 100:= array -/ abba () 
; call abba () 

end

begin
    integer array abba , abba ;     put "hello" ."hello" ; if abba [-not abba / not false + false rem not true / not abba ] and 100or 100+ abba [-true / not 100rem false - true rem abba / true ] * 100then
    relax 
end


end
