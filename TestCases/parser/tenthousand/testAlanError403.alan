source abba function abba (integer abba , integer , integer abba ) to integer 
begin
    integer abba , abba , abba ;     call abba () 
; abba [not not abba () + not 100or not false rem abba [false + 100not not abba () abba - abba [-false and false and 100+ true and abba [100or not not true rem abba and not abba ] and abba or true * false ] ] / true ] := array not 100/ abba 
; put "hello" ."hello" ."hello" 

end
function abba () to boolean 
begin
    integer abba , abba ;     integer abba , ;     relax 
end

begin
integer abba ;     boolean array abba ;     while 100< 100/ not true + / true rem false do     relax 
end

; while not 100- 100do     get abba [-true rem true or not true / true ] 
; if -100rem not abba / not 100then
    relax 
end


end

end
