source abba function abba () 
begin
    integer abba , abba , abba ;     boolean array , abba , abba ;     relax 
end
function abba (integer abba , boolean abba ) 
begin
    boolean abba ;     leave 
; if -true rem true >= -100rem false + abba [-false * not not 100/ abba ] - true then
    while abba () / not abba do     if false not false + > -abba rem not false / 100+ not false rem abba () then
    call () 
; if false / true or abba * true * false then
    if 100+ false rem true / not 100- not false * 100>= -100* 100then
    while true or not not abba [true * abba / abba - not not false * true * not false ] * false do     relax 
end

else     get abba [-true ] 

end

; call abba () 

end

; abba [-true ] := array 100+ abba [-100and 100or not * abba and abba ] 

end

; call abba () 

end


end
; leave 

end

begin
    relax 
end
