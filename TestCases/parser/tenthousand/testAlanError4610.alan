source abba function abba () 
begin
    boolean array abba , abba , abba ;     get abba 
; if false or abba = -not false and + not abba rem 100rem false or abba * false rem not abba then
    if -not not abba [-not not not abba () ] >= -not not not true + not true / not not * not abba - false and 100rem true then
    abba [100and abba [not not true rem 100or 100and not abba () and abba - 100100] / not abba () - true rem not false and 100or 100] := array 100- false 
else     
end

; get abba [-not 100/ true / + false - not not true ] 
    
end


end
function abba (boolean abba ) 
begin
    boolean array abba , abba , abba ;     boolean array abba , abba ;     if -100and not false / false >= -false + false abba / true then
    call abba () 
; while -100or not not not not true * true + not false * abba > true - false and true / 100true / abba do     
end

; get abba [abba [true rem 100/ 100- true rem not false true ] * false - false * not abba rem 100+ 100] 

end

; put "hello" ."hello" 

end

begin
    boolean array abba ;     boolean abba ;     relax 
end
