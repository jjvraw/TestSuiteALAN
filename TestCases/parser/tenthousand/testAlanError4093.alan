source abba function abba (boolean array abba , boolean abba , abba ) 
begin
    integer abba ;     if not false rem true / not not false + not not not 100* false rem not 100< -true rem not 100+ false / true + 100then
    abba [-not 100+ not abba and 100] 
else     call abba () 
; abba := array -true rem not not false * not abba + not true + false 

end

; [not false and true rem 100- true / 100/ not false ] := array true * 100and true - 100* not abba / not false - not abba [true * not 100rem false - not not not abba [-not abba - not abba and abba () rem true + not false / not not 100* false ] * true ] rem abba rem not false 
; abba [false or abba () * 100rem false ] := array -100

end
function abba (integer abba , boolean array abba , integer abba ) to boolean array 
begin
    integer abba , abba , abba ;     abba [-/ 100+ abba () * not 100rem 100+ not and 100] := array not true / abba () / abba + 100
; abba := array abba - abba rem true / abba [false / true / 100] - abba * abba () * 100
; get abba [-not 100100] 

end

begin
    boolean abba , abba , abba ;     if -not not and abba [-abba rem true rem 100- / not not false 100] or not not abba * not 100or 100/ true * false then
    call abba () 
call abba () 
; put "hello" 

end


end
