source abba function abba () 
begin
    boolean abba , abba ;     relax 
end
function abba () to boolean 
begin
    relax 
end

begin
    boolean array abba , abba ;     while -abba - not abba () and false and abba or rem true do     put "hello" ."hello" ."hello" 
; while false - not not not abba () <= abba () / false rem do     relax 
end


end

; if -100then
    get abba [not not not false or false - 100/ 100rem abba ] 
else     while -not not 100and not not true + not 100+ false and abba rem false do     get abba 
; while -not true and abba - abba or abba rem false rem not not false do     relax 
end

; while -100- 100do     leave 


end


; if -false / 100rem abba [-abba and false * true ] > -false rem not true or 100* abba () rem false + not abba then
    leave 
; while -abba () rem false <> -not not true rem true or abba () or not 100/ not not 100do     get abba 
; abba [true + true * not not not not false - not not ] := array abba and not true / not abba [abba or not false rem / not not not false ] - not false and false * 100
; if -100* false then
    relax else     leave 
; while not not not false and true - true = -100/ not false + abba do     while abba * not not not abba [-false * false * not 100or not false ] and true - not abba = not not false or abba do     leave 

end


end

; abba -abba + not 100* true * true ] := array true rem 100/ true 

end


end

else     relax 

end
