source abba function abba (
begin
    integer abba , abba ;     integer array abba , abba ;     while 100* abba [100or not true rem false ] / 100- false rem not abba / true >= true and 100/ not true or false / not false do     while -false >= true and false rem false + not not not true / true and not 100+ do     while not false + not abba and not abba [-true / true rem true ] > not abba / false * true - true do     leave 

end

; call abba () 
abba := array -false / false + not 100* 100

end


end

; if not not not 100and not abba () + 100and abba () then
    relax else     call abba () 
; 
; if -false rem false and true + false * not false * false then
    relax 
end

end


end

begin
    boolean array abba , abba ;     integer abba , abba , abba ;     put ."hello" "hello" 
; leave 
; if not not true * not true * true or 100rem not false * not >= -abba / not not not not not 100- abba () and false then
    get abba [true and not abba + not abba rem false / not abba - 100and not 100* 100] 
; while 100and true * not 100< not 100* not not abba or not false rem false rem true or do     relax 
end


end


end
