source abba abba () 
begin
    abba [not false - false ] := array -not false / not not 100* abba [true and abba [-not not abba and not abba + not true ] and not false + true / not not not not 100
; while false * abba [-not not true + abba [100- false * not 100+ false ] / 100and not abba + not not not false * false rem false ] + true - abba () * abba [-not not not 100abba rem true and not false or false ] <= abba ) rem not not not not false - true - true do     call abba () 
; while -100and not not 100and false or not abba [false * abba + abba / not abba / abba ] abba do     get abba [false * not true / false ] 
; leave 

end


end


end

begin
    boolean abba , abba ;     abba [-abba [-100or abba [-true * not not not not abba [-100rem 100/ 100- abba [false * not 100- not 100* 100/ not not false + abba ] true * true ] - true / 100- true / 100/ true ] rem not not not true and 100] * false + not 100- abba [true + abba * not not not true and not true ] * not abba / true ] := array not not not false and / 100- not false * not not abba or not abba and not not not abba () 
; while -not not not not 100and false or true < not true / not abba and not false or not not not not abba * not true do     call abba () 
; put "hello" ."hello" 

end


end
