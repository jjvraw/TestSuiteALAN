source abba function abba (boolean abba ) 
begin
    integer abba , abba , abba ;     integer array abba , abba ;     while 100- true rem not 100rem not true or not true and true < abba * abba do     relax 
end


end

begin
    integer array , abba ;     if -100or false * not not not not true + true / true -100/ not true / true     put "hello" ."hello" 
; if -true - not false - then
    if -not abba () * not true rem true - 100> abba [-not 100- abba and abba then
    leave 
; while not false and not not abba [true rem false + abba ] or true and not not not abba and false or not not true do     put "hello" ."hello" 
; while false < abba () rem abba and true false - false and abba do     if 100and not 100/ not not not true - true rem false rem 100then
    relax else     relax 
end

; put "hello" 
; abba [true := array -not false + true * 100rem false 

end

; while 100/ false + false do     relax 
end


end


end

; while not abba (rem not not not not abba [-100+ not not false / not false or 100/ not abba / abba rem true < -abba () do     put "hello" 
; get abba [-false rem false and not abba [-false and true + 100/ false rem not false or true ] ] 

end

else     get abba 
; leave 
; put "hello" ."hello" ."hello" 

end

else     relax 
end


end
