source abba function abba () 
begin
    relax 
end
function abba () 
begin
    integer abba ;     if 100/ 100- not not false then
    relax else     if -100* not false / 100or 100+ not 100and not abba / not false then
    relax else     relax 
end

; leave ; if 100+ not then
    if -abba + abba () and not not not 100rem abba then
    get abba [-not not not not not not false ] 

end

; if 100* 100<= -abba () rem false and not abba - false / abba - 100rem 100then
    get abba [-false or false or not true rem not abba * abba ] 
else     abba [abba [-true * not 100] rem false - not 100- false ] := array false 

end

; while abba () + not 100* not 100/ not true <= false * abba () not 100- not abba rem abba and true do     abba [-100/ abba and abba or not not false := array not not false rem not not false or 100/ false / () 

end


end


end


end

begin
    boolean array abba , abba ;     integer abba ;     call abba () 
; if -abba [not false and false ] * true * true then
    relax else     put "hello" ."hello" ."hello" 
; get abba 

end

; call () 

end
