source abba function abba () 
begin
    boolean abba ;     while -* true and not abba () or true or true rem abba >= not abba () and not true + abba or not abba [not 100* abba [-abba and 100] or not not false or false ] * not abba * false do     relax 
; get abba [-not true and false - not not 100rem true rem not true or false and true * false ] 
; while abba () rem abba * 100+ not not false / not 100rem true - abba () rem not not false do     put "hello" ."hello" 

end


end
function abba () to array 
begin
    relax 
end

begin
    integer abba ;     integer abba , abba , abba ;     while -not true and false > -not not true * true / not true or not true 100do     relax 
end

; if not true + not 100/ false - not 100<= -not not true and abba () - true then
    abba := array false rem abba + not 
; leave 
; while -not abba and false rem true do     relax 
end

else     relax 
end


end
