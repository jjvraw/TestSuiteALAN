source abba function abba (boolean array abba , boolean array abba ) to array 
begin
    while not not true do     abba := array -false / true / or 100rem false 

end

; put "hello" 
; "hello" ."hello" ."hello" 

end
function abba () 
begin
    boolean array abba , abba , ;     put "hello" ."hello" ."hello" 
; if 100and not abba or not abba () / true or true / false * 100<= -100/ not not true * not 100+ abba or 100then
    if not true and not abba [not abba ] rem not true - not true rem true - abba [not abba [-not abba () + false / abba [-100rem 100* not false - abba / not 100+ true ] * 100] abba () - true * 100/ false or true and not false and abba () ] and false then
    if false and not not not false or not false or * false and 100then
    call abba () 
; leave 
else     get abba 

end

else     relax 
end

; while 100rem false * false false / 100* false - false / true - true / do     relax 
end


end

; leave 

end

begin
    integer array abba , , abba ;     integer array abba , abba ;     abba := array -true / not true - abba - abba * 100/ not not false 

end
