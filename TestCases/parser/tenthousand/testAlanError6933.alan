source abba function abba () to integer 
begin
    integer abba , abba ;     integer abba ;     call abba () 
; abba [-true and not true * not false ] := array -false * false * abba [-not not false rem not not abba [-false / not 100/ false - not 100rem false + false * not not false rem abba ] - not false rem abba rem abba () ] 
; put "hello" ."hello" 

end
function abba (boolean abba ) 
begin
    boolean abba , abba , abba ;     relax 
end

begin
    boolean , abba ;     abba [abba [-100+ 100rem abba () ] * 100/ abba ] := array -not not false - not abba / false or 100* true and abba () 
; while -false / 100+ not 100rem abba [not not true / false rem not not not true + not abba * abba and false - true and not not not true and not 100] rem 100or false <> abba / not abba () not 100rem false do     while -abba rem 100rem false - 100and not 100and true or not not false * not false * 100>= abba [not 100/ 100or not not true and not false / false ] * 100do     put "hello" ."hello" ."hello" 
; leave 
; leave 

end

; get abba 

end

; "hello" "hello" 

end
