source abba function abba (integer array abba ) 
begin
    integer array abba , abba ;     boolean array abba , abba ;     relax 
end
function abba (array abba ) 
begin
    integer abba , , abba ;     if -false / true and not abba + not false / not not false or not abba [true 100not abba / not true ] * false and 100= not not abba / not not not abba or not abba () rem not not false then
    abba := array -false and not abba [-false - abba [abba + abba [-not not 100/ 100and true - abba - not not / false / not abba [not true ] ] not not not 100] rem abba () rem abba [abba 100* not abba () + 100rem false rem 100] - true * not true ] 
; while not not not true and not abba () * abba + abba [true * true - true and false rem abba ] / abba () - 100rem not false do     relax 
end

; put "hello" .."hello" 

end

; call abba () 

end

begin
    relax 
end
