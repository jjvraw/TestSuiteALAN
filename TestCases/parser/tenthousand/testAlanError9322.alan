source abba function abba integer abba , integer array abba , boolean array abba 
begin
    while -not abba rem false + 100and true and not 100do     call abba ) 
; abba [true rem true not not 100] := array false and 100or 100rem 100+ not abba 
; get abba [-100- not false * not 100or not not abba () ] 

end

; abba [100rem false or not 100] := array abba rem false or abba () and false / not false 
; if -not not false / abba and abba - 100then
    call abba () 
; abba := array -abba () rem 100
; while abba / 100100+ false + 100/ abba [false / 100rem abba () + not not true ] do     put "hello" 
get abba 
; leave 

end


end


end
function abba (boolean array abba , boolean array abba , boolean array abba     integer array abba ;     abba := array -not false * 100

end

begin
    abba [not abba and not not abba [100rem abba and 100or not not not false and false and true - abba / 100abba [not false / false rem abba [not false + not true rem true 100] ] ] ] := array true 
; while true * false * not true < not 100- 100do     put "hello" ."hello" 
; leave 
; put "hello" ."hello" 


end
