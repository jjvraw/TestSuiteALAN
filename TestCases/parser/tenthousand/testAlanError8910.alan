source abba function abba (
begin
    boolean array abba , abba ;     boolean array abba , abba , abba ;     relax 
end
abba (integer abba , integer abba ) to integer array 
begin
    integer abba , abba , abba ;     put "hello" ."hello" 
; while -100/ abba [-abba * abba () / 100] do     put "hello" ."hello" ."hello" 
; if 100* true and not not not 100or false then
    := array -true or 100- not and false 
else     if true + abba then
    call abba () 
else     while true rem not not 100do     get abba [true + abba * abba + not 100] 
; while -abba [false / not not abba () * not not false + false and true and not false ] * true + abba [-abba () and not not not false - false rem abba ) rem false + true / false * false ] or not 100not true rem true do     abba := array true and not 100

end

; while -false and not 100/ not not not abba or not not true and not abba - true <> -not abba () and true do     relax 
end


end

; call abba ) 

end


end

; call abba () 

end

; if not 100* not rem abba () <= false / 100or false * not not not 100then
    relax 
end


end

begin
    put "hello" ."hello" 
; call abba () 
; call abba () 

end
