source abba function abba (
begin
    boolean array abba , abba , abba ;     if 100* not not not not abba () or not not abba / not true + true <= 100and abba () / - not rem abba [-not not abba () or not 100rem not false * false * 100] and abba () - true / abba () * abba () then
    abba [false 100/ true - true and true + not not not 100] := array -not false false and 100* not not true and abba 
else     put "hello" ."hello" ."hello" 

; if -not not not not not false * abba () > -not not false * abba * true + not true then
    leave 
; call abba ) 
else     relax 
end
; while -not true and abba () and not abba [true rem true and true ] - not not true rem false rem not abba or rem not not abba or not true true * not not true ] > -true / not abba [-100and 100/ false or false rem not false ] - 100+ abba / not not 100do     call abba () 
; put "hello" ."hello" 
; put "hello" 

end


end

begin
    abba [-false * false * 100or 100rem abba * abba () or false * 100] := array false - false 

end
