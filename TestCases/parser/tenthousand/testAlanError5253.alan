source abba function abba (boolean abba , boolean abba ) to integer 
begin
    put "hello" ; while 100do     relax 
end


end
function abba () 
begin
integer abba , abba ; call abba () 
; while -true and not not abba () * not true + false - false rem abba rem not not not true <> not not not not true + not true / false * not false do     if not abba [not not not abba - true rem abba * 100] - abba [abba () and abba [true - not true - abba [false and false - abba / true rem 100] ] and false ] rem false * false then
    if -100and abba () <= -true and not abba [-not 100rem abba () / 100+ not true and abba rem not 100] - not not false then
    relax 
end

; call abba () 
; get abba [100] 
else     put "hello" ."hello" 
; := array not abba rem false 100- true * 100rem abba [not false / abba and abba [abba + 100] or true ] 

end


end


end

begin
    relax 
end
