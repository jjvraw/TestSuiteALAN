source abba function abba (boolean abba integer abba ) 
begin
    boolean array abba abba ;     array abba , abba , abba ;     relax 
end
function abba () to integer 
begin
    boolean array abba , abba ;     integer abba , abba ;     -true rem true rem 100or 100rem false - 100100<> true rem 100do     leave 
; if not true / not abba then
    if -abba * not false - not and not not 100rem 100or abba and false rem not 100< -false / false then
    relax else     abba [-false - false + false ] := array not not abba () or true 
while abba > true * not false * not not 100not false / not false rem not true 100do     relax 
end

; while -true rem 100and false + 100do     abba [not not * 100] := array not true 
; get abba 

end


end
else     while true and not not not 100/ not abba [100and rem false + not true and abba () ] - 100= -false rem abba [rem false rem not true + true or not true rem false ] or true and abba [true - not not abba ] do     if -false and abba [not + not true and true rem abba ] and abba [-100] = false + not false true then
    while -true or 100rem not not 100and not not not true + not abba do abba 
; leave 

end


end


end
; leave 

end


end

; while not not abba () and true - 100* abba >= -not not false + false / not 100* 100or true / false * abba () do     abba [false or not abba () ] := array false + true or false rem 100

end


end

begin
    abba , abba , abba ;     100then
    relax else     put 
; -abba () or not true and 100then
    relax 
end

; get abba [not abba - false and not not not true ] 

end

; abba [-not 100/ 100and false ] := array -100- false / 100

end
