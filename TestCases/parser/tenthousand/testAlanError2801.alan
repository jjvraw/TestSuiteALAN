source abba function abba (boolean abba , boolean abba , abba ) 
begin
    integer abba , abba , abba ;     boolean array abba ;     relax 
end
function abba (boolean array abba , integer array abba , integer abba ) 
begin
    get abba [not abba or 100and abba ] 
; if -100then
    abba [-false / false and false or not abba [true and true or false ] + abba rem abba rem true ] := not not true 

end

; if -abba () rem not 100<= -not not true or false and false rem not not not true - not false rem true then
    call abba () 
; abba [not not not not not abba [-abba rem abba - not abba () * not abba ] + not true or abba [false * not 100* false - true rem not true + 100/ abba ] ] := array -true rem true or true / 100/ 

end


end

begin
    integer abba , abba , abba ;     boolean array abba , abba ;     leave 
; while 100* abba + true abba <> abba and abba - true do     call abba () 
; abba := array -abba / abba + 100rem 100- abba and abba and true 
; put "hello" 

end


end
