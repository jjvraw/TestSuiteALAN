source abba function abba (integer array abba , integer array abba , integer abba ) to boolean array 
begin
    boolean array abba , abba , abba ;     integer array abba ;     abba := array not true and not abba [not not not not abba () / abba [-100rem false and false - 100and abba ] ] / 100+ not + true and 100
; if abba () * true / 100- 100and 100= abba () then
    if false <> true rem not true or abba - not not false / true then
    relax 
end

; while false and abba do     call abba () 
; get abba [-100not not 100] 
; while -100* 100rem 100> abba false ] do     put "hello" ."hello" 

end


end

; call abba () 

end

; if -100then
    leave 
; abba array not 100* 100* abba 
else relax 
end


end
function abba () 
begin
    integer abba ;     while -false - false and abba and false do     relax 
end

; if -not true rem true rem 100<> -false rem false + 100* abba and false then
    if -true * not false and 100then
    relax else     leave 
; while not abba or not * false + not not 100/ abba <> -not not false rem not abba rem not true do     relax 
end


end

; put "hello" 
; leave 
else     put "hello" ."hello" 
; abba [-100/ true rem not not false + not not not false ] := array abba () not not 100or not true / not not not 100and not true 
; leave 

end

; abba [not 100or false ] := array false / not abba () 
end

begin
integer abba ;     boolean array abba , abba ; relax 
end
