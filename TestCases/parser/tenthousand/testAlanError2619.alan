source abba function abba () to integer array 
begin
    boolean array abba abba ;     integer abba , abba , abba ;     get abba [true abba false true and false / 100] and or 100and true / true ] 
; put "hello" ."hello" ."hello" 

end
function abba (integer array abba ) to integer 
begin
    while -not false - not abba - abba [not abba ] and abba [-true rem false * false ] and true do     relax 
end

; call abba () 

end

begin
    boolean array abba , abba , abba ;     -not true - false rem abba () * not false - abba rem true rem not true <= -not 100* false rem not true - false rem false * true - false then
    relax else     := array true or 100/ false rem not false + not true / * not abba () ; leave 

end

; if 100abba [-true * not not abba ] and false or true rem 100>= -false * true or not not false rem false rem true then
    if not true or abba () then
    relax 
end

; if not - not 100or not abba then
    relax else     get abba 
; abba [-100rem false / true ] := array true + true / false 
; leave 

end

; if -100rem true and not 100- not not not not true then
    while -false / not 100100- not true and false / not 100or 100* false do     leave 

end

; get abba [false rem false - true / not not not not true rem true + not false ] 
; call abba () 

end

else     relax 
end


end
