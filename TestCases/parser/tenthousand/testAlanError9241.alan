source abba function abba (boolean array abba integer abba , boolean abba ) 
begin
    boolean array abba ;     if not false rem 100rem abba () <= -abba and 100and not true then
    leave 
; abba := array not false / false and not 100
leave 
else     while -false or 100rem not false / not false do     abba [not not false * rem abba () ] := array -abba () / true 
; put "hello" ."hello" ."hello" 

end

; if 100/ not true -100+ false then
    if 100- not 100rem abba < -abba () and not abba () / true - false * false or not not true then
    relax 
end

; if not 100/ false <= -abba then
    relax 
end

; if -abba * 100rem abba () >= not abba and 100/ true - 100rem false / not not not false - true then
    call abba () 
; while 100and not true / not abba or false = not not true and not not abba [false * true rem not true or not false * 100rem not abba * abba () - not abba / true + true rem not false rem true do     abba [abba / not not 100rem false - not false and not abba () * abba [-abba - abba ] ] 

end

else     relax 
end

else     if -true + true then
    call abba (
; put "hello" 
; put "hello" 

end

; if -not not true then
    relax 
end

; put "hello" 

end


end

; [-abba [-not false - 100- abba () and true / false ] abba [not false and 100rem not abba [true + not true - not () ] + true and abba / true ] / 100abba () - not not not 100* true ] := array and abba rem abba [-false and not 100rem abba or abba [100* false ] rem abba [-not true - 100] or false rem not false + not not not false 
; while -abba or / abba and true or not abba [-not 100and 100rem true + not false ] not not false * not not true do     leave 
; if -true and false / not 100- 100and abba then
    relax 
end


end


end

begin
    leave 

end
