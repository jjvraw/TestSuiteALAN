source abba function abba (integer abba boolean abba ) 
begin
    integer , abba , ;     integer abba , abba , abba ;     if * true / false or true and not true or abba then
    get abba [-not not not false and abba () * 100] 
; while -not not 100rem not false - abba () / not abba rem not 100+ true <> not not not not abba () and false and 100- abba / not abba and false - true do     leave 

end

; get abba [-abba [true and not or true / true rem not 100] / false and not abba () ] 
else     abba [-* not not false ] := array abba rem false or true 
; abba [-not true false or not not abba () rem false - false * not not not true * not 100] := array * true - not abba 

end


end

begin
    while not 100and 100>= -not abba [-100and true + not ] do     relax 
end

; while false rem false or abba > not not true rem not false - not not false * false do     relax 
end


end
