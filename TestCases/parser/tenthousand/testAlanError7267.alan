source abba function abba () to boolean array 
begin
    integer abba , abba ;     relax 
end
function abba (boolean abba , boolean array abba , integer abba ) to boolean 
begin
    integer array abba ;     while true and not false and true do     leave 
; abba [-not false rem 100] := array true + not false and false * not - true 
; get abba [-abba / abba [not false + abba rem not not false rem not abba () ] rem not not 100or not true / false and abba [-abba / not not abba [not 100- not abba rem not abba rem abba + not abba [false - not not false ] / true false ] or true or not abba [not / abba [not false - abba ] * true or not not not false + not false * true / not false ] ] + not true and 100] 

end

; 
; if not 100and abba [-true / abba () and true ] rem not not true + not true * not not abba and 100+ not 100/ not not abba * abba [abba ] <> -true or false and false rem not not not 100then
    relax 
end


end

begin
    integer array abba ;     boolean array abba ;     get abba [100rem not not not abba [not false ] * not abba [100/ not abba () rem not abba not false - * not not false and ] + abba or 100and false * not 100] 

end
