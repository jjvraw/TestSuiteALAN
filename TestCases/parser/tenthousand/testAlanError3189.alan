source abba function abba (integer abba , boolean abba ) to boolean array 
begin
    boolean array abba ;     put "hello" ."hello" ."hello" 

end
function abba (boolean abba ) to integer 
begin
    get abba 
; if -not not 100/ not not * abba <> -true or abba [-not true rem 100* false - abba () - not 100/ not abba ] rem not 100rem 100+ true / abba () and 100then
    if false rem false / not abba () or false or not false * abba rem not 100then
if -true then
    abba [-abba and abba [not abba - true rem 100/ 100] - false ] := array -100and abba () 
; while not 100/ false and true - true * not true do     abba := array not not not true and true 
; leave 

end

; leave 
else     call abba () 
; while abba [-not true / not true rem true ] rem false do     put "hello" 
; call abba () 
; put "hello" ."hello" ."hello" 

end

; leave 

end

; put "hello" ."hello" 
; leave 
else     while -false - false and abba () + not not abba () do     relax 
end

; if -100and false + abba () rem not not false - 100* true rem 100then
    relax 
end

; put "hello" ."hello" 

end

; abba := array -100and abba [-100and not not not not true ] + 100rem not abba / not abba 
; put ."hello" ."hello" 
else     relax 
end

; leave 

end

begin
    integer abba , abba , abba ;     while -false and not false or not false - true do     call abba () 
; abba [-not not false and not not not not true rem false ] := 100* 100- false + true / ; put "hello" 

end

while false * true - not false and not not abba and not abba () + abba and true do     relax 
end

; leave 

end
