source abba function abba () to integer 
begin
    integer abba , abba ;     boolean array abba , abba , abba ;     put "hello" ."hello" 
; call abba () 

end
function abba () 
begin
    boolean abba ;     boolean array ;     get abba 

end

begin
    integer array abba , abba ;     if -not false * abba () - false rem abba or true / not not not not abba [false / or not abba ] * abba >= 100rem true rem not not true or not 100false then
    abba := array not 100- true * not false 
; if -100then
    while -false / abba + abba + abba [not abba [true and true and false ] * true * abba + 100/ 100* abba [* true or true false and true or not true * 100] or not not not abba [-100rem false and 100or abba [not abba / false and not false + abba rem + false ] - false 100rem abba ] rem not not abba () rem not true ] do     get abba 

end

; get abba 

else while abba [-100and not true rem abba - not not not true * not abba () and not not not abba ] > true do relax 
end


end

; put "hello" ."hello" ."hello" 
; while not not 100/ not false * 100+ 100100and 100= abba () / true / 100- 100* false * 100- false do     relax 
end


end
