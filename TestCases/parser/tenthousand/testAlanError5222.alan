source abba function abba () to boolean 
begin
    if -not not not abba rem false * false + false <= not true / 100then
    relax 
end

; call abba () 

end
function abba (integer abba ) 
begin
    integer abba ;     boolean array abba ;     relax 
end

begin
    boolean abba ;     if 100and not not not abba then
    relax else     put "hello" 
; while true or not false not 100* not abba [-not 100rem false * not false + abba () + not not not and false * not true ] - abba / true -not false do     if true + true then
    get abba ; get abba [not false rem abba [-abba [not not abba [-not false - true ] or 100and false + 100] / 100and not true or false * 100* true - true ] rem not 100] 
    relax 
end

; leave 
; while -not not abba * false + 100<> -abba * not abba [false ] * 100- true + not 100do     call abba () 
; if -not not true rem rem false not 100rem not not 100/ not 100then
    abba := array -100- 100/ abba 
; abba [not not 100* abba := array -not 100and false + false rem false - not abba [100+ abba () false not true + [not abba () 100- 100] true ] rem abba and not not not abba [-not abba / 100* + true - not false ] 
else     relax 
end


end


end

call abba () 

end


end
