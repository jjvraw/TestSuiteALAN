source abba function abba (abba , integer abba ) 
begin
boolean abba , abba ;     boolean abba , abba ;     relax 
end
function abba () 
begin
    while not false or not false / true * not 100or not abba rem 100rem abba [false * true rem abba () - abba and 100/ true or false false rem not not true ] = -100/ not not false * 100- not true and not abba - false * not abba [true / 100+ not not false ] do     relax 
end

; while abba () do     leave 
; abba [true / not not [-100/ true or not abba or not 100] + false and abba [100rem abba ] + not not true / false and false ] := array rem true / 100- not 100rem 100100* abba 
; if not abba * not abba * 100- 100<= false * true - 100then
    abba := array or not false - abba 
else     call () 
; abba [-true rem true * false or not not true ] := array 100/ not abba and not 100or 100or true 
; get abba 

end


end

; if -abba * abba then
    call abba () 
else     relax 
end


end

begin
    integer array , abba ;     relax 
end
