source abba function abba () 
begin
    boolean array abba , abba abba ;     abba [not not 100rem not true + abba () * not true / abba () + not not not not not 100/ not not not false / abba () ] := array false * not 100+ abba () and abba () * true abba () * false 
; put "hello" 

end
function abba () to boolean array 
begin
    integer abba , abba , abba ;     abba := array -false or true and not false - abba rem false 
; call abba () 

end

begin
    integer abba , abba ;     integer abba ;     while -false or not not false and false rem abba < -not true * false * 100+ true rem false rem abba or not abba ()     relax 
end

; if -abba [abba or abba * true or abba [100/ true * not abba - not not not 100rem not true and not false ] / not 100and not true ] and 100false or not 100/ abba [false ] and 100or false rem true <= -not not false * not not false and false then
    relax     relax 
end

; leave 

end
