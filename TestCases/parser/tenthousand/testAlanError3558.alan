source abba function abba (integer array abba , boolean abba ) to boolean 
begin
    boolean abba , abba ; while abba + false * true or abba / true do     relax 
end

; while true * abba * not not not true + true - 100do     call abba () 
; abba := array 100rem not not abba and abba [) * true / abba ] - not true / 100rem 100- not false rem true 
; put "hello" ."hello" 

end


end

begin
    integer abba , abba , abba ;     call abba () 
; while not abba + 100/ not true < -100/ true or 100and 100do     if -abba [-true and abba () * 100or 100or true and true ] and abba () and abba or not abba () / 100+ 100then
    while not true / abba * false or false * false / true > true or abba () or abba [abba or true ] rem not not false / not 100do     relax 
end

; get abba 

end


end


end
