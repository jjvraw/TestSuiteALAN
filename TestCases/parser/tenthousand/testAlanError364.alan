source abba function abba (boolean abba , integer array abba , integer array abba ) to integer array 
begin
    relax 
end
function abba () 
begin
    boolean array abba , abba ;     boolean array abba , abba ;     relax 
end

begin
    integer array abba ;     if -abba rem false rem not 100+ 100then
    while not abba / not not not 100or true < true or true * 100/ false - not false / not 100/ not not false do     while -100rem true / not 100- 100* 100- abba [false * false * not true ] <> true - true and false or abba () * 100rem do     put "hello" ."hello" ."hello" 
; call abba () 

end

; while -abba / not not abba [-false - 100- true rem abba [abba rem abba [true - false / true * 100- true and false * not not true ] / false ] ] / not not not 100- not not not 100and 100do     leave 
; leave 
abba [-not abba and false * not true + not not not abba / true ] := array -false or not not false and false rem false + not not not true / false * true 

end


end

else     if -true + abba and 100abba then
    abba := array -not true * true 
; if -abba () or abba < 100/ false / 100or true and abba [false and false and 100+ false rem true ] - abba [-true rem 100* not not not false - not true * abba ] and abba [-true - true / not true ] then
    while true / not true / true or 100* abba / abba do     leave 
; call abba () 

end

; call abba () 
; if -false / 100+ not true or not abba () >= -false rem 100- not not 100* 100- not true * abba then
    while -false - abba / 100> 100and not false and 100do     relax 
end

; call abba () 

end


end

; leave 
else     abba [-false * abba or false false ] := array -and true 
; call abba () 
; get abba [true / rem abba ] 

; if -true then
    relax else     relax 
end


end

; while -true / true * not 100do     relax 
end


end
