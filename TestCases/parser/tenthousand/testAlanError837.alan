source abba function abba (boolean abba , integer abba ) 
begin
get abba [not not not not false rem not not 100rem not not true or / false * not not abba or true * not false ] 
; if 100+ abba / true then
    if -abba + 100- false * not true <> false abba and abba + false rem then
    relax 
end

else     get abba [-not false + abba and not abba and not false ] 
; if not true then
    relax else     relax 
end

; put "hello" ."hello" ."hello" 

end

; get abba [-abba [not true * not 100* 100+ true and not 100] and not false ] 

end
function abba () 
begin
    integer array abba , abba , abba ;     if not not then
    relax else     if abba * true rem true = -true / true - not 100true then
    relax 
end

; if true rem 100- not false and not true / abba () or not false / false <= -true then
    if true or - not not abba () then
    call abba () 

end

; if false or false * not abba or abba () and not false and true then
    relax 
end

else     relax 
end

; leave 

end

; get abba 
; call abba () 

end

begin
    boolean abba , abba ;     integer array abba ;     call () 
[true rem true / not true or * not not 100or false ] := array -true / and not true or true 
; get abba [not true / not true + abba () / true and false - 100/ abba and true ] 

end
