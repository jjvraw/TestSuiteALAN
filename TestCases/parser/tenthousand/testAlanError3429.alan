source abba function abba () 
begin
    if 100then
    relax else     if -not not false + 100and true * 100then
    if -not 100- abba * false * abba then
    leave 
else     relax 
end

; get abba [not 100/ true + not 100* true / not not true or not true * true rem not true ] 
else     relax 
end

; leave 
; call abba () 

end

; abba [true abba - not 100or false ] := array -100and false 

end
function abba (boolean abba , boolean abba , integer abba ) to integer array 
begin
    boolean abba ;     boolean array abba , abba     if -false / true - true and - abba and not not false then
    leave 
; if true > 100* not not abba () * 100then
    call abba () 
else     abba := array -false + not true 
call abba () 

end

; abba := array 100rem abba [-100- not abba ] and true - true / abba () / abba [-not true / true + true ] + 100rem false 

end

; abba := array abba () / abba () / true 

end

begin
    relax 
end
