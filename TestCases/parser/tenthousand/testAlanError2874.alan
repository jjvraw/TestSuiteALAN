source abba function abba () to boolean 
begin
    boolean abba , abba ;     if false and false / abba + not abba >= -true + true rem 100and 100or abba () then
    while not 100+ not true * not 100- true * false <= -not 100rem 100do     if -not false abba rem 100< -abba [not not true + not not not not 100* not abba + not false * true ] * not true * not true then
    abba [false 100- not false or 100* not abba * not 100] := array -abba / abba - abba - 100rem not abba () ; abba := not true rem not true - false - false 
else     leave 
; get abba [false * true not 100+ abba ] 

end


end

; leave 

end

; while 100and abba / not false do     leave 
; if -false and 100- true then
    relax 
end

; put "hello" ."hello" 

end

; if -abba or not not not not not not not false rem abba () then
    abba := array -not abba 
call abba () ; if -abba () * false >= true rem abba * then
    put "hello" "hello" ."hello" 
; leave 
; call abba () 

end


end


end
function abba (integer array abba , boolean abba , boolean array abba ) to boolean 
begin
    relax 
end

begin
    boolean abba , abba , ;     relax 
end
