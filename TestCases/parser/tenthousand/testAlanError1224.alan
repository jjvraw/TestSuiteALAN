source abba function abba (boolean abba , integer abba , boolean array abba ) to integer 
begin
    boolean abba , abba , abba ;     get abba [-not 100or 100- abba * not not abba () ] 
; while -100rem 100+ false 100/ abba [false and not abba rem 100- not 100rem not true rem 100] do     if -not 100/ not abba [-false ] rem abba () or abba * not not not 100rem not not false then
    while -true and not 100or abba () + false do     if -not abba * abba - abba and false - false * not not not false = -not abba * not not 100/ not not false + 100or 100rem 100then
    relax else     get abba [-not 100or false ] 
; while -not 100+ not false > -abba or true or true do     if -true - true > not true / 100and true or false then
-abba [true / not not 100- not not not abba [-not abba () * not not abba not false + not not not not false and true ] not not not rem true * 100] rem or not not false * true * false do relax 
end

; abba [false - not not true - not true / not false ] := array not true - false * not not true 
; while not 100* true * false or true and 100do     relax 
end

else     relax 
end


end

; leave 

end

if false rem not 100or 100- abba / false / not not not false then
    relax 
end


end


end

; while 100/ false do     relax 
end


end

; leave 

end
function abba () 
begin
    boolean array abba , abba , abba ;     relax 
end

begin
    relax 