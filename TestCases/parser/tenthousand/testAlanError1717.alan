source abba function abba ) 
begin
    get abba 
; while -not true and 100* abba [not abba / abba [false * not true ] not true + abba [not abba / abba ] / 100/ not false ] + false / + not abba [abba () rem not not not not abba [100+ not 100/ 100or true * 100] or true * not 100+ not abba / false and true ] * 100/ not not true do     relax 
end


end
function abba () to integer array 
begin
    integer abba ;     integer array abba , abba ;     if -abba () + 100or not abba [abba false ] * abba >= -false and not abba ) * not abba + false * not not false then
    call abba () 
; abba [-false * false + true * not not not abba * abba - not 100* false and 100] := array abba rem not not not 100and abba (+ not not false / not abba [/ false * not false + not 100] / abba or 100* false and abba () 
; get abba [-not 100* abba [-not or true * not 100rem not abba ] rem 100] 

end

; put "hello" ."hello" 
; if -not false 100/ not abba + true - 100then
    relax 
end


end

begin
    integer abba abba ;     leave 

end
