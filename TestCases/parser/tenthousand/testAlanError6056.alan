source abba function abba () to integer 
begin
    boolean array abba , abba ;     boolean array abba , abba , abba ;     if not not true * abba * true - not 100* false or not 100/ false rem false <> not 100+ false and 100- not false then
    get abba 

end

end
function abba (boolean abba , boolean abba , boolean abba ) to boolean 
begin
    integer ;     boolean array abba ;     put "hello" ."hello" ."hello" 
; if -abba () rem not 100rem not abba [-100] <> -abba () / 100rem abba then
    if -100- 100rem not abba [-not not + false * abba ] + 100* 100then
    abba [not abba () * not false ] := array true * abba 
; leave 
; while not not 100/ true - not not / 100or not false / not 100and 100= -not abba and not not not 100or not true and true do     if -true * and abba = false / true / not 100or 100/ not not abba then
    relax else     leave 

end

; while -false * not not 100/ not true <= -true / false and or false rem not true * abba do     relax 
end

; get abba 

end


end

; abba := array -not not not / not false + abba or abba 

end


end

begin
    abba [100/ not 100] := array -not rem not not true - false and 100and abba [100and abba () or false ] 
; get abba [false ] 

end
