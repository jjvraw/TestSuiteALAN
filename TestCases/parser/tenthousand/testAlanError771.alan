source abba function abba () 
begin
    get abba 
; put "hello" ."hello" 
; get abba [-false abba rem 100100] 
end
function abba () 
begin
    boolean array abba , abba , abba ;     integer abba ;     get abba 
; call abba () 
; if 100rem abba rem not not false = true and true then
    if -false / not true and abba ) + 100/ not true then
    call abba () 
; call abba () 
; -abba () rem not true + not abba () do     while -true rem abba * not 100< false rem abba [not false / not 100- not not not not 100] and not true do     
end

; abba := array -100rem not abba () * abba 

end


end

; leave 
; call abba () 
else     get abba false and abba + 100and true rem 100- false ] 
; put "hello" ."hello" 

end


end

begin
    boolean array abba , abba ;     relax 
end
