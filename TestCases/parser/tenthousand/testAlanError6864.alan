source abba function abba (boolean abba , integer abba , integer abba ) 
begin
abba [abba () / 100* abba ] := array not not 100
; leave 
; while true do     abba := array not false and not not true or not not not 100
; get abba 
; while not 100/ false / abba () do     relax 
end


end


end
function abba () 
begin
    integer array abba , abba , abba ;     boolean array abba , abba ;     leave 
; leave ; if true / abba / true - not false * not 100rem 100- not not 100and not abba then
    get abba [not true * not not not not false or false and not 100* not false or false * not false ] 
; leave 
; if abba * false abba [100or true / abba and true ] or not 100* false > 100or abba [-abba [-false - not abba ] and not - false / not not false - false and not false ] * not false then
relax 
end

else     call abba () 
; if true + false * true = abba and not not false * abba - abba () rem not false / not not not false then
    relax else     put "hello" "hello" 

end
; abba := -100and false 

end


end

begin
    leave 
; call abba ) 
; if 100* false rem true then
    put "hello" ."hello" ."hello" 
; get [-not abba 100* not not not 100or 100not true and not 100/ not false ] 

end


end
