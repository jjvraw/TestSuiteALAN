source abba function abba boolean abba , integer abba , boolean array abba ) to boolean 
begin
    while abba [-not 100] rem abba () + abba > true or true rem not and 100do     relax 
end

; if -100or not not false * true and false then
    relax else     relax 
end

; abba := 100and true or not not abba [-true and not not true rem not false + true + true ] * false * abba - not 100rem true 

end
function abba (integer abba , integer abba , integer array abba ) 
begin
    integer array abba , abba ;     put "hello" ."hello" ."hello" ; while 100/ not 100- false 100/ 100do     if -true / abba and 100or 100/ not not abba [abba [-true ] - false * not not true or false and not true / 100] * not true + 100rem not not abba / true then
    relax else     leave 
; get abba [-100* 100- abba () rem 100] 
; abba := array abba [not abba () rem 100rem true + ] * not abba not not not false 

end

if -* not 100* 100or true * [not not not not false + not abba [-true / true or 100and 100rem abba - abba [-100] / false abba [100] ] / abba or not true rem abba ] then
    relax else     get abba 
; leave 

end


end

; get abba 

end

begin
    integer abba , abba ;     relax 
end
