source abba function abba () to integer array 
begin
    boolean array abba , abba ;     integer array abba , abba ;     get abba [-not abba () and abba [100/ true - abba rem 100or false ] or 100- true rem abba [not 100* true rem not not abba [+ not not abba [false or not not false * false ] ] or not 100and 100/ true - 100] / abba ] 
; if not false rem not not abba () rem false + not 100rem false + abba [not abba ] then
    while -not true rem false + not false and not not false rem not true + true rem not not 100* false > -not abba rem 100and 100+ not 100or false do     put "hello" ."hello" ."hello" 
; call abba (
; if not not 100and not 100= not abba () / true - not not * not abba rem 100then
    while not not not 100/ false rem not true or false rem 100and not abba <> abba do     relax 
end

else     put 

end


end

; abba := array not false 
; [not false rem true ] := array -not not not false and abba * not false 

end


end
function abba () to integer array 
begin
    boolean array abba ;     relax 
end

begin
    while -true / true -true or false rem not false rem abba () - abba [not true * false and 100or false and false ] do     relax 
end

; while true - abba > 100or 100do     relax 

end
