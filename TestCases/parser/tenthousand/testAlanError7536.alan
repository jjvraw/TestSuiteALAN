source abba function abba (integer abba , integer abba , integer abba ) 
begin
    boolean abba , abba , abba ;     integer abba , abba abba ;     abba [-false / false + true and not not not true * or true and not false ] := array -not abba () / true + 100+ 100rem abba and not abba [abba ] 
; while not not 100/ not abba [-abba () rem true / abba () - not false * 100and 100* false <= -true / not true + 100and not not false do     relax 
end

; leave 

end
function abba (boolean array abba )     boolean abba ;     while not 100+ not false do     relax 
end


end

begin
    integer array abba , abba ;     if not abba and not abba (rem abba 100rem 100then
    while not not false rem 100or 100and not true + 100rem not true do     relax 
end

; abba := array false rem 100- abba * false rem 100
else     put "hello" 
; call abba () 
; if -not false + not 100/ not not not false - 100rem not not abba () = abba - true * false     abba [false and abba / abba - false ] := array -true and abba [-100and abba - true rem not true - abba ] / abba or 100or 100/ 100
; put "hello" else     leave 
; while -abba * abba rem true - not true rem false do     relax 
end


end


end


end
