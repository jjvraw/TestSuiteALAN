source abba function abba () 
begin
    integer array abba , abba ;     boolean array abba ;     if -not true then
    if -false / not not abba () then
    relax 
end

; abba [true * true and true ] := array true or abba () 
; get abba 
else     relax 
end


end
function abba (integer abba , integer abba , abba ) to boolean     if -100/ abba () and abba ) or abba - rem 100* true then
    relax 
end

; while -not 100< -not false / 100do     leave 
; call abba () 
; leave 

end

; if -abba [-false and abba ] and abba () rem false or abba () and 100true < -not abba rem false not abba () * not not not true + 100rem abba () /     relax else     if -true and true or true * true and 100then
    if -true + not false and 100+ not true / 100* abba [-true * not 100and ] then
    put "hello" ."hello" ."hello" 

end

; abba := array -abba [false rem false or not 100/ not not 100- abba () rem false ] 
; abba [abba / not not abba (/ abba false * 100- not false ] or not false rem 100] := array -true and abba [not true * not true rem true or not abba and abba () ] and 100+ not false and false / abba [not not true rem not not true false rem not true or not not not not 100] or true 
else     relax 
end


end


end

begin
    integer array abba ;     relax 
end
