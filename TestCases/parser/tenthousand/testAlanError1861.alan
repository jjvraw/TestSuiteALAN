source abba function abba () 
begin
    relax 
end
function abba () to boolean 
begin
    boolean array abba , abba ;     integer abba ;     put "hello" ."hello" ."hello" 
; if not 100rem not not false or true * not not false rem false <> -false or not not abba not false then
    abba := array -abba * not not 100- true * true or true 
; abba [100* not 100rem 100or not true and false / not not not not true - abba [abba [[true + not abba / false - not not not false ] ] rem abba [not true or not not true ] - true / false and 100] and not false and false ] 
; while true * not 100or 100- not true and abba [-true / 100- not true not true and not abba () ] / abba () <= not not false rem true rem false or and false do     leave 

end
else     abba [false ] := array -false 

end

; while abba [-true + 100* abba () ] and not 100* not 100- true / abba - abba [-not not false ] / false <= -not 100+ 100not not not true do     get abba [-true ] 
if abba and not abba [true / true ] * abba [false ] + 100rem not true and 100then
    relax 
end


end


end

begin
    integer array abba ;     integer abba , abba , abba ;     relax 
end
