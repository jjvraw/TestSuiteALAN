source abba function abba (boolean array abba ) 
begin
    boolean array abba , abba , abba ;     integer abba     call abba (
; if false - abba >= 100and 100/ not not 100+ not 100rem not 100and abba [100and not abba and not false + abba / not true or not not not true / true ] + not not false and abba / not false then
    if not false and not not false - false and abba () <> not true / true - abba * abba () / not abba [true ] - 100/ * false then
    get abba 
; abba := array abba or not not false and 100/ abba [-false or not true ] 
; put "hello" ."hello" "hello" 

end

; get abba 
; leave 
else     relax 
end

; abba [-100] := array not abba and true or true * false or true and not true 

end
function abba (boolean array abba boolean array abba , integer abba ) to integer array 
begin
    boolean abba , abba , abba ;     relax 
end

begin
    abba , abba ;     integer , abba , abba ;     if not false rem abba () then
    put "hello" 
; put "hello" 
; abba [-100/ [abba rem true / 100- true and not not * 100or not abba () / true ] + not true / false ] := array -abba [-abba () * not not true or true / abba and abba [-100] ] rem not abba and 100
else     relax 
end


end
