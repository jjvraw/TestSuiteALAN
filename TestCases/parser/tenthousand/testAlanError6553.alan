source abba function abba (abba ) 
begin
    if -not abba [true - not not not false and abba rem false + not 100/ false / not not not not 100] * not false rem true = -not not true rem 100* true + abba rem 100/ not false then
    call abba () 
end

; while false rem * 100- 100<> not not true / not false * false do     while false rem true + not abba * not 100- true * 100< -not not true rem false     if -100<= -false + false rem true rem 100- 100rem true and false then
    if -not true * false rem false + not true or 100then
    abba := array -abba - abba [-100rem not false * false ] 
; while -100and not 100and abba [-true rem not 100/ 100+ true rem not not false / 100] - abba <= -100+ not not 100or not not true / * do     relax 
end


end

; true and false rem false <> abba * not true rem not not not abba do     relax 
end


end

; abba [-true * true or not not true * not true ] := array abba [-not not 100* not not false ] / true rem abba () 

end

; if -true and 100rem true then
    leave 
; get abba [not not abba () rem false / false or not 100] 
else     relax 
end

; leave 

end

; if -abba then
    relax 
end


end
function abba () 
begin
    boolean abba , abba ;     integer array abba , abba ;     relax 
end

begin
    relax 
end
