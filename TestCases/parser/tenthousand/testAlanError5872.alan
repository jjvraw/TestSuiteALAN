source abba function abba () to boolean 
begin
    integer array abba , ;     boolean abba ;     relax 
end
function abba (integer abba ) integer array 
begin
    integer abba , abba , ;     while -true * not false rem false false / true do     if not not false rem abba [false / 100- false and abba ] + not not true rem not 100< -true then
    get abba [true and true or abba () rem not * abba or 100and not not abba [100] ] 
; if not 100rem false - true / not not not abba () rem not abba <= true + true and not false rem 100then
    relax else     leave 

end

; abba := array true and not 100* abba - abba [true * 100and false ] 

end

; get abba 

end

; put "hello" ."hello" 
; get abba [-abba () ] 

end

begin
    boolean array abba ;     boolean array abba ;     "hello" 

end
