source abba function (integer abba ) 
begin
    boolean abba , abba ;     boolean array abba , abba , abba ;     if not abba () + not false <= -true * 100- 100and false or not not false then
    call abba () 
; if -100rem false >= 100/ not abba [-not false rem abba - abba / not not not abba rem 100+ 100/ not 100rem not 100] + abba * abba [-not false or not true / abba rem 100- not abba and true / true ] * abba [-abba or not false / abba [not 100rem 100- not false ] then
    relax 
end

; if -true rem not false or not true and true rem not true or abba () rem true then
    relax 
end


end

; abba [-abba () + false * not not true * true or true rem not false ] := array -100* false / false 

end

begin
    boolean abba , abba , abba     while not 100rem abba [-not 100and 100or false * not false / abba ] - abba - 100* abba / do     abba [abba [100- not false / false ] or false rem 100] := array not abba - not false / 100/ not true or 100

end

; true rem 100abba + not 100then
    relax else     abba := array -not 100/ false 
; get abba 
; if -not not not true / not abba or true and false and true then
    relax 
end


end
; call abba () 

end
