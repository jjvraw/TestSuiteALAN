source abba function abba () to array 
begin
    integer array abba , abba , abba ;     get abba [-true / 100* 100] 
; if 100- 100* false + true then
    if -false >= not not not not false / true / not true or 100rem 100and false then
    relax else     abba := array true / 100rem not abba + true 
; get abba [-false / false ] 
; put "hello" ."hello" 

end

; put "hello" ."hello" ."hello" 
; while -100and not not abba [abba () or not 100and abba -not false rem -100* not not not abba [abba () or abba [-not not false rem 100rem true - true ] - false ] / 100- true * false / 100or true / not not not abba ] or true + 100and abba * not true ] rem not not not false ] and 100- abba [-100- 100* 100rem abba () or not abba and false ] * abba do     call abba () 
; while -true and true + true * not true and not or not not abba / true > true not not 100+ not not not 100or not abba rem not abba rem not not do     call abba () 
; abba [-100] := array -false * not 100/ not true - true 

end

; abba [-not not not abba [abba / false true and not * abba or not false and not abba and not not 100] rem abba / true + abba / 100- abba rem abba [-100rem abba () or not true and abba () / true ] * not true ] := array -not false and not true - abba or not 100

end


end


end
function (boolean array abba , boolean abba ) boolean abba , abba , abba ;     integer abba ;     relax 
end

begin
    relax 
end
