source abba function abba () integer array 
begin
    boolean array , abba ;     integer array , abba ;     relax 
end
function abba (integer abba , integer array abba ) 
begin
    integer array abba ;     integer array abba ;     get 
; if 100rem false + not not true and abba [-100- not not false and 100+ false ] + not false <> -abba () rem 100rem 100then
    abba := array not false and false + false / abba [-false / abba [not not 100* 100/ false ] ] / 100
; abba := array -abba (* not false * 100or true / abba * false + not not false * abba () 
; -false + abba () / not 100100and abba () rem abba < -not 100and 100* false do     abba [not 100and false / true ] := array -false * true 
; while true or not not not true and not not abba () >= not 100* not 100rem true + not abba rem false do     relax 
end


end

else     while rem not 100/ true <= not 100rem not true and not false or not true / false do     leave 
get abba [-true * not false + false + abba rem abba ] 

end


end

; while -100* 100/ 100- abba (and not not true >= 100- not false and not 100- not true / false * 100do     abba := array true rem not not not abba + false 
; if -true and false <> abba () / abba () * false - true then
    relax 
end


end


end

begin
    integer abba , abba ;     abba := array not rem not true - not true - 100* not true 
; while true <> -not abba rem not 100do     relax 
end

; while -100- true do     leave 
; while false and abba () - not not 100* false 100+ 100* abba ) / not not abba () do     relax 
end

; get abba [not not not false + not not not 100/ true ] 

end


end
