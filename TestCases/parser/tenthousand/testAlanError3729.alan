source abba function abba () to integer array 
begin
    while -true or abba () and true / 100do     while -not false rem 100and abba + false >= -not abba [not true / false - false true rem abba () or 100and false ] do     put "hello" 
; leave 

end

put "hello" ."hello" ."hello" 
end

; put "hello" ."hello" .

end
function abba (boolean array abba , boolean array abba ) to integer 
begin
    integer array , abba , abba ;     while false rem false * 100+ not not true and not true / not not not false do     if 100- not not abba + true rem 100rem abba <> not not not not not not false false then
relax 
end

; call abba () 
; put "hello" 

end

; put "hello" 
; while -true / 100and not false + 100rem true * not abba <> -100or abba () / not 100or true do     while abba / true - and 100* 100<> -false do     relax 
end



end

begin
    boolean abba , abba , abba ;     boolean array abba , abba , abba ;     abba [-not abba () - false * not not abba () - false ] := array -false / 100* 100+ not not not not not not abba and false and not not not abba [-not not not 100] 
; if false + not abba [-not true * not not not not abba [true * abba + 100rem 100] or not true or true rem true ] > not not abba * not abba or abba and not false - true and not abba rem 100then
    relax else while 100- true rem true / 100+ not false and 100/ 100> not true / not not not not true rem false + do     put "hello" 
; abba [not abba + not not true or false rem true ] := array false 
end

; get [not abba [false * not abba () + abba [-true and not not not 100and false - 100/ false or 100/ abba [-abba () rem not not not false ] rem not abba ] rem true + not 100rem 100] ] 
; if abba [-not not 100or not 100rem not 100* not abba ] rem false / true + not not not not abba or not false and abba () not not true then
    relax 
end


end


end
