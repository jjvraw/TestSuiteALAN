source abba function abba () to array 
begin
    [abba [-not not not abba ] and not 100] array false * not false * not not abba () 
; get abba [-100* not false / not not not not 100- abba and 100or true rem false ] 
; while not false rem not abba and do     abba [-not 100* 100/ not false + not ] := array true * not not abba rem false or true rem abba [not * 100or false and false ] / 100+ 100
; while abba rem not true / not false + not not false rem abba ) - false false do     get abba 
; if -abba [-not abba [-abba () * false rem abba [true * false + true ] - false rem false and not not not not true - true rem abba / not true ] or false rem not not false ] rem 100then
    relax 
end


end

; if -not not not true - not false * true / not abba + abba () and 100rem abba () then
    relax else     while not true / false - not not false abba or true / abba [-not not true * 100] do relax 
end

; get abba [-100and not false rem not not not false or 100and not false rem not not true - false ] 
end


end


end
function abba () to boolean 
begin
    boolean abba , abba ;     boolean abba , abba ;     relax 
end

begin
    put "hello" ."hello" ."hello" 
; while -100rem false or abba + not not not not 100* true not 100< -true * not abba and false do     while abba / not not not not abba [100/ false rem abba [not 100/ false and true ] ] - true * not not not 100* or 100* 100do     relax 
end

; if -false * true * abba () > -not 100/ abba [-not false / not not false ] * 100then
    leave 
; get abba false * abba or false / not not true - not true ] 
; if -not not 100* 100and not 100+ rem true / false < -true and 100then
    leave 
else     relax 
end


end

; while -false * true or not not false * abba - true / abba and not false do     leave 

end


end

; if -not not not 100/ not 100then
    relax else put "hello" ."hello" 
; get abba 
; put "hello" 

end


end
