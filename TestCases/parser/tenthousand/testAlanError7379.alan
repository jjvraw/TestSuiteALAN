source abba function abba () to integer array 
begin
    relax 
end
function abba (boolean abba , abba ) 
begin
    boolean array abba ;     integer array abba , abba ;     if -abba () and not abba () + false / 100/ not true >= -true / not true or abba + not not false and abba rem 100then
    if -abba [-false rem not false ] + not true and 100rem abba () then
    call abba () 
; if not false / not true < not not not abba [true not false / not true + true and false / not false - not true ] + 100not abba [-true ] / not 100then
    get abba [100/ not not false ] 
; if not 100not not 100and 100= -not true + true rem false * abba [false rem not 100] - not false then
    get abba 

end

else leave 

end

else     relax 
end


end

; get abba [true and not abba / 100+ true rem abba () and not abba [rem abba * true ] ] 
; abba := array -not abba or not not not true and false / abba 

end

begin
    boolean abba , abba , abba ;     while true = -abba rem not 100+ not not abba [-false - abba [-true rem true + not 100and not 100] or not true and not not not not abba () and not false ] rem not abba [true and true abba + not true and abba or abba [100rem true + abba ) ] / false / 100] or not 100and 100do     if false or 100then
    false > -not not not 100rem not true not 100rem not true * abba () + abba () then
    abba () ; abba [-and not not abba rem not not not 100] := array true rem abba / false ; leave 
else     call abba () 

end

; abba := array false 
; leave 
else     relax 
end

; get abba 

end

; if -true + false * true * not abba [not abba rem not true / 100] or 100<= not false then
    relax 
end

; get abba [true * not not abba () rem false + not true / not 100rem not not 100] 

end
