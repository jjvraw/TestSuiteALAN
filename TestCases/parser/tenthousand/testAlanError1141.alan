source abba function abba () 
begin
    relax 
end
function abba () 
begin
    boolean abba , abba , abba ;     boolean abba , abba ;     relax 
end

begin
    boolean , abba , abba ;     put "hello" ."hello" 
; abba () then
    leave 
; put "hello" ."hello" ."hello" 
; get abba [-100* false or not 100and not false ] 
    put "hello" ."hello" 
; while abba do     if true - true <> true * 100    while abba * 100/ not false + false / 100/ false - false rem false do     relax 
end


end

; abba := array -false * true / false - not true * abba [abba / 100and true or 100abba [-false * 100and true or not not false ] ] or not false / false / true 
; get abba [-not abba [not false rem true rem not not true or not not false / not true rem true + not true ] rem abba ) rem not not 100] 

end

; while abba rem not abba - not false or not not 100/ not not true false / 100- true + not not abba [true rem not abba or / not false / false ] do     abba [not not true * abba () and not true ] := array true and not false 
while -not abba () <> -true + 100- not abba [-not true and not not not not false ] rem true do     relax 
end

; get abba [-false ] 

end


end

; if 100then
    leave 
; call abba () 

end


end
