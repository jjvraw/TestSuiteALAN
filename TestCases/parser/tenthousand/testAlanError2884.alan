source abba function abba (boolean array abba , integer array abba , integer array abba ) to integer 
begin
    integer array abba , abba , abba ;     integer abba , abba ;     while false / not false and true or true * not not false - 100<> -abba [not not not true / 100] * 100- not 100rem abba do     put "hello" ."hello" ."hello" 

end

; while abba () and true / false + not 100and true rem not true do     get abba [false / not not abba [-100rem abba [not abba * 100- 100and false or not not 100] + abba -abba rem false rem true - not not abba [not true and 100/ false - false false * not false - not not false () ] / false and true or abba / true ] rem abba () ] + 100- 100and not not true ] 
; abba := array not abba 
; get abba [true and 100] 

end

; while false - true / true * false - not not not not 100> not not 100or true * 100* abba do     if abba () and false or 100or not true and abba () / 100<= -false * true / abba [-abba () true / false + 100] then
    if -true - 100and 100or not false / 100then
    call abba () 
; while true / abba () - 100/ abba [not abba [100- 100and not not false / true ] / not false rem [-true * true and true - false ] ] and 100< -100and not false / abba or abba and abba or 100* 100do     relax 
end

else     relax 
end



end


end
function abba (integer array , boolean array abba ) to boolean 
begin
    integer abba , abba , abba ;     relax 
end

begin
    while false / true rem false or false * false * 100+ not not false / true / true do     relax 
end


end
