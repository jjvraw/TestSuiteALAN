source abba function abba () to integer array 
begin
    if -abba * true and not not abba + abba - true / 100rem true = -not not true rem 100+ not not 100then
    if -true / not not not false rem not not not true + true >= false rem 100rem not abba () + false rem not not not false - 100then
    put "hello" 
; abba [not false / true not not true - not true * not true rem true ] := false * abba * true - not true and not abba () 
; put "hello" 
else     put "hello" ."hello" 
; leave 
; leave 

end

else     get abba [-not not false not true or not not abba rem not not not abba ] 

end

; leave 
; if -abba + true - not not not abba     put "hello" 
; false and not 100rem 100- false / false then
    relax else     leave 
; leave 
; while -not not false and true * not abba = -100/ abba and not abba (- false do     relax 
end


end

else     put "hello" 
; call abba () 

end


end
function abba () to integer array     integer array abba ;     boolean abba , abba ;     if not false true * 100+ 100* false then
if 100* not not abba () then
    leave 
; abba -100] := array -not true + false * abba false and abba or 100/ false * not not not not not not 100] and not 100
; while -not 100rem 100do     abba [not or not not true rem abba ] := array false and false or false / false and not true 
; while -not false - abba () <> -abba [-100] do     relax 

end


end


end

; abba := array 100
; put "hello" .

end

begin
    integer array abba , abba , abba ;     boolean array abba ;     leave 

end
