source abba function abba (boolean array abba , boolean array abba ) 
begin
    relax 
end
abba (boolean abba , boolean abba , integer abba ) 
begin
    boolean abba , abba ;     boolean abba ;     relax 
begin
    integer array abba , abba , abba ;     integer array abba ;     abba := array not not not true 
; get abba [true rem not not not not 100* not abba [abba [abba [100rem abba ] / 100and false - abba [abba true * false and abba [-not false ] - not not false or not true * false and not true ] ] rem not not not 100] ] or not abba [abba () + abba [true / 100/ abba (] * 100+ rem true and not false ] * abba [false * 100+ not abba [-not 100- not not 100rem false and true - true and not abba [true * true * not false - abba ] ] * 100+ not not abba and not false * true ] ] 
; if -not false + 100rem abba then
    if not not 100<= abba () and 100* not false + true / not true rem false + abba * not not false then
    get abba [100] 
; get abba [-true * false or true ] 
; get abba 

end

; if -false and false > -or abba [true and not abba / false or not not not not 100and true ] and abba [-false / abba [true * 100* abba () - true * 100or not not true false ] ] + abba and / abba [-100] then
    relax else     relax 
end


end


end
