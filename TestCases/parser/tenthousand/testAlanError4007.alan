source abba function abba () 
begin
    boolean array abba , abba , abba ;     relax 
end
function abba () to integer 
begin
    integer abba , abba ;     integer array abba ;     if not not false * 100- 100* not not not not abba not not 100or 100/ 100or true rem not true ] then
    relax 
end

; if true / true * 100or abba / not not 100+ false = -true - not false / 100* 100    if abba [true - true and 100+ not not not true ] rem false + not false = false * not [-not not not abba and not false rem not true + 100- 100and true ] then
    get abba [abba / 100and abba + abba * not 100- false and true ] 
; call abba () 
; abba := array -not false * not 100- 100/ abba [not false and abba rem false - true and 100rem not false ] - true 
else relax 
end


end


end

begin
    false rem not true and not abba () or 100rem not not 100< -100+ false rem 100do     relax 
end

; while -abba [-100/ not not not abba / not not true + not 100] or false do     get abba [-true rem not abba () + true / not false + false / abba * false ] 
; call abba () 
; get abba [-* true and not true + false - false ] 

end

; if -100and false - abba then
    relax else     relax 
end


end
