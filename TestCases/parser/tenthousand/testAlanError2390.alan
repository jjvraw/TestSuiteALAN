source abba abba (integer abba , boolean abba ) 
begin
    boolean abba ;     if abba [not 100] * true and false - true or 100* false and false < true * not true rem abba - not true and true or not false / not not false then
    relax else     abba := array true * not not abba and not abba [-not true rem not true ] - abba * true 

end

; get abba [-not + abba * not true or false / true * not not abba [true / false ] ] 
; if true * abba / 100< 100rem not not 100* not false then
    while -false and not 100and not abba -not abba [-abba and abba () ] and false and ] - 100rem true do     relax 
end

; while true / 100/ false + abba [not false - abba and not abba () * false - abba rem not false ] rem 100/ 100do     relax 
end


end


end
function abba () to integer array 
begin
    call abba () 

end

begin
    abba [abba [-not 100rem abba ] and abba () - not true rem abba [-not not abba + not 100/ not false + not abba () rem abba () and not not abba [-true * not not false or true rem true / not 100] ] * abba [true / false rem 100- true - false rem abba [not true + 100/ 100rem 100+ abba ] ] + not true rem abba and 100:= array -abba and not abba or false rem abba () 
; while false + true / abba rem 100+ false and 100> 100rem false - not not true do     abba [true / not 100+ not false rem 100or not false * true ] := array -true and not true - 100* not 100rem true + true * true 

; put "hello" ."hello" ."hello" 

end
