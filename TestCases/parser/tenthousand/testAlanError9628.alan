source abba function abba (
begin
    integer array , abba , abba ;     boolean array abba , abba , abba ;     relax 
end
function abba (boolean array abba , integer array abba , boolean abba ) 
begin
    boolean array abba , abba , abba     boolean array abba , abba ;     relax 
end

begin
    boolean array abba , abba ;     boolean abba , abba , abba ;     if -abba and false * true + abba / true then
    relax else     if -abba () and 100rem not abba [-abba rem not not false rem abba + not not true and true * 100] or not not 100then
    relax else     if abba [false * false rem false ] rem 100* 100then
    while -not abba [-not false rem not not not false + not true rem 100] * not not true * not not false - false / abba [-abba rem true or 100and true ] * abba () + not not not not 100* 100and abba 100* not abba / not not not false ] <> false and false * abba [-false * not not true * - not false ] do     relax 
end

; leave 
; leave 
else     relax 
end


end

abba [100* not false or true rem 100rem 100or not true rem 100/ not abba ] := array -100+ 100/ false 
; leave 

end


end
