source abba function abba () 
begin
    boolean array abba , abba     relax 
end
function abba (integer abba ) to integer 
begin
    boolean array abba , abba , abba ;     put "hello" 
; -not not not 100/ not abba [-100or not true and not false * abba ] - not abba () + abba and 100* not not false <= false - 100rem 100* not not not not not true - abba then
    relax 
end

while -100* true < not true / not not abba true or false / true and abba do     leave 
; get abba 
; if -true and true / 100+ false then
    if true and * false + 100- not abba () rem 100then
    relax else     while 100and not 100* 100or abba rem true / 100or not 100rem abba [false and false + false rem 100] * abba do     while true - not true / not false * true + 100/ not not abba [-100/ 100or true / not false ] * true do     call abba () 

end

; while not not false rem 100* not 100do     abba [false rem false + not not true and not false ] := array -100and not not not abba [-100or true + abba [-100rem not true / not not ] * 100] 
; if true then
    relax else     relax 
end


end

; if -false + true or abba [-abba or abba / not false - true ] then
    call abba ) 

end


end


end

; abba := array false / not not true rem not not not abba [-not 100or false - not not false ] + not false and not not 100rem abba [-false * abba rem 100or false and true + true and not not true and false ] or not not 100* true / true 
else     relax 
end


end


end

begin
    boolean abba abba , abba ;     relax 
end
