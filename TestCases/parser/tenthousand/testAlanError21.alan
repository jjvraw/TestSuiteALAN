source abba function abba (boolean abba , integer array abba integer abba ) to integer 
begin
    boolean abba , abba ;     relax 
end
function abba (integer abba , boolean abba ) to integer array 
begin
    while true rem not not not 100/ false = abba rem abba do     if -abba * abba - abba / not / not false then
    relax 
end

; 100* abba () / true do     call abba () 
; abba := array not false / false * 100+ not not not not or abba / abba [true - true ] 
; while abba () and true abba [-100* not not not not not 100* false + 100or 100rem true and false ] and not abba () - false do     call abba () 

end


end

; while true rem 100or true <= false false * true + true * not 100and false do     if not false and abba () - true and true > not abba rem true / abba [not false / false + 100] then
    leave 
; get abba 
; call abba () 
else     leave 

; while not abba [-100- not 100and abba [true - false / abba and 100- 100rem 100] rem abba + false * not not abba [-100* not false ] ] / not 100+ not not abba () rem not 100+ 100do     leave 

end

; if -100/ false + true and false * not false + abba rem false rem false then
    relax 
end


end


end

; while not 100and true rem false or false or 100and not not true rem not false do     call abba () ; put "hello" ."hello" 

end


end

begin
    integer array abba ;     boolean array abba , abba , abba ;     call abba () 

end
