source abba function abba () to boolean array 
begin
    boolean abba , abba ;     leave 
; call abba () 
; while -abba (rem not not not abba () or 100/ true > -not not not 100or not false / abba - abba [false rem true and not 100- not not not not not true / true rem abba ] rem true do     if -false * false > -100* abba + true then
    while -100and true >= -not abba * false / not false do     get abba 
; if -/ 100/ not false then
    relax else     call abba () 

end


end

; if -not 100- true / true <> -true - false * abba [-not not false and true / abba [-false / false * false ] - true rem true ] * not 100or / false then
    leave 

end

; while -true rem not 100/ not not true do     relax 
end

else     get abba [100+ true / abba 
; if abba (or not 100rem true and true - true then
    relax 
end

; put "hello" 
end

; call abba () 

end


end
function abba (boolean array abba , integer array abba , integer array abba ) 
begin
    boolean array abba ;     boolean abba , abba , abba ;     call abba (
; put "hello" ."hello" 
; put "hello" 

end

begin
    boolean abba ;     boolean array abba ;     while abba rem true * false + not 100do     abba := array -100rem not false rem abba () 
; get abba [-abba () * false * 100or true ] 
; call abba () 

end

; leave 
; leave 

end
