source abba function abba () to integer 
begin
    integer abba ;     boolean array abba , abba , abba ;     leave 
; while -not 100<> true rem not abba rem not not abba or 100rem false - not not true do     abba := array -false / not not - not 100/ true and true or not not not not false and 100
; abba := array not false + not not abba [-not not false / not not false or not not 100] * not abba [false or abba / abba + false / false and 100] or not false / false rem not 100
; if -true / not abba and 100- true and false rem 100then
    relax 
end


end

; if -abba false and not not abba () < 100+ abba [abba ] / true or not false and 100then
    call abba () 
; if -false * abba [not abba / not 100- false / not not not false rem not false + false * not not not false     get abba [false + abba () / true ] 
; abba [-true rem true or 100+ false ] := array -false * true or false - not 100
; while not not abba + not false or * not true < 100do     put "hello" ."hello" ."hello" 
; if -not not not true - abba     get abba 
; get [-not true * not 100+ 100+ 100rem true and not not abba ] 
; abba [-not ] := array -not true / not false * abba 

end


end


; while -true and not false * false - - abba / not 100and 100    relax 
end

    relax 

end

begin
    boolean abba , abba ;     boolean abba , abba ; relax 
end
