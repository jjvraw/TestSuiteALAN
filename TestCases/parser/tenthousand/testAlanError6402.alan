source function abba () to integer 
begin
    relax 
end
function abba (boolean abba , boolean abba ) 
begin
    integer abba abba ;     relax 
end

begin
    abba := array -not false / 100/ true or not abba [-100/ true and not not false + not not true ] rem not abba / abba or false and abba rem not false 
; while not false or abba or not not 100* false = -not false / 100* true - not 100- not 100rem 100* not abba do     call abba () 
; if false or abba - true rem not abba then
    if -abba [not 100- abba * not not not 100/ true or false and 100/ abba [100/ true ] then
    while true rem 100/ not true do     leave ; call abba () 

end

    relax 
end

; while 100or true rem 100do     if true rem false rem true then
    while -abba or true do     get abba [-not 100/ 100+ abba () ] 
; put "hello" 
; leave 

end

; call abba (
if false rem not abba () 100not true * not 100then
    relax else     put "hello" 
put "hello" ."hello" 

end


end


; while -not not not true rem not 100> 100* true do     relax 
end

else     while -false - not false or 100rem 100do     while -true not not abba rem not abba + abba and not not 100rem false = not true / not not 100not 100or true do     abba := array true rem not 100

end

; put "hello" ."hello" 

end

; put "hello" ."hello" 
; if -abba () / not 100then
    put "hello" ."hello" 
; put "hello" 

end


end


end

; abba true rem true * not false 

end
