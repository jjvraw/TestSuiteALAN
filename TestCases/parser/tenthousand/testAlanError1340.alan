source abba function abba () 
begin
put "hello" 
; if 100or true rem abba () rem 100<= not not not true * not false + false rem true + true then
    relax 
end

; if true * abba [not not 100* not abba [-abba * not true - abba and not abba () + not abba [not 100/ 100+ not abba () ] ] * 100+ not not not 100* abba / true or ] rem not not not false or false and abba () -not 100+ not abba () then
    relax 
end


end

begin
    boolean array abba ;     put "hello" ."hello" ."hello" 
; while -not true / abba [100- true or abba [-not not abba [-false and true * 100] * not not abba () + false and not not abba ] ] do     abba [-not not true and not abba () * false - false or false rem abba [-abba () and not not not abba [false ] - not true and abba ] * abba () ] := array not true * not true - not false and 100and not true 
; abba := array abba [true and 100not abba [-100rem true * not false - not not abba ] or false * not not 100and abba ] * abba or not false rem not abba [not true ] or not not true / not not 100* false 
; while * abba and abba () or not false - 100* false do     while not not 100* abba / abba or not 100do     while true and abba [100+ not abba [-true and 100/ not false ] - false and not not 100rem 100] + not not not not not not not not - 100not not abba () do     abba [-100abba () rem not not 100- true / true ] array -100/ not abba rem abba 

end


end


end


end


end
