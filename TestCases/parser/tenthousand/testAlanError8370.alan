source abba function abba () to integer array 
begin
    put "hello" ."hello" 
; leave 
; get abba [not not true + true / 100and false or not not abba () ] 

end
function abba () 
begin
    boolean abba , abba ;     boolean abba , abba , abba     abba [-100- false + true / 100] := array -not abba () and false and not not not not not false + abba and not true rem abba or not true 
; put "hello" ; if not 100/ and 100+ true rem not 100/ 100+ not abba () > abba and true then
    while abba () <> true * true * not false - false and false - 100/ 100do     abba [-abba and not not true rem true - not true and not true ] := array -abba () 
; put "hello" ."hello" ."hello" 
; put "hello" ."hello" 

; if not 100/ not abba () / not true - false then
    relax else     while -abba () - true * [-abba [false or not not true rem abba [-not abba () * true or not 100rem not not true and false - 100abba rem false ] ] / abba + abba [-false rem true rem not false or 100] rem not abba / not not not false ] / 100or true / true do     relax 
end

; put "hello" ."hello" ."hello" 

end


end


end

begin
    boolean abba , abba , abba ;     integer abba , abba , abba ;     relax 
end
