source abba 
begin
    integer abba , abba , abba ;     integer abba , abba ;     while 100and abba = -not abba * false * 100do     if abba () * not not false or 100/ abba / not false - not false * false and not true < false * not 100+ not 100/ 100/ not false or 100rem abba () * not true then
    abba () 
; put "hello" ."hello" ."hello" 
; while -not not abba * not not abba () / abba - abba [-100or not abba 100rem not not not false or ] - not true rem not abba [-100- ] <= not true rem abba [abba [-not 100+ not false / abba () and not not true ] / false or not 100/ false rem not not 100or abba () / 100] - not false * false do     abba [-not true * not abba ] := array not not abba * not true and not false 
; abba := array true and not true and not abba or true + not true 

end

else     relax 
end


end

; call abba () 
; while abba () * true - false * false do     leave 
; if -not not true / 100> -abba false / true ] and false * then
    put "hello" 
else     relax 
end

; while -100and not 100and true > -true rem abba - not true / true do     leave 
; if 100rem false and 100> not not not not not false and not not abba () / not 100+ not true / not abba [not false + not and not not false and true - not abba ] rem true or not true and abba () then
    relax else     relax 
end


end


end


end
