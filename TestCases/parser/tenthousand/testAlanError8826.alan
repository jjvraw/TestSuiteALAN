source abba function abba () 
begin
    abba := array -not 100and not abba (rem false or false and not true / true + not not not not / false 

end
function abba (integer abba , integer abba , boolean array abba 
begin
    relax 
end

begin
    integer abba , abba , abba ;     integer array abba , abba ;     if abba [true - not not not true / true ] or false rem false or () true / abba () then
    relax else     while false rem not not false and not 100or not not true and not 100or not false do     put "hello" 
; leave 
; abba [-not 100] := array * not not abba () / not 100+ true and true rem false or false 

end

; leave 

end

; while -not not abba [abba ] * not false - not abba () do     abba := array 100

end

; get abba [-true - abba or not abba 100and or false + true * true rem 100] rem not abba and abba [-not 100rem abba or false or abba rem not true rem abba ] ] 
end
