source abba function abba () 
begin
    boolean abba , abba ;     integer array abba , abba , abba ;     call abba (
; while -abba * not abba [not 100true / abba ] or false rem 100- false and not abba () / abba < -100rem not not true and not 100+ abba () rem not true - false / abba rem not true do     relax 
end

; if - abba () < false then
    put "hello" 
; get abba 
; leave 
else     put "hello" ."hello" 
if 100* abba / false = -true rem not false * 100- not 100+ then
    put "hello" 
else     relax 
end

; while abba rem abba or 100* not false rem not true + 100do     relax 
end


end


end
function abba () to integer 
begin
    boolean array abba ;     relax 
end

begin
    if true not 100+ abba < false and not abba - false then
    while true and 100or false > -not 100and true do     relax 
end

; abba [-abba * not 100] := array not abba + 100/ not not 100+ false * not 100

end


end
