source abba function abba (integer abba , integer abba ) 
begin
    integer abba , abba , abba ;     while abba + not true and 100< not abba [-true ] - true rem abba do     abba [-not not false / not 100- true ] := array not false / false / abba () - abba () - abba and true 

end

; abba [-abba [-not abba [-not 100* true - not false / false / not abba - not not abba [not not 100or not not abba [false + true / abba or 100and false ] * false / true + not true / not not not 100] and 100* not not false ] and abba * not abba () ] and not not false rem false - not abba [abba () and not abba and 100+ true rem not abba ] * 100or true ] := array -true 
if abba () / 100and not false then
    while -abba () and 100/ false + 100+ not 100/ abba [100rem abba ] rem abba <= abba () - abba do     relax 
end

; while -false or not false - abba do     if -not 100/ true and not 100+ not abba -100* not not false or 100rem not abba () / abba () ] - not not not 100* abba / 100>= true * true / 100then
    
end


end


end


end

begin
    boolean array abba ;     
end
