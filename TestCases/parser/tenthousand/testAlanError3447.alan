source abba abba () 
begin
    abba [-abba [abba - abba and true - not not abba () * 100] and false or true ] array -not not [abba [100and not not false rem abba or abba and 100/ not not false ] - not 100+ false and not not 100] + not false 
get abba [-true - not true and not 100] 
; abba := array false * true rem false 

end
function abba (boolean abba , boolean array abba ) to boolean array 
begin
    leave 

end

begin
    boolean array abba , abba ;     boolean abba , abba ;     if 100+ not not abba / not false and false + abba [true rem 100- true / abba [false or not abba / 100rem false ] ] / abba rem not true then
    while -100rem not abba + 100* 100+ 100and false / not 100do     relax 
end

; get abba [true ] 
else     relax 
end

; leave 
