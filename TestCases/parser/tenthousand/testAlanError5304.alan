source abba function abba ) to boolean 
begin
    boolean array abba ;     boolean array abba ;     if 100and not false then
    get abba [true ] 
; leave 

end


end
function abba () 
begin
    boolean abba , abba , abba ;     integer abba ;     if abba / not false <= false then
    while not not not true + not true and true rem not not not true > 100and abba + false and not true rem true do     if -not not abba [true / abba () rem false ] rem false then
    relax 
end


end

; put "hello" ."hello" ."hello" 

end

; call abba () 
; abba [100] := array 100and abba rem not 100

end

begin
    while 100do     relax 
end

; get abba [-false + not abba () ] 
; abba := array abba - abba [true * not 100- abba () rem false - 100/ true ] * abba [-false ] 

end
