source abba function abba () 
begin
    boolean abba , abba ;     integer abba ;     if -true - false - abba [not abba - 100rem 100then
    relax 
end


end

begin
    boolean abba , abba , abba ;     get abba [100and not true - not not true and abba * not not false ] 
; while false / 100/ false - 100<= not not abba () true 100- not false and not 100- 100/ not not abba [false + true rem 100] * not abba [-abba * abba (] do     while -100* abba and not 100+ not abba * false * not false - abba () * abba * 100>= -true and not abba [not false * abba ] / abba + not abba / not false do     relax 
end

; call abba ) 
; if not abba or not 100+ 100/ not 100* 100then
    if + not not true * not not 100* true or rem not not 100then
    abba [not abba () / false ] := array not 100and 100/ not false + true and 100* false + not 100and abba ) 
; while 100/ not 100do     relax 
end


end

; call abba () ; leave 

end


end

; get abba 

end
