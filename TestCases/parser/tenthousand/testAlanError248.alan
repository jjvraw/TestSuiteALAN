source abba function abba (integer abba , integer abba , boolean abba ) 
begin
    integer array abba , abba , abba ;     [-not not abba [-100rem 100- true / not abba [-true + true * 100* true + 100and abba () 100] rem abba ] + not true + 100/ 100] := array not not false and not abba () or 100
; put "hello" ."hello" 
; get abba [-false * 100+ abba [not false and not not not 100or not false / abba [not 100not not 100- 100and 100/ not false ] rem not 100] rem not not true and false ] 

end
function abba (integer array abba , integer array abba ) to boolean 
begin
    integer array abba , abba ;     not false do     relax 
end

; while -abba and abba <= abba and false do     while false or 100or abba [-not false ] >= false * 100/ not abba () do     relax 
end

; leave 

end

; abba := array abba () / true rem false 

end

begin
    boolean array abba ;     boolean abba ;     get abba [100* true ] 

end
