source abba abba (boolean abba , integer array abba ) 
begin
    integer array abba abba ;     boolean array abba ;     if 100and 100rem not 100- 100then
    while -abba [true / not 100* 100+ false and not abba and not not not false ] or not true do     if -false or false - false then
    leave 
; get abba ; get abba [not not false + abba [abba () / not false or false and not abba * abba () ] ] 
else     [false and not true and true or not true - not 100] := array false + not 100rem not true + not not true 

end

; call () 
; get abba 

end

else     
end


end
abba (integer array abba ) 
begin
    boolean abba , abba , abba ;     relax 
end

begin
    integer array abba , abba , abba ;     put "hello" 
; while -false - not not abba () - false > not abba rem not 100+ false and false * abba () or not not not not and 100do     false and abba and false <> not not 100rem abba - not true rem not false / false or abba [100+ 100or false and false ] * false do     relax 
end


end


end
