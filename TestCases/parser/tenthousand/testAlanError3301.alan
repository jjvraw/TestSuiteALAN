source abba function abba (boolean abba , boolean array abba , integer array abba ) 
begin
    integer array abba , abba , abba ;     boolean abba , abba , abba     leave 
; abba [abba () / false - not 100and true + abba () and true rem true ] := array -- not true * true rem 100- abba [100and not 100/ false or abba * false * true or true ] rem not true 

end

begin
    boolean array abba , ;     integer abba , abba , abba ;     while false do     abba [-false rem 100/ abba () ] and 100true 100<> -not 100/ not not abba + true then
    relax 
end


end

; if -abba () / not / not true + true and abba () > -false     get abba 
; abba := array -100/ abba and true + not true rem not false / false - abba / abba 
else     relax 
end

; abba [abba () and not false - 100and not not true and true ] 

end
