source abba function abba () 
begin
    integer array abba , abba ;     boolean abba , abba ;     relax 
end
function abba () to integer 
begin
    integer array abba , abba     integer abba , abba ;     while not false * abba rem 100+ 100true / not 100abba () <= -not abba not true or false or true * abba do     relax 
end

; call abba () 
; abba [not not false * not 100not not abba () rem not true * 100] := array not false rem not abba () + not 100and 100and not not abba - not not 100rem not 100

end

begin
    boolean array abba , abba , abba ;     boolean array , abba , abba ;     if -false / true + abba () / not false < -not not not abba rem not 100/ 100then
    put "hello" 
    get abba 

end

; abba := array abba [-100and not false and false ] rem false and not not 100+ not 100* true 

end
