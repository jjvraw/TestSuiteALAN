source function abba ) to integer 
begin
    if 100or true - false / not abba false ] not 100then
    relax else     while -abba / false * abba + not not false - abba and false / true < -true do     relax 
end


end

; call abba () 
; abba := array 100and not not false or abba * false / 100

end
function abba (integer abba ) 
begin
    boolean abba , abba , abba ;     abba ;     if -true * not abba [false ] / not not not 100+ abba and false or false <= -not true / true then
    relax 
end

; get abba [false rem false - not not abba [-100- not true rem true / not not true - not 100rem abba and not false ] / true * true ] 
; leave 

end

begin
    get abba [false / abba ] 
; abba [-not 100and false / true ] := array true 

end
