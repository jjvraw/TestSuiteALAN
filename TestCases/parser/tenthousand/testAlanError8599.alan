source abba function abba (boolean abba , boolean array abba ) to boolean array 
begin
    integer abba ;     boolean abba , abba ;     get abba 
; abba := array -100/ abba * false - not false 

end
function abba (boolean array abba , boolean array abba , integer array abba ) to boolean array 
begin
    integer array abba , abba , abba ;     if -not not false not abba -abba [100/ 100/ abba ] rem false * true or not true * not true abba ] and not not not not false then
    while abba [abba ) or 100] * not [-abba [-true / abba [-false rem abba (and 100] + true ] + not not not 100] / not not abba > -abba * abba / false do     get abba 
; abba := array -true or abba 

end

; call abba () 

end

; leave 
; -not true and 100do     relax 
end


end

begin
    call abba () 

end
