source function abba () 
begin
    boolean array abba , abba , abba ;     integer ;     call abba () 
; while abba and not not not not abba [-abba [true / abba / false - false rem abba () - true / true rem abba ] - true / false - true * abba () ] abba do     relax 
end


end

begin
    boolean abba , abba ;     boolean abba , abba , abba ;     while not 100* 100rem true + abba () * abba () or false rem not false rem abba < -abba () rem not true / not abba + true * false or not not not 100/ true do     if false / false rem not true then
    put "hello" ."hello" 
; abba := array abba () * true * 100- false 

end


end

; call abba () 
; abba := array false and not not 100+ not false / not abba ) and not not abba + true / 100* not not not true 
