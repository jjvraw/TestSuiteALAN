source abba abba (integer array abba , boolean array abba , boolean abba ) to integer 
begin
    boolean abba , abba ;     while 100do     leave 

end

; if abba / not 100- true * false / false or not false rem not not abba > true then
    put "hello" 
; if -100/ not false or 100rem false and true or 100/ abba rem abba <> -true and abba then
    put "hello" ."hello" 
; while -abba do     leave 
; while not true and not false rem true or not false and not abba () do     abba [-not not true ] := array -not false rem true - 100* not abba [100and not not not false or false ] * false 

end

; abba [false * false / abba [-true + 100- abba [-not true / not not not abba ] ] ] := array -not 100true - 100* not true 

end
else     put "hello" 
; get abba 
; abba := array -not not not 100not 100
end

else     if false then
    relax 
end

; while -not not abba * 100or not rem abba [not not 100and 100and 100or true or 100* and true ] and true - not true / abba () do     leave 
; leave 
; leave 

end


end

; if not abba [100] then
    abba := array -abba [-not 100/ abba / false ] or abba () / abba [true + 100rem not false 
; leave 
else     abba -abba - not false and true - not 100] := array not abba rem true * not not not not 100or false + 100
; put "hello" ."hello" ."hello" 
; abba := array 100rem false or true / true and abba 

end


end

begin
    integer abba ;     abba := array -abba () * true / 100- true and not false * not not not abba - not false 
end
