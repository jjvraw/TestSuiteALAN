source abba function abba () to boolean 
begin
    boolean array abba ;     boolean abba ;     while false do while true and not false <= true + abba do     while 100rem not abba - not true * abba - false / not not true <> -true or false do     put "hello" ."hello" 
; if not 100and abba ) and not abba [not false and not true ] - not true rem not abba [true and * 100+ true and abba [not not not abba [-not not true * not not false rem abba - not not true * abba rem not not true ] or not 100rem not abba [-abba or false rem 100] ] or true and not 100rem abba () ] > -true rem * not true + false * abba then
    relax 
end


end

; call abba () 

end

; leave 
end


end
function abba () to integer array 
begin
    if abba / false or abba * 100> -abba [not not abba [abba [-100rem not false + not abba / not not false * true or not true ] / false / true or abba / not 100rem not 100or not not not 100/ 100* false ] rem false and not not abba [-false + not not abba () / not true + 100] + not abba - not not true / false / abba ] * not true then
    relax 
end

; put "hello" 

end

begin
    integer array abba ;     while not 100rem true and abba - true and not not false and false do     abba := array true and not 100* not abba 
; abba [-false * false false or not abba [not 100rem true ] ] := array -false 

end


end
