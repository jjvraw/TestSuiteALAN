source abba function abba (boolean abba , boolean abba , boolean abba ) to boolean array 
begin
    array abba , abba ;     abba := array -false rem true and abba () - not false * false rem abba () + not 100rem true not not true 
; call abba () 

end
function abba () 
begin
    relax 
end

begin
    boolean ;     get abba 
; abba not not abba () * false ] := array true rem abba () * false - false / abba () rem 100or not false 
; while -not not not abba / not false or not abba () - true > -not 100/ 100true or not abba [100/ not true - abba () - 100/ not abba [true * false ] / true ] * false + abba () and not not true * false do     relax 
end


end
