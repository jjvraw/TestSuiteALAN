source abba function abba () 
begin
    boolean abba , abba , abba ;     relax 
end
function abba () 
begin
    boolean abba , abba , abba ;     boolean abba ;     if -100/ not not false * false - not not not abba - abba () * abba () not true * false and 100+ not abba rem false then
    if -abba [false / false or 100and abba () or not not not not true rem not abba [-false and abba () ] / abba ] * abba and not not not 100then
    
else     relax 
end


end

; if -not not false / 100/ false - not not 100/ abba [-false - true or not not 100/ 100] / not not abba [-true and abba * not not 100false * 100rem not not abba [-100+ 100] ]     put "hello" ."hello" ."hello" 
; if not not not 100/ abba - false + not not and not false < -not false - not 100* abba [not true / abba and not not true ] + 100rem true / true then
    relax else     relax 
end

else     call abba () 

end


end

begin
    boolean array abba , abba , abba ;     integer abba ; call abba () 
; put "hello" 
; get abba [not abba [-100* not abba () ] * true / false or false and 100and 100- true rem false rem 100] 

end
