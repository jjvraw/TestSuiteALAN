source abba function abba ) 
begin
    relax 
end
function abba () to integer array 
begin
    boolean array abba , abba ;     abba () 
; put "hello" 
; while not not true rem not not 100rem true - not false rem abba () abba [-true / false * 100- not abba ] or not not 100do     relax 
end


end

begin
    integer array abba , abba ;     integer abba , abba , abba ;     while not false and 100* not not 100do abba := array -false and not not 100- true false rem abba [true * not not abba - true rem not false or false and false ] 
; if -true or false * not 100rem 100> -100rem not 100+ abba () then
    abba := array not 100- 100rem abba [false and abba () + true rem not 100/ 100] true / not true * false 
; while abba [-false or 100or not true and false - true rem false * not abba or 100/ 100rem false < -false + not abba [not not true / 100/ abba [100- false and 100* not false ] + false / 100and not abba do     abba [abba and not not false ] := array not abba [-100+ not not 100* () * not false ] or and abba [100rem not false or / false / true + 100/ abba * 100] rem true - abba / not 100* not abba ; call abba () 
; put "hello" 

end

; leave 

end


end

; if -abba * false or false - abba () rem 100rem true then
    relax 
end


end
