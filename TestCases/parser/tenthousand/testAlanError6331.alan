source abba function abba (boolean array abba , boolean abba , boolean abba ) to boolean 
begin
    boolean array abba ;     relax 
end
function abba () to boolean array 
begin
    integer array abba , abba , abba ;     put "hello" ."hello" ."hello" 
; abba [-rem true - abba () and false ] 
; get abba [not not 100* not not not not not true rem not abba [-false or true * not true * 100] + 100/ not not and true + abba () ] 

end

begin
    boolean array abba , abba , abba ;     boolean array abba ; if not not true >= -true rem abba * true or false * not false / not not not true + false then
    relax else     relax 
end

; abba := array false + not false - abba / false rem not 100
; while [-false / not not 100* not true - false rem abba and 100] / not 100* true + not 100rem not not not true / 100+ not not 100rem 100= 100+ abba + not 100rem not not not false / not abba [false ] do     relax 
end


end
