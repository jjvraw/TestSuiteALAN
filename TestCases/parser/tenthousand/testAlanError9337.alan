source abba function abba (boolean array abba ) 
begin
    integer abba , abba , abba ;     boolean array abba , abba ;     relax 
end
function abba () 
begin
    while abba [-not false * not true * false ] or abba [not abba [abba * true + true + not false * not false and abba () ] rem not 100/ abba () ] do     abba := array -abba () and not 100- 100and not 100rem true 
; abba [false * true ] := array -100/ abba [-not abba / not not abba [-not abba [-100/ abba * not 100- not not not true and not false + false ] * true - abba [-not not 100and not not false ] - 100] / true - abba / 100and 100] / not not not 100

end

; if -100and abba / true >= true and 100+ abba [false rem 100and not true + 100] * true false or false * 100then
    relax 
end

; while -not true rem not true and 100- abba do     abba [not true and not not not not 100and true ] := array false - not false rem not not not false 
; if true then
    relax 
end


end


end

begin
    relax 
end
